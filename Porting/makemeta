#!./perl -w
# this script must be run by the current perl to get perl's version right
#
# Create a META.yml file in the current directory. Must be run from the
# root directory of a perl source tree.

use strict;
use warnings;
use lib "Porting";

use File::Basename qw( dirname );


BEGIN {
    # Get function prototypes
    require 'regen/regen_lib.pl';
}


my $file = "META.yml";
my $new_file = "META.yml-new";

use Maintainers qw(%Modules get_module_files get_module_pat);

my @CPAN  = grep { $Modules{$_}{CPAN} } keys %Modules;
my @files = ('lib/unicore/mktables', 'TestInit.pm',
	     'Porting/Maintainers.pm', 'Porting/perldelta_template.pod',
	     map { get_module_files($_) } @CPAN);
my @dirs  = ('cpan', 'win32', grep { -d $_ && $_  !~ /^cpan/ } map { get_module_pat($_) } @CPAN);

my %dirs;
@dirs{@dirs} = ();

@files = map { "    - $_" }
  grep {
    my $d = $_;
    my $previous_d = '';
    while(($d = dirname($d)) ne "."){
      last if $d eq $previous_d; # safety valve
      last if exists $dirs{$d};
      $previous_d = $d;
    }

    # if $d is "." it means we tried every parent dir of the file and none
    # of them were in the private list
    
    $d eq "." || $d eq $previous_d;
  }
  sort { lc $a cmp lc $b } @files;

@dirs  = map { "    - $_" } sort { lc $a cmp lc $b } @dirs;

my $fh = safer_open($new_file);

local $" = "\n";
print $fh <<"EOI";
name: perl
version: $]
abstract: The Perl 5 language interpreter
author: perl5-porters\@perl.org
license: perl
resources:
  homepage: http://www.perl.org/
  bugtracker: http://rt.perl.org/perlbug/
  license: http://dev.perl.org/licenses/
  repository: http://perl5.git.perl.org/
distribution_type: core
generated_by: $0
no_index:
  directory:
@dirs
  file:
@files
EOI

safer_close($fh);
rename_if_different($new_file, $file);
