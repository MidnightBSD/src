#!/bin/sh
#
# $NetBSD: moused,v 1.1 2001/10/29 23:25:01 augustss Exp $
# $FreeBSD: src/etc/rc.d/moused,v 1.9 2005/01/16 03:12:03 obrien Exp $
#

# PROVIDE: moused
# REQUIRE: DAEMON cleanvar
# KEYWORD: nojail

. /etc/rc.subr

name=moused
rcvar=`set_rcvar`
command="/usr/sbin/${name}"
start_cmd="moused_start"
_pidprefix="/var/run/moused"
pidfile="${_pidprefix}.pid"
_pidarg=
load_rc_config $name

# Set the pid file and variable name. The second argument, if it exists, is
# expected to be the mouse device.
#
if [ -n "$2" ]; then
	checkyesno moused_nondefault_enable &&
	    eval moused_$2_enable=\${moused_$2_enable-YES}
	rcvar=`set_rcvar moused_$2`
	pidfile="${_pidprefix}.$2.pid"
	_pidarg="-I $pidfile"
fi

moused_start()
{
	local ms myflags myport mytype

	# Set the mouse device and get any related variables. If
	# a moused device has been specified on the commandline, then
	# rc.conf(5) variables defined for that device take precedence
	# over the generic moused_* variables. The only exception is
	# the moused_port variable, which if not defined sets it to the
	# passed in device name.
	#
	ms=$1
	if [ -n "$ms" ]; then
		eval myflags=\${moused_${ms}_flags-$moused_flags}
		eval myport=\${moused_${ms}_port-/dev/$ms}
		eval mytype=\${moused_${ms}_type-$moused_type}
	else
		ms="default"
		myflags="$moused_flags"
		myport="$moused_port"
		mytype="$moused_type"
	fi

	echo -n "Starting ${ms} moused:"
	/usr/sbin/moused ${myflags} -p ${myport} -t ${mytype} ${_pidarg}

	_mousechar_arg=
	case ${mousechar_start} in
	[Nn][Oo] | '')
		;;
	*)
		echo -n ' mousechar_start'
		_mousechar_arg="-M ${mousechar_start}"
		;;
	esac

	for ttyv in /dev/ttyv* ; do
		vidcontrol < ${ttyv} ${_mousechar_arg} -m on
	done
	echo '.'
}

run_rc_command $*
