.\" Copyright (c) 2000 Christoph Herrmann, Thomas-Henning von Kamptz
.\" Copyright (c) 1980, 1989, 1993 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Christoph Herrmann and Thomas-Henning von Kamptz, Munich and Frankfurt.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgment:
.\"      This product includes software developed by the University of
.\"      California, Berkeley and its contributors, as well as Christoph
.\"      Herrmann and Thomas-Henning von Kamptz.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $TSHeader: src/sbin/growfs/growfs.8,v 1.3 2000/12/12 19:31:00 tomsoft Exp $
.\" $FreeBSD: src/sbin/growfs/growfs.8,v 1.24 2005/01/18 10:09:34 ru Exp $
.\"
.Dd September 8, 2000
.Dt GROWFS 8
.Os
.Sh NAME
.Nm growfs
.Nd grow size of an existing ufs file system
.Sh SYNOPSIS
.Nm
.Op Fl Ny
.Op Fl s Ar size
.Ar special
.Sh DESCRIPTION
The
.Nm
utility extends the
.Xr newfs 8
program.
Before starting
.Nm
the disk must be labeled to a bigger size using
.Xr bsdlabel 8 .
If you wish to grow a file system beyond the boundary of
the slice it resides in, you must re-size the slice using
.Xr fdisk 8
before running
.Nm .
If you are using volumes you must enlarge them by using
.Xr vinum 8 .
The
.Nm
utility extends the size of the file system on the specified special file.
Currently
.Nm
can only enlarge unmounted file systems.
Do not try enlarging a mounted file system, your system may panic and you will
not be able to use the file system any longer.
Most of the
.Xr newfs 8
options cannot be changed by
.Nm .
In fact, you can only increase the size of the file system.
Use
.Xr tunefs 8
for other changes.
.Pp
The following options are available:
.Bl -tag -width indent
.It Fl N
.Dq Test mode .
Causes the new file system parameters to be printed out without actually
enlarging the file system.
.It Fl y
.Dq Expert mode .
Usually
.Nm
will ask you if you took a backup of your data before and will do some tests
whether
.Ar special
is currently mounted or whether there are any active snapshots on the file
system specified.
This will be suppressed.
So use this option with great care!
.It Fl s Ar size
Determines the
.Ar size
of the file system after enlarging in sectors.
This value defaults to the size of the raw partition specified in
.Ar special
(in other words,
.Nm
will enlarge the file system to the size of the entire partition).
.El
.Sh EXAMPLES
.Dl growfs -s 4194304 /dev/vinum/testvol
.Pp
will enlarge
.Pa /dev/vinum/testvol
up to 2GB if there is enough space in
.Pa /dev/vinum/testvol .
.Sh SEE ALSO
.Xr bsdlabel 8 ,
.Xr dumpfs 8 ,
.Xr fdisk 8 ,
.Xr ffsinfo 8 ,
.Xr fsck 8 ,
.Xr newfs 8 ,
.Xr tunefs 8 ,
.Xr vinum 8
.Sh HISTORY
The
.Nm
utility first appeared in
.Fx 4.4 .
.Sh AUTHORS
.An Christoph Herrmann Aq chm@FreeBSD.org
.An Thomas-Henning von Kamptz Aq tomsoft@FreeBSD.org
.An The GROWFS team Aq growfs@Tomsoft.COM
.Sh BUGS
The
.Nm
utility works starting with
.Fx
3.x.
There may be cases on
.Fx
3.x only, when
.Nm
does not recognize properly whether or not the file system is mounted and
exits with an error message.
Then please use
.Nm
.Fl y
if you are sure that the file system is not mounted.
It is also recommended to always use
.Xr fsck 8
after enlarging (just to be on the safe side).
.Pp
For enlarging beyond certain limits, it is essential to have some free blocks
available in the first cylinder group.
If that space is not available in the first cylinder group, a critical data
structure has to be relocated into one of the new available cylinder groups.
On
.Fx
3.x this will cause problems with
.Xr fsck 8
afterwards.
So
.Xr fsck 8
needs to be patched if you want to use
.Nm
for
.Fx
3.x.
This patch is already integrated in
.Fx
starting with
.Fx 4.4 .
To avoid an unexpected relocation of that structure it is possible to use
.Nm ffsinfo
.Fl g Ar 0
.Fl l Ar 4
on the first cylinder group to verify that
.Em nbfree
in the CYLINDER SUMMARY (internal cs) of the CYLINDER GROUP
.Em cgr0
has enough blocks.
As a rule of thumb for default file system parameters one block is needed for
every 2 GB of total file system size.
.Pp
Normally
.Nm
writes this critical structure to disk and reads it again later for doing more
updates.
This read operation will provide unexpected data when using
.Fl N .
Therefore, this part cannot really be simulated and will be skipped in test
mode.
