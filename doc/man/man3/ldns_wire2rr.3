.ad l
.TH ldns 3 "30 May 2006"
.SH NAME
ldns_wire2rr, ldns_wire2pkt, ldns_wire2rdf, ldns_wire2dname \- convert from wire format to host type

.SH SYNOPSIS
#include <stdint.h>
.br
#include <stdbool.h>
.br
.PP
#include <ldns/ldns.h>
.PP
ldns_status ldns_wire2rr(ldns_rr **rr, const uint8_t *wire, size_t max, size_t *pos, ldns_pkt_section section);
.PP
ldns_status ldns_wire2pkt(ldns_pkt **packet, const uint8_t *data, size_t len);
.PP
ldns_status ldns_wire2rdf(ldns_rr *rr, const uint8_t *wire, size_t max, size_t *pos);
.PP
ldns_status ldns_wire2dname(ldns_rdf **dname, const uint8_t *wire, size_t max, size_t *pos);
.PP

.SH DESCRIPTION
.HP
\fIldns_wire2rr\fR()
converts the data on the uint8_t bytearray (in wire format) to a \%DNS 
resource record.
This function will initialize and allocate memory space for the rr
structure.
The length of the wiredata of this rr is added to the *pos value.

\.br
\fBrr\fR: pointer to the structure to hold the rdata value
\.br
\fBwire\fR: pointer to the buffer with the data
\.br
\fBmax\fR: the length of the data buffer (in bytes)
\.br
\fBpos\fR: the position of the rr in the buffer (ie. the number of bytes 
from the start of the buffer)
\.br
\fBsection\fR: the section in the packet the rr is meant for
\.br
Returns \%LDNS_STATUS_OK if everything succeeds, error otherwise
.PP
.HP
\fIldns_wire2pkt\fR()
converts the data on the uint8_t bytearray (in wire format) to a \%DNS packet.
This function will initialize and allocate memory space for the packet 
structure.

\.br
\fBpacket\fR: pointer to the structure to hold the packet
\.br
\fBdata\fR: pointer to the buffer with the data
\.br
\fBlen\fR: the length of the data buffer (in bytes)
\.br
Returns \%LDNS_STATUS_OK if everything succeeds, error otherwise
.PP
.HP
\fIldns_wire2rdf\fR()
converts the data on the uint8_t bytearray (in wire format) to \%DNS 
rdata fields, and adds them to the list of rdfs of the given rr.
This function will initialize and allocate memory space for the dname
structures.
The length of the wiredata of these rdfs is added to the *pos value.

All rdfs belonging to the \%RR are read; the rr should have no rdfs
yet. An error is returned if the format cannot be parsed.

\.br
\fBrr\fR: pointer to the ldns_rr structure to hold the rdata value
\.br
\fBwire\fR: pointer to the buffer with the data
\.br
\fBmax\fR: the length of the data buffer (in bytes)
\.br
\fBpos\fR: the position of the rdf in the buffer (ie. the number of bytes 
from the start of the buffer)
\.br
Returns \%LDNS_STATUS_OK if everything succeeds, error otherwise
.PP
.HP
\fIldns_wire2dname\fR()
converts the data on the uint8_t bytearray (in wire format) to a \%DNS 
dname rdata field. This function will initialize and allocate memory
space for the dname structure. The length of the wiredata of this rdf 
is added to the *pos value.

\.br
\fBdname\fR: pointer to the structure to hold the rdata value
\.br
\fBwire\fR: pointer to the buffer with the data
\.br
\fBmax\fR: the length of the data buffer (in bytes)
\.br
\fBpos\fR: the position of the rdf in the buffer (ie. the number of bytes 
from the start of the buffer)
\.br
Returns \%LDNS_STATUS_OK if everything succeeds, error otherwise
.PP
.SH AUTHOR
The ldns team at NLnet Labs.

.SH REPORTING BUGS
Please report bugs to ldns-team@nlnetlabs.nl or in 
our bugzilla at
http://www.nlnetlabs.nl/bugs/index.html

.SH COPYRIGHT
Copyright (c) 2004 - 2006 NLnet Labs.
.PP
Licensed under the BSD License. There is NO warranty; not even for
MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.

.SH SEE ALSO
\fIldns_rr2wire\fR, \fIldns_pkt2wire\fR, \fIldns_rdf2wire\fR, \fIldns_dname2wire\fR.
And \fBperldoc Net::DNS\fR, \fBRFC1034\fR,
\fBRFC1035\fR, \fBRFC4033\fR, \fBRFC4034\fR  and \fBRFC4035\fR.
.SH REMARKS
This manpage was automatically generated from the ldns source code.
