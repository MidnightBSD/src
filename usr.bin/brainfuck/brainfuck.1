.\" $MidnightBSD$
.\" $MirOS: src/usr.bin/brainfuck/brainfuck.1,v 1.5 2010/07/01 20:10:38 tg Exp $
.\"-
.\" Copyright (c) 2003, 2004, 2010
.\"	Thorsten Glaser <tg@mirbsd.org>
.\"
.\" Provided that these terms and disclaimer and all copyright notices
.\" are retained or reproduced in an accompanying document, permission
.\" is granted to deal in this work without restriction, including un-
.\" limited rights to use, publicly perform, distribute, sell, modify,
.\" merge, give away, or sublicence.
.\"
.\" This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
.\" the utmost extent permitted by applicable law, neither express nor
.\" implied; without malicious intent or gross negligence. In no event
.\" may a licensor, author or contributor be held liable for indirect,
.\" direct, other damage, loss, or other issues arising in any way out
.\" of dealing in the work, even if advised of the possibility of such
.\" damage or existence of a defect, except proven that it results out
.\" of said person's immediate fault when using the work as intended.
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en
.\" * <>| are problematic, so redefine and use \*(Lt\*(Gt\*(Ba
.\" Also make sure to use \& especially with two-letter words.
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before definition of .Mx, because when called
.\" with -mandoc, it might implement .Mx itself, but we want to
.\" use our own definition. And .Dd must come *first*, always.
.\"
.Dd $Mdocdate: July 1 2010 $
.\"
.\" Check which macro package we use, and do other -mdoc setup.
.\"
.ie \n(.g \{\
.	if \*[.T]utf8 .tr \[la]\*(Lt
.	if \*[.T]utf8 .tr \[ra]\*(Gt
.	ie d volume-ds-1 .ds tT gnu
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"
.\" Implement .Mx (MirBSD)
.\"
.ie "\*(tT"gnu" \{\
.	eo
.	de Mx
.	nr curr-font \n[.f]
.	nr curr-size \n[.ps]
.	ds str-Mx \f[\n[curr-font]]\s[\n[curr-size]u]
.	ds str-Mx1 \*[Tn-font-size]\%MirOS\*[str-Mx]
.	if !\n[arg-limit] \
.	if \n[.$] \{\
.	ds macro-name Mx
.	parse-args \$@
.	\}
.	if (\n[arg-limit] > \n[arg-ptr]) \{\
.	nr arg-ptr +1
.	ie (\n[type\n[arg-ptr]] == 2) \
.	as str-Mx1 \~\*[arg\n[arg-ptr]]
.	el \
.	nr arg-ptr -1
.	\}
.	ds arg\n[arg-ptr] "\*[str-Mx1]
.	nr type\n[arg-ptr] 2
.	ds space\n[arg-ptr] "\*[space]
.	nr num-args (\n[arg-limit] - \n[arg-ptr])
.	nr arg-limit \n[arg-ptr]
.	if \n[num-args] \
.	parse-space-vector
.	print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[Tn-font-size]
.\}
.el \{\
.	de Mx
.	nr cF \\n(.f
.	nr cZ \\n(.s
.	ds aa \&\f\\n(cF\s\\n(cZ
.	if \\n(aC==0 \{\
.		ie \\n(.$==0 \&MirOS\\*(aa
.		el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.	\}
.	if \\n(aC>\\n(aP \{\
.		nr aP \\n(aP+1
.		ie \\n(C\\n(aP==2 \{\
.			as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
.			ie \\n(aC>\\n(aP \{\
.				nr aP \\n(aP+1
.				nR
.			\}
.			el .aZ
.		\}
.		el \{\
.			as b1 \&MirOS\\*(aa
.			nR
.		\}
.	\}
..
.\}
.\"-
.Dt BRAINFUCK 1
.Os
.Sh NAME
.Nm brainfuck
.Nd Brainfuck interpreter written in Perl
.Sh SYNOPSIS
.Nm
.Op Ar
.Sh DESCRIPTION
The
.Nm
utility interprets its standard input as a Brainfuck script.
Processing will start after EOF.
If you started
.Nm
interactively, hit \*(haD (Ctrl-D) on a new line to start.
.Pp
If optional arguments
.Pq Ar
are passed, these are run as if concatenated instead, and standard
input processing starts immediately when utilised by the script.
.Pp
.Sh THE LANGUAGE
Brainfuck is a simple enough language to include the entire official language
describtion in this manual page.
The following table is from the original Brainfuck distribution by its inventor
.An Urban Mueller Aq umueller@amiga.physik.unizh.ch :
.Pp
The language \fIBrainfuck\fR knows the following commands:
.Pp
.Bd -literal -offset indent
\&Cmd  Effect                                   Equivalent in C
\&\-\-\-  \-\-\-\-\-\-                                   \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&+    Increases element under pointer          array[p]++;
\&\-    Decrases element under pointer           array[p]\-\-;
\&\*(Gt    Increases pointer                        p++;
\&\*(Lt    Decreases pointer                        p\-\-;
\&[    Starts loop, counter under pointer       while(array[p]) {
\&]    Indicates end of loop                    }
\&.    Outputs ASCII code under pointer         putchar(array[p]);
\&,    Reads char and stores ASCII under ptr    array[p]=getchar();
.Ed
.Pp
All other characters are ignored.
.Pp
The array elements and p are being initialized to zero at the beginning.
Now while this seems to be a pretty useless language, it can be proven
that it can compute every solvable mathematical problem (if we ignore
the array size limit and the executable size limit).
.Pp
This implementation reads and writes to stdio in bytes.
Its cells are of the size of a standard Perl integral type,
signed and with wrap-around behaviour.
It uses LF as end of line and NUL as end of input indicator.
.Sh SEE ALSO
.Xr perl 1
.Sh HISTORY
.Nm
first appeared in
.Mx 1 and MidnightBSD 0.3.
.Sh AUTHORS
.Bl -inset
.It Em Urban Mueller
designed the language.
.It Em Marko Nippula
wrote this interpreter.
.It The Em Chaos Computer Club Cologne
gave some hints for the man page.
.It Em Thorsten Glaser
wrote this man page, put things together for
.Mx ,
and later corrected the interpreter.
.El
