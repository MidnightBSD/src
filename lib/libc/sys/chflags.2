.\" Copyright (c) 1989, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)chflags.2	8.3 (Berkeley) 5/2/95
.\" $FreeBSD$
.\"
.Dd Oct 29, 2010
.Dt CHFLAGS 2
.Os
.Sh NAME
.Nm chflags ,
.Nm lchflags ,
.Nm fchflags
.Nd set file flags
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/stat.h
.In unistd.h
.Ft int
.Fn chflags "const char *path" "u_long flags"
.Ft int
.Fn lchflags "const char *path" "int flags"
.Ft int
.Fn fchflags "int fd" "u_long flags"
.Sh DESCRIPTION
The file whose name
is given by
.Fa path
or referenced by the descriptor
.Fa fd
has its flags changed to
.Fa flags .
.Pp
The
.Fn lchflags
system call is like
.Fn chflags
except in the case where the named file is a symbolic link,
in which case
.Fn lchflags
will change the flags of the link itself,
rather than the file it points to.
.Pp
The flags specified are formed by
.Em or Ns 'ing
the following values
.Pp
.Bl -tag -width ".Dv SF_IMMUTABLE" -compact -offset indent
.It Dv UF_NODUMP
Do not dump the file.
.It Dv UF_IMMUTABLE
The file may not be changed.
.It Dv UF_APPEND
The file may only be appended to.
.It Dv UF_NOUNLINK
The file may not be renamed or deleted.
.It Dv UF_OPAQUE
The directory is opaque when viewed through a union stack.
.It Dv SF_ARCHIVED
The file may be archived.
.It Dv SF_IMMUTABLE
The file may not be changed.
.It Dv SF_APPEND
The file may only be appended to.
.It Dv SF_NOUNLINK
The file may not be renamed or deleted.
.It Dv SF_SNAPSHOT
The file is a snapshot file.
.El
.Pp
If one of
.Dv SF_IMMUTABLE , SF_APPEND ,
or
.Dv SF_NOUNLINK
is set a non-super-user cannot change any flags and even the super-user
can change flags only if securelevel is greater than 0.
(See
.Xr init 8
for details.)
.Pp
The
.Dv UF_IMMUTABLE , UF_APPEND , UF_NOUNLINK , UF_NODUMP ,
and
.Dv UF_OPAQUE
flags may be set or unset by either the owner of a file or the super-user.
.Pp
The
.Dv SF_IMMUTABLE , SF_APPEND , SF_NOUNLINK ,
and
.Dv SF_ARCHIVED
flags may only be set or unset by the super-user.
Attempts to set these flags by non-super-users are rejected, attempts by
non-superusers to clear flags that are already unset are silently ignored.
These flags may be set at any time, but normally may only be unset when
the system is in single-user mode.
(See
.Xr init 8
for details.)
.Pp
The
.Dv SF_SNAPSHOT
flag is maintained by the system and cannot be changed by any user.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn chflags
system call will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.It Bq Er EPERM
One of
.Dv SF_IMMUTABLE , SF_APPEND ,
or
.Dv SF_NOUNLINK
is set and the user is either not the super-user or
securelevel is greater than 0.
.It Bq Er EPERM
A non-super-user tries to set one of
.Dv SF_ARCHIVED , SF_IMMUTABLE , SF_APPEND ,
or
.Dv SF_NOUNLINK .
.It Bq Er EPERM
User tries to set or remove the
.Dv SF_SNAPSHOT
flag.
.It Bq Er EROFS
The named file resides on a read-only file system.
.It Bq Er EFAULT
The
.Fa path
argument
points outside the process's allocated address space.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.It Bq Er EOPNOTSUPP
The underlying file system does not support file flags.
.El
.Pp
The
.Fn fchflags
system call will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The descriptor is not valid.
.It Bq Er EINVAL
The
.Fa fd
argument
refers to a socket, not to a file.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
.It Bq Er EPERM
One of
.Dv SF_IMMUTABLE , SF_APPEND ,
or
.Dv SF_NOUNLINK
is set and the user is either not the super-user or
securelevel is greater than 0.
.It Bq Er EPERM
A non-super-user tries to set one of
.Dv SF_ARCHIVED , SF_IMMUTABLE , SF_APPEND ,
or
.Dv SF_NOUNLINK .
.It Bq Er EPERM
User tries to set or remove the
.Dv SF_SNAPSHOT
flag.
.It Bq Er EROFS
The file resides on a read-only file system.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.It Bq Er EOPNOTSUPP
The underlying file system does not support file flags.
.El
.Sh SEE ALSO
.Xr chflags 1 ,
.Xr fflagstostr 3 ,
.Xr strtofflags 3 ,
.Xr init 8 ,
.Xr mount_unionfs 8
.Sh HISTORY
The
.Fn chflags
and
.Fn fchflags
system calls first appeared in
.Bx 4.4 .
