dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision: 22513 $)
AC_PREREQ([2.59])
test -z "$CFLAGS" && CFLAGS="-g"
AC_INIT([Heimdal],[1.1],[heimdal-bugs@h5l.org])
AC_CONFIG_SRCDIR([kuser/kinit.c])
AC_CONFIG_HEADERS(include/config.h)

AM_INIT_AUTOMAKE([foreign no-dependencies 1.8])
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
AM_PROG_CC_C_O
AC_PROG_CPP

AC_PREFIX_DEFAULT(/usr/heimdal)

test "$sysconfdir" = '${prefix}/etc' && sysconfdir='/etc'
test "$localstatedir" = '${prefix}/var' && localstatedir='/var/heimdal'

AC_CANONICAL_HOST
CANONICAL_HOST=$host
AC_SUBST(CANONICAL_HOST)

dnl Hints for autobuild
AB_INIT

rk_SYS_LARGEFILE

dnl
dnl this is needed to run the configure tests against glibc
dnl
AC_DEFINE([_GNU_SOURCE], 1,
	[Define to enable extensions on glibc-based systems such as Linux.])

AC_OBJEXT
AC_EXEEXT

dnl AC_KRB_PROG_YACC
AC_PROG_YACC
AM_PROG_LEX
dnl AC_PROG_RANLIB
AC_PROG_AWK
AC_KRB_PROG_LN_S

AC_MIPS_ABI
CC="$CC $abi"
libdir="$libdir$abilibdirext"

AC_C___ATTRIBUTE__

AC_PROG_LIBTOOL

AM_CONDITIONAL(ENABLE_SHARED, test "$enable_shared" = "yes")
rk_VERSIONSCRIPT

rk_TEST_PACKAGE(openldap,
[#include <lber.h>
#include <ldap.h>],
[-lldap -llber],,,OPENLDAP)

AC_ARG_ENABLE(hdb-openldap-module, 
	AS_HELP_STRING([--enable-hdb-openldap-module],
		[if you want support to build openldap hdb as shared object]))
if test "$enable_hdb_openldap_module" = yes -a "$with_openldap" = yes; then
    AC_DEFINE(OPENLDAP_MODULE, 1, [Define if you want support for hdb ldap module])
fi
AM_CONDITIONAL(OPENLDAP_MODULE, test "$enable_hdb_openldap_module" = yes -a "$with_openldap" = yes)

AC_ARG_ENABLE(pk-init, 
	AS_HELP_STRING([--disable-pk-init],
		[if you want disable to PK-INIT support]))
if test "$enable_pk_init" != no ;then
	AC_DEFINE([PKINIT], 1, [Define to enable PKINIT.])
fi
AM_CONDITIONAL(PKINIT, test "$enable_pk_init" != no)


dnl path where the hdb directory is stored
AC_ARG_WITH([hdbdir], 
	[AC_HELP_STRING([--with-hdbdir],
		[Default location for KDC database @<:@default=/var/heimdal@:>@])],
	[],
	[with_hdbdir=/var/heimdal])
DIR_hdbdir="$with_hdbdir"
AC_SUBST([DIR_hdbdir])


dnl no kerberos4 any more
with_krb4=no
AC_SUBST(INCLUDE_krb4)
AC_SUBST(LIB_krb4)
AM_CONDITIONAL(KRB4, false)

AM_CONDITIONAL(KRB5, true)
AM_CONDITIONAL(do_roken_rename, true)

AC_DEFINE(KRB5, 1, [Enable Kerberos 5 support in applications.])dnl
AC_SUBST(LIB_kdb)dnl

KRB_CRYPTO

KRB_PTHREADS

AC_ARG_ENABLE(dce, 
	AS_HELP_STRING([--enable-dce],[if you want support for DCE/DFS PAG's]))
if test "$enable_dce" = yes; then
    AC_DEFINE(DCE, 1, [Define if you want support for DCE/DFS PAG's.])
fi
AM_CONDITIONAL(DCE, test "$enable_dce" = yes)

## XXX quite horrible:
if test -f /etc/ibmcxx.cfg; then
	dpagaix_ldadd=`sed -n '/^xlc_r4/,/^$/p' /etc/ibmcxx.cfg | sed -n -e '/libraries/{;s/^[[^=]]*=\(.*\)/\1/;s/,/ /gp;}'`
	dpagaix_cflags=`sed -n '/^xlc_r4/,/^$/p' /etc/ibmcxx.cfg | sed -n -e '/options/{;s/^[[^=]]*=\(.*\)/\1/;s/-q[^,]*//;s/,/ /gp;}'`
	dpagaix_ldflags=
else
	dpagaix_cflags="-D_THREAD_SAFE -D_AIX_PTHREADS_D7 -D_AIX32_THREADS=1 -D_AES_SOURCE -D_AIX41 -I/usr/include/dce"
	dpagaix_ldadd="-L/usr/lib/threads -ldcelibc_r -ldcepthreads -lpthreads_compat lpthreads -lc_r"
	dpagaix_ldflags="-Wl,-bI:dfspag.exp"
fi
AC_SUBST(dpagaix_cflags)
AC_SUBST(dpagaix_ldadd)
AC_SUBST(dpagaix_ldflags)

AC_ARG_ENABLE([afs-support],
	AC_HELP_STRING([--disable-afs-support],
		[if you don't want support for AFS]))
if test "$enable_afs_support" = no; then
	AC_DEFINE(NO_AFS, 1, [Define if you don't wan't support for AFS.])
fi

rk_DB

dnl AC_ROKEN(10,[/usr/heimdal /usr/athena],[lib/roken],[$(top_builddir)/lib/roken/libroken.la],[-I$(top_builddir)/lib/roken -I$(top_srcdir)/lib/roken])

rk_ROKEN(lib/roken)
LIBADD_roken="$LIB_roken"
AC_SUBST(LIBADD_roken)dnl
LIB_roken="\$(top_builddir)/lib/vers/libvers.la $LIB_roken"

rk_OTP

AC_CHECK_OSFC2

AC_ARG_ENABLE(mmap,
	AS_HELP_STRING([--disable-mmap],[disable use of mmap]))
if test "$enable_mmap" = "no"; then
	AC_DEFINE(NO_MMAP, 1, [Define if you don't want to use mmap.])
fi

AC_ARG_ENABLE(afs-string-to-key,
	AS_HELP_STRING([--disable-afs-string-to-key],
	[disable use of weak AFS string-to-key functions]),
	[], [enable_afs_string_to_key=yes])

if test "$enable_afs_string_to_key" = "yes"; then
	AC_DEFINE(ENABLE_AFS_STRING_TO_KEY, 1, [Define if want to use the weak AFS string to key functions.])
fi


rk_CHECK_MAN

rk_TEST_PACKAGE(readline,
[#include <stdio.h>
 #include <readline.h>],-lreadline,,, READLINE)

rk_TEST_PACKAGE(hesiod,[#include <hesiod.h>],-lhesiod,,, HESIOD)

KRB_C_BIGENDIAN
AC_C_INLINE

rk_AIX
rk_IRIX
rk_SUNOS

KRB_CHECK_X

AM_CONDITIONAL(HAVE_X, test "$no_x" != yes)

AC_CHECK_XAU

dnl AM_C_PROTOTYPES

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_CHECK_TYPE_EXTRA(mode_t, unsigned short, [])
AC_CHECK_TYPE_EXTRA(sig_atomic_t, int, [#include <signal.h>])
AC_HAVE_TYPE([long long])
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for header files.
AC_HEADER_STDC

AC_CHECK_HEADERS([\
	arpa/ftp.h				\
	arpa/telnet.h				\
	bind/bitypes.h				\
	bsdsetjmp.h				\
	curses.h				\
	dlfcn.h					\
	fnmatch.h				\
	inttypes.h				\
	io.h					\
	libutil.h				\
	limits.h				\
	maillock.h				\
	netgroup.h				\
	netinet/in6_machtypes.h			\
	netinfo/ni.h				\
	pthread.h				\
	pty.h					\
	sac.h					\
	sgtty.h					\
	siad.h					\
	signal.h				\
	strings.h				\
	stropts.h				\
	sys/bitypes.h				\
	sys/category.h				\
	sys/file.h				\
	sys/filio.h				\
	sys/ioccom.h				\
	sys/mman.h				\
	sys/param.h				\
	sys/pty.h				\
	sys/ptyio.h				\
	sys/select.h				\
	sys/socket.h				\
	sys/str_tty.h				\
	sys/stream.h				\
	sys/stropts.h				\
	sys/syscall.h				\
	sys/termio.h				\
	sys/timeb.h				\
	sys/times.h				\
	sys/types.h				\
	sys/un.h				\
	termcap.h				\
	termio.h				\
	termios.h				\
	time.h					\
	tmpdir.h				\
	udb.h					\
	util.h					\
	utmp.h					\
	utmpx.h					\
])

dnl On Solaris 8 there's a compilation warning for term.h because
dnl it doesn't define `bool'.
AC_CHECK_HEADERS(term.h, , , -)

AC_CHECK_HEADERS(net/if.h, , , [AC_INCLUDES_DEFAULT
#if HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif])

AC_CHECK_HEADERS(sys/ptyvar.h, , , [AC_INCLUDES_DEFAULT
#if HAVE_SYS_TTY_H
#include <sys/tty.h>
#endif])

AC_CHECK_HEADERS(sys/strtty.h, , , [AC_INCLUDES_DEFAULT
#if HAVE_TERMIOS_H
#include <termios.h>
#endif
#if HAVE_SYS_STREAM_H
#include <sys/stream.h>
#endif])

AC_CHECK_HEADERS(sys/ucred.h, , , [AC_INCLUDES_DEFAULT
#if HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#if HAVE_SYS_PARAM_H
#include <sys/param.h>
#endif])

AC_CHECK_HEADERS(security/pam_modules.h, , , [AC_INCLUDES_DEFAULT
#include <security/pam_appl.h>
])

AC_ARG_ENABLE(netinfo,
	AS_HELP_STRING([--enable-netinfo],[enable netinfo for configuration lookup]))

if test "$ac_cv_header_netinfo_ni_h" = yes -a "$enable_netinfo" = yes; then
       AC_DEFINE(HAVE_NETINFO, 1,
               [Define if you want to use Netinfo instead of krb5.conf.])
fi

dnl export symbols
rk_WIN32_EXPORT(BUILD_KRB5_LIB, KRB5_LIB_FUNCTION)
rk_WIN32_EXPORT(BUILD_ROKEN_LIB, ROKEN_LIB_FUNCTION)

dnl Checks for libraries.

AC_FIND_FUNC_NO_LIBS(logwtmp, util,[
#ifdef HAVE_UTIL_H
#include <util.h>
#endif
],[0,0,0])
AC_FIND_FUNC_NO_LIBS(logout, util,[
#ifdef HAVE_UTIL_H
#include <util.h>
#endif
],[0])
AC_FIND_FUNC_NO_LIBS(openpty, util,[
#ifdef HAVE_UTIL_H
#include <util.h>
#endif
],[0,0,0,0,0])

AC_FIND_FUNC_NO_LIBS(tgetent, termcap ncurses curses,[
#ifdef HAVE_TERMCAP_H
#include <termcap.h>
#endif
#ifdef HAVE_CURSES_H
#include <curses.h>
#endif
],[0,0])

dnl Checks for library functions.

AC_CHECK_FUNCS([				\
	_getpty					\
	_scrsize				\
	arc4random				\
	fcntl					\
	getpeereid				\
	getpeerucred				\
	grantpt					\
	mktime					\
	ptsname					\
	rand					\
	revoke					\
	select					\
	setitimer				\
	setpcred				\
	setpgid					\
	setproctitle				\
	setregid				\
	setresgid				\
	setresuid				\
	setreuid				\
	setsid					\
	setutent				\
	sigaction				\
	strstr					\
	ttyname					\
	ttyslot					\
	umask					\
	unlockpt				\
	vhangup					\
	yp_get_default_domain			\
])

AC_FUNC_MMAP

KRB_CAPABILITIES

AC_CHECK_GETPWNAM_R_POSIX

dnl detect doors on solaris
if test "$enable_pthread_support" != no; then
   saved_LIBS="$LIBS"
   LIBS="$LIBS $PTHREADS_LIBS"
   AC_FIND_FUNC_NO_LIBS(door_create, door)
   LIBS="$saved_LIBS"
fi

AC_ARG_ENABLE(kcm,
	AS_HELP_STRING([--enable-kcm],[enable Kerberos Credentials Manager]),
,[enable_kcm=yes])

if test "$enable_kcm" = yes ; then
   if test  "$ac_cv_header_sys_un_h" != yes -a "$ac_cv_funclib_door_create" != yes ; then
  	enable_kcm=no
   fi
fi
if test "$enable_kcm" = yes; then
       AC_DEFINE(HAVE_KCM, 1,
               [Define if you want to use the Kerberos Credentials Manager.])
fi
AM_CONDITIONAL(KCM, test "$enable_kcm" = yes)



dnl Cray stuff
AC_CHECK_FUNCS(getudbnam setlim)

dnl AC_KRB_FUNC_GETCWD_BROKEN

dnl
dnl Check for fields in struct utmp
dnl

AC_HAVE_STRUCT_FIELD(struct utmp, ut_addr, [#include <utmp.h>])
AC_HAVE_STRUCT_FIELD(struct utmp, ut_host, [#include <utmp.h>])
AC_HAVE_STRUCT_FIELD(struct utmp, ut_id, [#include <utmp.h>])
AC_HAVE_STRUCT_FIELD(struct utmp, ut_pid, [#include <utmp.h>])
AC_HAVE_STRUCT_FIELD(struct utmp, ut_type, [#include <utmp.h>])
AC_HAVE_STRUCT_FIELD(struct utmp, ut_user, [#include <utmp.h>])
AC_HAVE_STRUCT_FIELD(struct utmpx, ut_exit, [#include <utmpx.h>])
AC_HAVE_STRUCT_FIELD(struct utmpx, ut_syslen, [#include <utmpx.h>])

AC_CHECK_TYPES([int8_t, int16_t, int32_t, int64_t, 
	u_int8_t, u_int16_t, u_int32_t, u_int64_t,
	uint8_t, uint16_t, uint32_t, uint64_t],,,[
#ifdef HAVE_INTTYPES_H
#include <inttypes.h>
#endif
#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#ifdef HAVE_SYS_BITYPES_H
#include <sys/bitypes.h>
#endif
#ifdef HAVE_BIND_BITYPES_H
#include <bind/bitypes.h>
#endif
#ifdef HAVE_NETINET_IN6_MACHTYPES_H
#include <netinet/in6_machtypes.h>
#endif
])

rk_FRAMEWORK_SECURITY

KRB_READLINE

rk_TELNET

dnl Some operating systems already have com_err and compile_et
CHECK_COMPILE_ET

rk_AUTH_MODULES([sia afskauthlib])

rk_DESTDIRS

rk_WFLAGS([-Wall -Wmissing-prototypes -Wpointer-arith -Wbad-function-cast -Wmissing-declarations -Wnested-externs])


AH_BOTTOM([#ifdef ROKEN_RENAME
#include "roken_rename.h"
#endif])

AC_CONFIG_FILES(Makefile 		\
	etc/Makefile			\
	include/Makefile		\
	include/gssapi/Makefile		\
	include/hcrypto/Makefile	\
	include/kadm5/Makefile		\
	lib/Makefile			\
	lib/45/Makefile			\
	lib/auth/Makefile		\
	lib/auth/afskauthlib/Makefile	\
	lib/auth/pam/Makefile		\
	lib/auth/sia/Makefile		\
	lib/asn1/Makefile		\
	lib/com_err/Makefile		\
	lib/hcrypto/Makefile		\
	lib/editline/Makefile		\
	lib/hx509/Makefile		\
	lib/gssapi/Makefile		\
	lib/ntlm/Makefile		\
	lib/hdb/Makefile		\
	lib/kadm5/Makefile		\
	lib/kafs/Makefile		\
	lib/kdfs/Makefile		\
	lib/krb5/Makefile		\
	lib/otp/Makefile		\
	lib/roken/Makefile		\
	lib/sl/Makefile			\
	lib/vers/Makefile		\
	kuser/Makefile			\
	kpasswd/Makefile		\
	kadmin/Makefile			\
	admin/Makefile			\
	kcm/Makefile			\
	kdc/Makefile			\
	appl/Makefile			\
	appl/afsutil/Makefile		\
	appl/ftp/Makefile		\
	appl/ftp/common/Makefile	\
	appl/ftp/ftp/Makefile		\
	appl/ftp/ftpd/Makefile		\
	appl/gssmask/Makefile		\
	appl/kx/Makefile		\
	appl/login/Makefile		\
	appl/otp/Makefile		\
	appl/popper/Makefile		\
	appl/push/Makefile		\
	appl/rsh/Makefile		\
	appl/rcp/Makefile		\
	appl/su/Makefile		\
	appl/xnlock/Makefile		\
	appl/telnet/Makefile		\
	appl/telnet/libtelnet/Makefile	\
	appl/telnet/telnet/Makefile	\
	appl/telnet/telnetd/Makefile	\
	appl/test/Makefile		\
	appl/kf/Makefile		\
	appl/dceutils/Makefile		\
	tests/Makefile			\
	tests/can/Makefile		\
	tests/db/Makefile		\
	tests/kdc/Makefile		\
	tests/ldap/Makefile		\
	tests/gss/Makefile		\
	tests/java/Makefile		\
	tests/plugin/Makefile		\
	packages/Makefile		\
	packages/mac/Makefile		\
	packages/debian/Makefile	\
	doc/Makefile			\
	tools/Makefile			\
)

AC_OUTPUT

dnl
dnl This is the release version name-number[beta]
dnl

cat > include/newversion.h.in <<EOF
const char *heimdal_long_version = "@([#])\$Version: $PACKAGE_STRING by @USER@ on @HOST@ ($host) @DATE@ \$";
const char *heimdal_version = "AC_PACKAGE_STRING";
EOF

if test -f include/version.h && cmp -s include/newversion.h.in include/version.h.in; then
	echo "include/version.h is unchanged"
	rm -f include/newversion.h.in
else
 	echo "creating include/version.h"
 	User=${USER-${LOGNAME}}
 	Host=`(hostname || uname -n || echo unknown) 2>/dev/null | sed 1q`
 	Date=`date`
	mv -f include/newversion.h.in include/version.h.in
	sed -e "s/@USER@/$User/" -e "s/@HOST@/$Host/" -e "s/@DATE@/$Date/" include/version.h.in > include/version.h
fi
