
PARSE_TIME(3)            BSD Library Functions Manual            PARSE_TIME(3)

NNAAMMEE
     ppaarrssee__ttiimmee, pprriinntt__ttiimmee__ttaabbllee, uunnppaarrssee__ttiimmee, uunnppaarrssee__ttiimmee__aapppprrooxx, -- parse
     and unparse time intervals

LLIIBBRRAARRYY
     The roken library (libroken, -lroken)

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ppaarrssee__ttiimmee..hh>>

     _i_n_t
     ppaarrssee__ttiimmee(_c_o_n_s_t _c_h_a_r _*_t_i_m_e_s_p_e_c, _c_o_n_s_t _c_h_a_r _*_d_e_f___u_n_i_t);

     _v_o_i_d
     pprriinntt__ttiimmee__ttaabbllee(_F_I_L_E _*_f);

     _s_i_z_e___t
     uunnppaarrssee__ttiimmee(_i_n_t _s_e_c_o_n_d_s, _c_h_a_r _*_b_u_f, _s_i_z_e___t _l_e_n);

     _s_i_z_e___t
     uunnppaarrssee__ttiimmee__aapppprrooxx(_i_n_t _s_e_c_o_n_d_s, _c_h_a_r _*_b_u_f, _s_i_z_e___t _l_e_n);

DDEESSCCRRIIPPTTIIOONN
     The ppaarrssee__ttiimmee() function converts a the period of time specified in into
     a number of seconds.  The _t_i_m_e_s_p_e_c can be any number of <number unit>
     pairs separated by comma and whitespace. The number can be negative. Num-
     ber without explicit units are taken as being _d_e_f___u_n_i_t.

     The uunnppaarrssee__ttiimmee() and uunnppaarrssee__ttiimmee__aapppprrooxx() does the opposite of
     ppaarrssee__ttiimmee(), that is they take a number of seconds and express that as
     human readable string.  _u_n_p_a_r_s_e___t_i_m_e produces an exact time, while
     _u_n_p_a_r_s_e___t_i_m_e___a_p_p_r_o_x restricts the result to only include one units.

     pprriinntt__ttiimmee__ttaabbllee() prints a descriptive list of available units on the
     passed file descriptor.

     The possible units include:
           second, s
           minute, m
           hour, h
           day
           week   seven days
           month  30 days
           year   365 days

     Units names can be arbitrarily abbreviated (as long as they are unique).

RREETTUURRNN VVAALLUUEESS
     ppaarrssee__ttiimmee() returns the number of seconds that represents the expression
     in _t_i_m_e_s_p_e_c or -1 on error.  uunnppaarrssee__ttiimmee() and uunnppaarrssee__ttiimmee__aapppprrooxx()
     return the number of characters written to _b_u_f.  if the return value is
     greater than or equal to the _l_e_n argument, the string was too short and
     some of the printed characters were discarded.

EEXXAAMMPPLLEESS
     #include <stdio.h>
     #include <parse_time.h>

     int
     main(int argc, char **argv)
     {
         int i;
         int result;
         char buf[128];
         print_time_table(stdout);
         for (i = 1; i < argc; i++) {
             result = parse_time(argv[i], "second");
             if(result == -1) {
                 fprintf(stderr, "%s: parse error\n", argv[i]);
                 continue;
             }
             printf("--\n");
             printf("parse_time = %d\n", result);
             unparse_time(result, buf, sizeof(buf));
             printf("unparse_time = %s\n", buf);
             unparse_time_approx(result, buf, sizeof(buf));
             printf("unparse_time_approx = %s\n", buf);
         }
         return 0;
     }

     $ ./a.out "1 minute 30 seconds" "90 s" "1 y -1 s"
     1   year = 365 days
     1  month = 30 days
     1   week = 7 days
     1    day = 24 hours
     1   hour = 60 minutes
     1 minute = 60 seconds
     1 second
     --
     parse_time = 90
     unparse_time = 1 minute 30 seconds
     unparse_time_approx = 1 minute
     --
     parse_time = 90
     unparse_time = 1 minute 30 seconds
     unparse_time_approx = 1 minute
     --
     parse_time = 31535999
     unparse_time = 12 months 4 days 23 hours 59 minutes 59 seconds
     unparse_time_approx = 12 months

BBUUGGSS
     Since ppaarrssee__ttiimmee() returns -1 on error there is no way to parse "minus
     one second".  Currently "s" at the end of units is ignored. This is a
     hack for English plural forms. If these functions are ever localised,
     this scheme will have to change.

HEIMDAL                        October 31, 2004                        HEIMDAL
