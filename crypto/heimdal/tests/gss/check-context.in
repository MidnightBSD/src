#!/bin/sh
#
# Copyright (c) 2006 - 2008 Kungliga Tekniska Högskolan
# (Royal Institute of Technology, Stockholm, Sweden). 
# All rights reserved. 
#
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions 
# are met: 
#
# 1. Redistributions of source code must retain the above copyright 
#    notice, this list of conditions and the following disclaimer. 
#
# 2. Redistributions in binary form must reproduce the above copyright 
#    notice, this list of conditions and the following disclaimer in the 
#    documentation and/or other materials provided with the distribution. 
#
# 3. Neither the name of the Institute nor the names of its contributors 
#    may be used to endorse or promote products derived from this software 
#    without specific prior written permission. 
#
# THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
# SUCH DAMAGE. 
#
# $Id: check-context.in 22425 2008-01-13 09:46:01Z lha $
#

srcdir="@srcdir@"
objdir="@objdir@"

# If there is no useful db support compile in, disable test
../db/have-db || exit 77

R=TEST.H5L.SE

port=@port@

keytabfile=${objdir}/server.keytab
keytab="FILE:${keytabfile}"
cache="FILE:krb5ccfile"

kinit="${TESTS_ENVIRONMENT} ../../kuser/kinit -c $cache --no-afslog"
kadmin="${TESTS_ENVIRONMENT} ../../kadmin/kadmin -l -r $R"
kdc="${TESTS_ENVIRONMENT} ../../kdc/kdc --addresses=localhost -P $port"

context="${TESTS_ENVIRONMENT} ../../lib/gssapi/test_context"

KRB5_CONFIG="${objdir}/krb5.conf"
export KRB5_CONFIG

KRB5CCNAME=${cache}
export KRB5CCNAME

rm -f ${keytabfile}
rm -f current-db*
rm -f out-*
rm -f mkey.file*

> messages.log

echo Creating database
${kadmin} \
    init \
    --realm-max-ticket-life=1day \
    --realm-max-renewable-life=1month \
    ${R} || exit 1

# add both lucid and lucid.test.h5l.se to simulate aliases
${kadmin} add -p p1 --use-defaults host/lucid.test.h5l.se@${R} || exit 1
${kadmin} ext -k ${keytab} host/lucid.test.h5l.se@${R} || exit 1
${kadmin} add -p p1 --use-defaults host/lucid@${R} || exit 1
${kadmin} ext -k ${keytab} host/lucid@${R} || exit 1
${kadmin} add -p kaka --use-defaults digest/${R}@${R} || exit 1

${kadmin} add -p u1 --use-defaults user1@${R} || exit 1

echo "Doing database check"
${kadmin} check ${R} || exit 1

echo u1 > ${objdir}/foopassword

echo Starting kdc
${kdc} &
kdcpid=$!

sh ${srcdir}/../kdc/wait-kdc.sh
if [ "$?" != 0 ] ; then
    kill ${kdcpid}
    exit 1
fi

trap "kill ${kdcpid}; echo signal killing kdc; exit 1;" EXIT

exitcode=0

echo "Getting client initial tickets"
${kinit} --password-file=${objdir}/foopassword user1@${R} || exitcode=1

echo "======test naming combinations"
echo "plain"
${context} --name-type=hostbased-service host@lucid.test.h5l.se || \
	{ exitcode=1 ; echo test failed; }
echo "plain (krb5)"
${context} --name-type=krb5-principal-name host/lucid.test.h5l.se@${R} || \
	{ exitcode=1 ; echo test failed; }
echo "plain (krb5 realmless)"
${context} --name-type=krb5-principal-name host/lucid.test.h5l.se || \
	{ exitcode=1 ; echo test failed; }
echo "dns canon on (long name) OFF, need dns_wrapper"
#${context} --dns-canon host@lucid.test.h5l.se || \
#	{ exitcode=1 ; echo test failed; }
echo "dns canon off (long name)"
${context} --no-dns-canon host@lucid.test.h5l.se || \
	{ exitcode=1 ; echo test failed; }
echo "dns canon off (short name)"
${context} --no-dns-canon host@lucid || \
	{ exitcode=1 ; echo test failed; }
echo "dns canon off (short name, krb5)"
${context}  --no-dns-canon --name-type=krb5-principal-name host/lucid@${R} || \
	{ exitcode=1 ; echo test failed; }
echo "dns canon off (short name, krb5)"
${context}  --no-dns-canon --name-type=krb5-principal-name host/lucid || \
	{ exitcode=1 ; echo test failed; }

echo "======test context building"
for mech in krb5 spnego ; do
	echo "${mech} no-mutual"
	${context} --mech-type=${mech} \
	    --name-type=hostbased-service host@lucid.test.h5l.se || \
		{ exitcode=1 ; echo test failed; }

	echo "${mech} mutual"
	${context} --mech-type=${mech} \
	    --mutual \
	    --name-type=hostbased-service host@lucid.test.h5l.se || \
		{ exitcode=1 ; echo test failed; }

	echo "${mech} delegate"
	${context} --mech-type=${mech} \
	    --delegate \
	    --name-type=hostbased-service host@lucid.test.h5l.se || \
		{ exitcode=1 ; echo test failed; }

	echo "${mech} mutual delegate"
	${context} --mech-type=${mech} \
	    --mutual --delegate \
	    --name-type=hostbased-service host@lucid.test.h5l.se || \
		{ exitcode=1 ; echo test failed; }
done

#add spnego !
echo "======dce-style"
for mech in krb5 ; do

	echo "${mech}: dce-style"
	${context} \
	    --mech-type=${mech} \
	    --mutual \
	    --dce-style \
	    --name-type=hostbased-service host@lucid.test.h5l.se || \
	    { exitcode=1 ; echo test failed; }

done

#echo "sasl-digest-md5"
#${context}  --mech-type=sasl-digest-md5 \
#    --name-type=hostbased-service \
#    host@lucid.test.h5l.se || \
#	{ exitcode=1 ; echo test failed; }


trap "" EXIT

echo "killing kdc (${kdcpid})"
kill ${kdcpid} 2> /dev/null

exit $exitcode


