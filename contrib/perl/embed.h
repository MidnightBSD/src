/*  -*- buffer-read-only: t -*-
 *
 *    embed.h
 *
 *    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999,
 *    2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, by Larry Wall and others
 *
 *    You may distribute under the terms of either the GNU General Public
 *    License or the Artistic License, as specified in the README file.
 *
 * !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
 * This file is built by embed.pl from data in embed.fnc, embed.pl,
 * pp.sym, intrpvar.h, and perlvars.h.
 * Any changes made here will be lost!
 *
 * Edit those files and run 'make regen_headers' to effect changes.
 */

/* (Doing namespace management portably in C is really gross.) */

/* By defining PERL_NO_SHORT_NAMES (not done by default) the short forms
 * (like warn instead of Perl_warn) for the API are not defined.
 * Not defining the short forms is a good thing for cleaner embedding. */

#ifndef PERL_NO_SHORT_NAMES

/* Hide global symbols */

#if !defined(PERL_IMPLICIT_CONTEXT)

#if defined(PERL_IMPLICIT_SYS)
#endif
#define doing_taint		Perl_doing_taint
#if defined(USE_ITHREADS)
#  if defined(PERL_IMPLICIT_SYS)
#  endif
#endif
#if defined(MYMALLOC)
#ifdef PERL_CORE
#define malloced_size		Perl_malloced_size
#define malloc_good_size	Perl_malloc_good_size
#endif
#endif
#define get_context		Perl_get_context
#define set_context		Perl_set_context
#define amagic_call		Perl_amagic_call
#define Gv_AMupdate		Perl_Gv_AMupdate
#define gv_handler		Perl_gv_handler
#ifdef PERL_CORE
#define append_elem		Perl_append_elem
#define append_list		Perl_append_list
#define apply			Perl_apply
#endif
#define apply_attrs_string	Perl_apply_attrs_string
#define av_clear		Perl_av_clear
#define av_delete		Perl_av_delete
#define av_exists		Perl_av_exists
#define av_extend		Perl_av_extend
#ifdef PERL_CORE
#define av_fake			Perl_av_fake
#endif
#define av_fetch		Perl_av_fetch
#define av_fill			Perl_av_fill
#define av_len			Perl_av_len
#define av_make			Perl_av_make
#define av_pop			Perl_av_pop
#define av_push			Perl_av_push
#if defined(PERL_CORE) || defined(PERL_EXT)
#define av_reify		Perl_av_reify
#endif
#define av_shift		Perl_av_shift
#define av_store		Perl_av_store
#define av_undef		Perl_av_undef
#define av_unshift		Perl_av_unshift
#ifdef PERL_CORE
#define bind_match		Perl_bind_match
#define block_end		Perl_block_end
#endif
#define block_gimme		Perl_block_gimme
#ifdef PERL_CORE
#define block_start		Perl_block_start
#define boot_core_UNIVERSAL	Perl_boot_core_UNIVERSAL
#define boot_core_PerlIO	Perl_boot_core_PerlIO
#endif
#define call_list		Perl_call_list
#ifdef PERL_CORE
#define cando			Perl_cando
#endif
#define cast_ulong		Perl_cast_ulong
#define cast_i32		Perl_cast_i32
#define cast_iv			Perl_cast_iv
#define cast_uv			Perl_cast_uv
#if !defined(HAS_TRUNCATE) && !defined(HAS_CHSIZE) && defined(F_FREESP)
#define my_chsize		Perl_my_chsize
#endif
#ifdef PERL_CORE
#define convert			Perl_convert
#define create_eval_scope	Perl_create_eval_scope
#endif
#define croak			Perl_croak
#define vcroak			Perl_vcroak
#define croak_xs_usage		Perl_croak_xs_usage
#if defined(PERL_IMPLICIT_CONTEXT)
#define croak_nocontext		Perl_croak_nocontext
#define die_nocontext		Perl_die_nocontext
#define deb_nocontext		Perl_deb_nocontext
#define form_nocontext		Perl_form_nocontext
#define load_module_nocontext	Perl_load_module_nocontext
#define mess_nocontext		Perl_mess_nocontext
#define warn_nocontext		Perl_warn_nocontext
#define warner_nocontext	Perl_warner_nocontext
#define newSVpvf_nocontext	Perl_newSVpvf_nocontext
#define sv_catpvf_nocontext	Perl_sv_catpvf_nocontext
#define sv_setpvf_nocontext	Perl_sv_setpvf_nocontext
#define sv_catpvf_mg_nocontext	Perl_sv_catpvf_mg_nocontext
#define sv_setpvf_mg_nocontext	Perl_sv_setpvf_mg_nocontext
#define fprintf_nocontext	Perl_fprintf_nocontext
#define printf_nocontext	Perl_printf_nocontext
#endif
#ifdef PERL_CORE
#define cv_ckproto		Perl_cv_ckproto
#define cv_ckproto_len		Perl_cv_ckproto_len
#define cv_clone		Perl_cv_clone
#endif
#define gv_const_sv		Perl_gv_const_sv
#define cv_const_sv		Perl_cv_const_sv
#ifdef PERL_CORE
#define op_const_sv		Perl_op_const_sv
#endif
#define cv_undef		Perl_cv_undef
#define cx_dump			Perl_cx_dump
#define filter_add		Perl_filter_add
#define filter_del		Perl_filter_del
#define filter_read		Perl_filter_read
#define get_op_descs		Perl_get_op_descs
#define get_op_names		Perl_get_op_names
#ifdef PERL_CORE
#define get_no_modify		Perl_get_no_modify
#define get_opargs		Perl_get_opargs
#endif
#define get_ppaddr		Perl_get_ppaddr
#if defined(PERL_CORE) || defined(PERL_EXT)
#define cxinc			Perl_cxinc
#endif
#define deb			Perl_deb
#define vdeb			Perl_vdeb
#define debprofdump		Perl_debprofdump
#define debop			Perl_debop
#define debstack		Perl_debstack
#define debstackptrs		Perl_debstackptrs
#define delimcpy		Perl_delimcpy
#ifdef PERL_CORE
#define delete_eval_scope	Perl_delete_eval_scope
#define deprecate		Perl_deprecate
#define deprecate_old		Perl_deprecate_old
#endif
#define die			Perl_die
#ifdef PERL_CORE
#define vdie			Perl_vdie
#define die_where		Perl_die_where
#endif
#define dounwind		Perl_dounwind
#ifdef PERL_CORE
#define do_aexec5		Perl_do_aexec5
#endif
#define do_binmode		Perl_do_binmode
#ifdef PERL_CORE
#define do_chop			Perl_do_chop
#endif
#define do_close		Perl_do_close
#ifdef PERL_CORE
#define do_eof			Perl_do_eof
#endif
#ifdef PERL_DEFAULT_DO_EXEC3_IMPLEMENTATION
#else
#ifdef PERL_CORE
#define do_exec			Perl_do_exec
#endif
#endif
#if defined(WIN32) || defined(__SYMBIAN32__) || defined(VMS)
#define do_aspawn		Perl_do_aspawn
#define do_spawn		Perl_do_spawn
#define do_spawn_nowait		Perl_do_spawn_nowait
#endif
#if !defined(WIN32)
#ifdef PERL_CORE
#define do_exec3		Perl_do_exec3
#endif
#endif
#ifdef PERL_CORE
#define do_execfree		Perl_do_execfree
#endif
#if defined(PERL_IN_DOIO_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define exec_failed		S_exec_failed
#endif
#endif
#if defined(HAS_MSG) || defined(HAS_SEM) || defined(HAS_SHM)
#ifdef PERL_CORE
#define do_ipcctl		Perl_do_ipcctl
#define do_ipcget		Perl_do_ipcget
#define do_msgrcv		Perl_do_msgrcv
#define do_msgsnd		Perl_do_msgsnd
#define do_semop		Perl_do_semop
#define do_shmio		Perl_do_shmio
#endif
#endif
#define do_join			Perl_do_join
#ifdef PERL_CORE
#define do_kv			Perl_do_kv
#endif
#define do_open9		Perl_do_open9
#define do_openn		Perl_do_openn
#ifdef PERL_CORE
#define do_print		Perl_do_print
#define do_readline		Perl_do_readline
#define do_chomp		Perl_do_chomp
#define do_seek			Perl_do_seek
#endif
#define do_sprintf		Perl_do_sprintf
#ifdef PERL_CORE
#define do_sysseek		Perl_do_sysseek
#define do_tell			Perl_do_tell
#define do_trans		Perl_do_trans
#define do_vecget		Perl_do_vecget
#define do_vecset		Perl_do_vecset
#define do_vop			Perl_do_vop
#define dofile			Perl_dofile
#endif
#define dowantarray		Perl_dowantarray
#define dump_all		Perl_dump_all
#define dump_eval		Perl_dump_eval
#if defined(DUMP_FDS)
#define dump_fds		Perl_dump_fds
#endif
#define dump_form		Perl_dump_form
#define gv_dump			Perl_gv_dump
#define op_dump			Perl_op_dump
#define pmop_dump		Perl_pmop_dump
#define dump_packsubs		Perl_dump_packsubs
#define dump_sub		Perl_dump_sub
#define fbm_compile		Perl_fbm_compile
#define fbm_instr		Perl_fbm_instr
#ifdef PERL_CORE
#define find_script		Perl_find_script
#define force_list		Perl_force_list
#define fold_constants		Perl_fold_constants
#endif
#define form			Perl_form
#define vform			Perl_vform
#define free_tmps		Perl_free_tmps
#ifdef PERL_CORE
#define gen_constant_list	Perl_gen_constant_list
#endif
#if !defined(HAS_GETENV_LEN)
#ifdef PERL_CORE
#define getenv_len		Perl_getenv_len
#endif
#endif
#define gp_free			Perl_gp_free
#define gp_ref			Perl_gp_ref
#define gv_AVadd		Perl_gv_AVadd
#define gv_HVadd		Perl_gv_HVadd
#define gv_IOadd		Perl_gv_IOadd
#define gv_autoload4		Perl_gv_autoload4
#define gv_check		Perl_gv_check
#define gv_efullname		Perl_gv_efullname
#define gv_efullname4		Perl_gv_efullname4
#define gv_fetchfile		Perl_gv_fetchfile
#define gv_fetchfile_flags	Perl_gv_fetchfile_flags
#define gv_fetchmeth		Perl_gv_fetchmeth
#define gv_fetchmeth_autoload	Perl_gv_fetchmeth_autoload
#define gv_fetchmethod_autoload	Perl_gv_fetchmethod_autoload
#define gv_fetchpv		Perl_gv_fetchpv
#define gv_fullname		Perl_gv_fullname
#define gv_fullname4		Perl_gv_fullname4
#define gv_init			Perl_gv_init
#define gv_name_set		Perl_gv_name_set
#define gv_stashpv		Perl_gv_stashpv
#define gv_stashpvn		Perl_gv_stashpvn
#define gv_stashsv		Perl_gv_stashsv
#define hv_clear		Perl_hv_clear
#define hv_delayfree_ent	Perl_hv_delayfree_ent
#define hv_common		Perl_hv_common
#define hv_common_key_len	Perl_hv_common_key_len
#define hv_free_ent		Perl_hv_free_ent
#define hv_iterinit		Perl_hv_iterinit
#define hv_iterkey		Perl_hv_iterkey
#define hv_iterkeysv		Perl_hv_iterkeysv
#define hv_iternextsv		Perl_hv_iternextsv
#define hv_iternext_flags	Perl_hv_iternext_flags
#define hv_iterval		Perl_hv_iterval
#define hv_ksplit		Perl_hv_ksplit
#define hv_undef		Perl_hv_undef
#define ibcmp			Perl_ibcmp
#define ibcmp_locale		Perl_ibcmp_locale
#define ibcmp_utf8		Perl_ibcmp_utf8
#ifdef PERL_CORE
#define ingroup			Perl_ingroup
#define init_argv_symbols	Perl_init_argv_symbols
#define init_debugger		Perl_init_debugger
#endif
#define init_stacks		Perl_init_stacks
#define init_tm			Perl_init_tm
#ifdef PERL_CORE
#define intro_my		Perl_intro_my
#endif
#define instr			Perl_instr
#ifdef PERL_CORE
#define io_close		Perl_io_close
#define invert			Perl_invert
#define is_gv_magical		Perl_is_gv_magical
#endif
#define is_lvalue_sub		Perl_is_lvalue_sub
#define to_uni_upper_lc		Perl_to_uni_upper_lc
#define to_uni_title_lc		Perl_to_uni_title_lc
#define to_uni_lower_lc		Perl_to_uni_lower_lc
#define is_uni_alnum		Perl_is_uni_alnum
#define is_uni_alnumc		Perl_is_uni_alnumc
#define is_uni_idfirst		Perl_is_uni_idfirst
#define is_uni_alpha		Perl_is_uni_alpha
#define is_uni_ascii		Perl_is_uni_ascii
#define is_uni_space		Perl_is_uni_space
#define is_uni_cntrl		Perl_is_uni_cntrl
#define is_uni_graph		Perl_is_uni_graph
#define is_uni_digit		Perl_is_uni_digit
#define is_uni_upper		Perl_is_uni_upper
#define is_uni_lower		Perl_is_uni_lower
#define is_uni_print		Perl_is_uni_print
#define is_uni_punct		Perl_is_uni_punct
#define is_uni_xdigit		Perl_is_uni_xdigit
#define to_uni_upper		Perl_to_uni_upper
#define to_uni_title		Perl_to_uni_title
#define to_uni_lower		Perl_to_uni_lower
#define to_uni_fold		Perl_to_uni_fold
#define is_uni_alnum_lc		Perl_is_uni_alnum_lc
#define is_uni_alnumc_lc	Perl_is_uni_alnumc_lc
#define is_uni_idfirst_lc	Perl_is_uni_idfirst_lc
#define is_uni_alpha_lc		Perl_is_uni_alpha_lc
#define is_uni_ascii_lc		Perl_is_uni_ascii_lc
#define is_uni_space_lc		Perl_is_uni_space_lc
#define is_uni_cntrl_lc		Perl_is_uni_cntrl_lc
#define is_uni_graph_lc		Perl_is_uni_graph_lc
#define is_uni_digit_lc		Perl_is_uni_digit_lc
#define is_uni_upper_lc		Perl_is_uni_upper_lc
#define is_uni_lower_lc		Perl_is_uni_lower_lc
#define is_uni_print_lc		Perl_is_uni_print_lc
#define is_uni_punct_lc		Perl_is_uni_punct_lc
#define is_uni_xdigit_lc	Perl_is_uni_xdigit_lc
#define is_utf8_char		Perl_is_utf8_char
#define is_utf8_string		Perl_is_utf8_string
#define is_utf8_string_loclen	Perl_is_utf8_string_loclen
#define is_utf8_alnum		Perl_is_utf8_alnum
#define is_utf8_alnumc		Perl_is_utf8_alnumc
#define is_utf8_idfirst		Perl_is_utf8_idfirst
#define is_utf8_idcont		Perl_is_utf8_idcont
#define is_utf8_alpha		Perl_is_utf8_alpha
#define is_utf8_ascii		Perl_is_utf8_ascii
#define is_utf8_space		Perl_is_utf8_space
#define is_utf8_cntrl		Perl_is_utf8_cntrl
#define is_utf8_digit		Perl_is_utf8_digit
#define is_utf8_graph		Perl_is_utf8_graph
#define is_utf8_upper		Perl_is_utf8_upper
#define is_utf8_lower		Perl_is_utf8_lower
#define is_utf8_print		Perl_is_utf8_print
#define is_utf8_punct		Perl_is_utf8_punct
#define is_utf8_xdigit		Perl_is_utf8_xdigit
#define is_utf8_mark		Perl_is_utf8_mark
#ifdef PERL_CORE
#define jmaybe			Perl_jmaybe
#define keyword			Perl_keyword
#endif
#define leave_scope		Perl_leave_scope
#if defined(PERL_CORE) || defined(PERL_EXT)
#define lex_end			Perl_lex_end
#endif
#ifdef PERL_CORE
#define lex_start		Perl_lex_start
#endif
#define op_null			Perl_op_null
#if defined(PERL_CORE) || defined(PERL_EXT)
#define op_clear		Perl_op_clear
#endif
#define op_refcnt_lock		Perl_op_refcnt_lock
#define op_refcnt_unlock	Perl_op_refcnt_unlock
#ifdef PERL_CORE
#define linklist		Perl_linklist
#define list			Perl_list
#define listkids		Perl_listkids
#endif
#define load_module		Perl_load_module
#define vload_module		Perl_vload_module
#ifdef PERL_CORE
#define localize		Perl_localize
#endif
#define looks_like_number	Perl_looks_like_number
#define grok_bin		Perl_grok_bin
#define grok_hex		Perl_grok_hex
#define grok_number		Perl_grok_number
#define grok_numeric_radix	Perl_grok_numeric_radix
#define grok_oct		Perl_grok_oct
#ifdef PERL_CORE
#define magic_clearenv		Perl_magic_clearenv
#define magic_clear_all_env	Perl_magic_clear_all_env
#define magic_clearhint		Perl_magic_clearhint
#define magic_clearisa		Perl_magic_clearisa
#define magic_clearpack		Perl_magic_clearpack
#define magic_clearsig		Perl_magic_clearsig
#define magic_existspack	Perl_magic_existspack
#define magic_freeregexp	Perl_magic_freeregexp
#define magic_freeovrld		Perl_magic_freeovrld
#define magic_get		Perl_magic_get
#define magic_getarylen		Perl_magic_getarylen
#define magic_getdefelem	Perl_magic_getdefelem
#define magic_getnkeys		Perl_magic_getnkeys
#define magic_getpack		Perl_magic_getpack
#define magic_getpos		Perl_magic_getpos
#define magic_getsig		Perl_magic_getsig
#define magic_getsubstr		Perl_magic_getsubstr
#define magic_gettaint		Perl_magic_gettaint
#define magic_getuvar		Perl_magic_getuvar
#define magic_getvec		Perl_magic_getvec
#define magic_len		Perl_magic_len
#define magic_nextpack		Perl_magic_nextpack
#define magic_regdata_cnt	Perl_magic_regdata_cnt
#define magic_regdatum_get	Perl_magic_regdatum_get
#define magic_regdatum_set	Perl_magic_regdatum_set
#define magic_set		Perl_magic_set
#define magic_setamagic		Perl_magic_setamagic
#define magic_setarylen		Perl_magic_setarylen
#define magic_freearylen_p	Perl_magic_freearylen_p
#endif
#ifndef NO_MATHOMS
#ifdef PERL_CORE
#define magic_setbm		Perl_magic_setbm
#define magic_setfm		Perl_magic_setfm
#endif
#endif
#ifdef PERL_CORE
#define magic_setdbline		Perl_magic_setdbline
#define magic_setdefelem	Perl_magic_setdefelem
#define magic_setenv		Perl_magic_setenv
#define magic_sethint		Perl_magic_sethint
#define magic_setisa		Perl_magic_setisa
#endif
#ifndef NO_MATHOMS
#ifdef PERL_CORE
#define magic_setglob		Perl_magic_setglob
#endif
#endif
#ifdef PERL_CORE
#define magic_setmglob		Perl_magic_setmglob
#define magic_setnkeys		Perl_magic_setnkeys
#define magic_setpack		Perl_magic_setpack
#define magic_setpos		Perl_magic_setpos
#define magic_setregexp		Perl_magic_setregexp
#define magic_setsig		Perl_magic_setsig
#define magic_setsubstr		Perl_magic_setsubstr
#define magic_settaint		Perl_magic_settaint
#define magic_setuvar		Perl_magic_setuvar
#define magic_setvec		Perl_magic_setvec
#define magic_setutf8		Perl_magic_setutf8
#define magic_set_all_env	Perl_magic_set_all_env
#define magic_sizepack		Perl_magic_sizepack
#define magic_wipepack		Perl_magic_wipepack
#define magicname		Perl_magicname
#endif
#define markstack_grow		Perl_markstack_grow
#if defined(USE_LOCALE_COLLATE)
#ifdef PERL_CORE
#define magic_setcollxfrm	Perl_magic_setcollxfrm
#define mem_collxfrm		Perl_mem_collxfrm
#endif
#endif
#define mess			Perl_mess
#define vmess			Perl_vmess
#if defined(PERL_CORE) || defined(PERL_EXT)
#define qerror			Perl_qerror
#endif
#define sortsv			Perl_sortsv
#define sortsv_flags		Perl_sortsv_flags
#define mg_clear		Perl_mg_clear
#define mg_copy			Perl_mg_copy
#ifdef PERL_CORE
#define mg_localize		Perl_mg_localize
#endif
#define mg_find			Perl_mg_find
#define mg_free			Perl_mg_free
#define mg_get			Perl_mg_get
#define mg_length		Perl_mg_length
#define mg_magical		Perl_mg_magical
#define mg_set			Perl_mg_set
#define mg_size			Perl_mg_size
#define mini_mktime		Perl_mini_mktime
#if defined(PERL_CORE) || defined(PERL_EXT)
#define mod			Perl_mod
#endif
#ifdef PERL_CORE
#define mode_from_discipline	Perl_mode_from_discipline
#endif
#define moreswitches		Perl_moreswitches
#ifdef PERL_CORE
#define my			Perl_my
#endif
#define my_atof			Perl_my_atof
#if (!defined(HAS_MEMCPY) && !defined(HAS_BCOPY)) || (!defined(HAS_MEMMOVE) && !defined(HAS_SAFE_MEMCPY) && !defined(HAS_SAFE_BCOPY))
#define my_bcopy		Perl_my_bcopy
#endif
#if !defined(HAS_BZERO) && !defined(HAS_MEMSET)
#define my_bzero		Perl_my_bzero
#endif
#define my_exit			Perl_my_exit
#define my_failure_exit		Perl_my_failure_exit
#define my_fflush_all		Perl_my_fflush_all
#define my_fork			Perl_my_fork
#define atfork_lock		Perl_atfork_lock
#define atfork_unlock		Perl_atfork_unlock
#define my_lstat		Perl_my_lstat
#if !defined(HAS_MEMCMP) || !defined(HAS_SANE_MEMCMP)
#define my_memcmp		Perl_my_memcmp
#endif
#if !defined(HAS_MEMSET)
#define my_memset		Perl_my_memset
#endif
#define my_pclose		Perl_my_pclose
#define my_popen		Perl_my_popen
#define my_popen_list		Perl_my_popen_list
#define my_setenv		Perl_my_setenv
#define my_stat			Perl_my_stat
#define my_strftime		Perl_my_strftime
#if defined(MYSWAP)
#define my_swap			Perl_my_swap
#define my_htonl		Perl_my_htonl
#define my_ntohl		Perl_my_ntohl
#endif
#ifdef PERL_CORE
#define my_unexec		Perl_my_unexec
#endif
#define newANONLIST		Perl_newANONLIST
#define newANONHASH		Perl_newANONHASH
#define newANONSUB		Perl_newANONSUB
#define newASSIGNOP		Perl_newASSIGNOP
#define newCONDOP		Perl_newCONDOP
#define newCONSTSUB		Perl_newCONSTSUB
#ifdef PERL_MAD
#define newFORM			Perl_newFORM
#else
#define newFORM			Perl_newFORM
#endif
#define newFOROP		Perl_newFOROP
#define newGIVENOP		Perl_newGIVENOP
#define newLOGOP		Perl_newLOGOP
#define newLOOPEX		Perl_newLOOPEX
#define newLOOPOP		Perl_newLOOPOP
#define newNULLLIST		Perl_newNULLLIST
#define newOP			Perl_newOP
#define newPROG			Perl_newPROG
#define newRANGE		Perl_newRANGE
#define newSLICEOP		Perl_newSLICEOP
#define newSTATEOP		Perl_newSTATEOP
#define newSUB			Perl_newSUB
#define newXS_flags		Perl_newXS_flags
#define newXS			Perl_newXS
#define newAVREF		Perl_newAVREF
#define newBINOP		Perl_newBINOP
#define newCVREF		Perl_newCVREF
#define newGVOP			Perl_newGVOP
#define newGVgen		Perl_newGVgen
#define newGVREF		Perl_newGVREF
#define newHVREF		Perl_newHVREF
#define newHVhv			Perl_newHVhv
#define newIO			Perl_newIO
#define newLISTOP		Perl_newLISTOP
#ifdef USE_ITHREADS
#define newPADOP		Perl_newPADOP
#endif
#define newPMOP			Perl_newPMOP
#define newPVOP			Perl_newPVOP
#define newRV			Perl_newRV
#define newRV_noinc		Perl_newRV_noinc
#define newSV			Perl_newSV
#define newSVREF		Perl_newSVREF
#define newSVOP			Perl_newSVOP
#define newSViv			Perl_newSViv
#define newSVuv			Perl_newSVuv
#define newSVnv			Perl_newSVnv
#define newSVpv			Perl_newSVpv
#define newSVpvn		Perl_newSVpvn
#define newSVpvn_flags		Perl_newSVpvn_flags
#define newSVhek		Perl_newSVhek
#define newSVpvn_share		Perl_newSVpvn_share
#define newSVpvf		Perl_newSVpvf
#define vnewSVpvf		Perl_vnewSVpvf
#define newSVrv			Perl_newSVrv
#define newSVsv			Perl_newSVsv
#define newSV_type		Perl_newSV_type
#define newUNOP			Perl_newUNOP
#define newWHENOP		Perl_newWHENOP
#define newWHILEOP		Perl_newWHILEOP
#define new_stackinfo		Perl_new_stackinfo
#define scan_vstring		Perl_scan_vstring
#define scan_version		Perl_scan_version
#define new_version		Perl_new_version
#define upg_version		Perl_upg_version
#define vverify			Perl_vverify
#define vnumify			Perl_vnumify
#define vnormal			Perl_vnormal
#define vstringify		Perl_vstringify
#define vcmp			Perl_vcmp
#ifdef PERL_CORE
#define nextargv		Perl_nextargv
#endif
#define ninstr			Perl_ninstr
#ifdef PERL_CORE
#define oopsCV			Perl_oopsCV
#endif
#define op_free			Perl_op_free
#ifdef PERL_MAD
#ifdef PERL_CORE
#define package			Perl_package
#endif
#else
#ifdef PERL_CORE
#define package			Perl_package
#endif
#endif
#ifdef PERL_CORE
#define pad_alloc		Perl_pad_alloc
#define allocmy			Perl_allocmy
#define pad_findmy		Perl_pad_findmy
#endif
#define find_rundefsvoffset	Perl_find_rundefsvoffset
#ifdef PERL_CORE
#define oopsAV			Perl_oopsAV
#define oopsHV			Perl_oopsHV
#define pad_leavemy		Perl_pad_leavemy
#endif
#define pad_sv			Perl_pad_sv
#ifdef PERL_CORE
#define pad_free		Perl_pad_free
#define pad_reset		Perl_pad_reset
#define pad_swipe		Perl_pad_swipe
#define peep			Perl_peep
#endif
#if defined(USE_REENTRANT_API)
#define reentrant_size		Perl_reentrant_size
#define reentrant_init		Perl_reentrant_init
#define reentrant_free		Perl_reentrant_free
#define reentrant_retry		Perl_reentrant_retry
#endif
#define call_atexit		Perl_call_atexit
#define call_argv		Perl_call_argv
#define call_method		Perl_call_method
#define call_pv			Perl_call_pv
#define call_sv			Perl_call_sv
#define despatch_signals	Perl_despatch_signals
#define doref			Perl_doref
#define eval_pv			Perl_eval_pv
#define eval_sv			Perl_eval_sv
#define get_sv			Perl_get_sv
#define get_av			Perl_get_av
#define get_hv			Perl_get_hv
#define get_cv			Perl_get_cv
#define get_cvn_flags		Perl_get_cvn_flags
#define init_i18nl10n		Perl_init_i18nl10n
#define init_i18nl14n		Perl_init_i18nl14n
#define new_collate		Perl_new_collate
#define new_ctype		Perl_new_ctype
#define new_numeric		Perl_new_numeric
#define set_numeric_local	Perl_set_numeric_local
#define set_numeric_radix	Perl_set_numeric_radix
#define set_numeric_standard	Perl_set_numeric_standard
#define require_pv		Perl_require_pv
#define pack_cat		Perl_pack_cat
#define packlist		Perl_packlist
#ifdef PERL_USES_PL_PIDSTATUS
#ifdef PERL_CORE
#define pidgone			Perl_pidgone
#endif
#endif
#define pmflag			Perl_pmflag
#ifdef PERL_CORE
#define pmruntime		Perl_pmruntime
#define pmtrans			Perl_pmtrans
#endif
#define pop_scope		Perl_pop_scope
#ifdef PERL_CORE
#define prepend_elem		Perl_prepend_elem
#endif
#define push_scope		Perl_push_scope
#ifdef PERL_CORE
#define refkids			Perl_refkids
#endif
#define regdump			Perl_regdump
#define regdump			Perl_regdump
#define regclass_swash		Perl_regclass_swash
#define pregexec		Perl_pregexec
#define pregfree		Perl_pregfree
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_temp_copy		Perl_reg_temp_copy
#endif
#define regfree_internal	Perl_regfree_internal
#define reg_stringify		Perl_reg_stringify
#if defined(USE_ITHREADS)
#define regdupe_internal	Perl_regdupe_internal
#endif
#define pregcomp		Perl_pregcomp
#define re_compile		Perl_re_compile
#define re_intuit_start		Perl_re_intuit_start
#define re_intuit_string	Perl_re_intuit_string
#define regexec_flags		Perl_regexec_flags
#define regnext			Perl_regnext
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_named_buff		Perl_reg_named_buff
#define reg_named_buff_iter	Perl_reg_named_buff_iter
#endif
#define reg_named_buff_fetch	Perl_reg_named_buff_fetch
#define reg_named_buff_exists	Perl_reg_named_buff_exists
#define reg_named_buff_firstkey	Perl_reg_named_buff_firstkey
#define reg_named_buff_nextkey	Perl_reg_named_buff_nextkey
#define reg_named_buff_scalar	Perl_reg_named_buff_scalar
#define reg_named_buff_all	Perl_reg_named_buff_all
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_numbered_buff_fetch	Perl_reg_numbered_buff_fetch
#define reg_numbered_buff_store	Perl_reg_numbered_buff_store
#define reg_numbered_buff_length	Perl_reg_numbered_buff_length
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_qr_package		Perl_reg_qr_package
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regprop			Perl_regprop
#endif
#define repeatcpy		Perl_repeatcpy
#define rninstr			Perl_rninstr
#define rsignal			Perl_rsignal
#ifdef PERL_CORE
#define rsignal_restore		Perl_rsignal_restore
#define rsignal_save		Perl_rsignal_save
#endif
#define rsignal_state		Perl_rsignal_state
#ifdef PERL_CORE
#define rxres_free		Perl_rxres_free
#define rxres_restore		Perl_rxres_restore
#define rxres_save		Perl_rxres_save
#endif
#if !defined(HAS_RENAME)
#ifdef PERL_CORE
#define same_dirent		Perl_same_dirent
#endif
#endif
#define savepv			Perl_savepv
#define savepvn			Perl_savepvn
#define savesharedpv		Perl_savesharedpv
#define savesharedpvn		Perl_savesharedpvn
#define savesvpv		Perl_savesvpv
#define savestack_grow		Perl_savestack_grow
#define savestack_grow_cnt	Perl_savestack_grow_cnt
#define save_aelem		Perl_save_aelem
#define save_alloc		Perl_save_alloc
#define save_aptr		Perl_save_aptr
#define save_ary		Perl_save_ary
#define save_bool		Perl_save_bool
#define save_clearsv		Perl_save_clearsv
#define save_delete		Perl_save_delete
#define save_destructor		Perl_save_destructor
#define save_destructor_x	Perl_save_destructor_x
#define save_generic_svref	Perl_save_generic_svref
#define save_generic_pvref	Perl_save_generic_pvref
#define save_shared_pvref	Perl_save_shared_pvref
#define save_gp			Perl_save_gp
#define save_hash		Perl_save_hash
#ifdef PERL_CORE
#define save_hints		Perl_save_hints
#endif
#define save_helem		Perl_save_helem
#define save_hptr		Perl_save_hptr
#define save_I16		Perl_save_I16
#define save_I32		Perl_save_I32
#define save_I8			Perl_save_I8
#define save_int		Perl_save_int
#define save_item		Perl_save_item
#define save_iv			Perl_save_iv
#define save_list		Perl_save_list
#define save_long		Perl_save_long
#define save_nogv		Perl_save_nogv
#define save_scalar		Perl_save_scalar
#define save_pptr		Perl_save_pptr
#define save_vptr		Perl_save_vptr
#define save_re_context		Perl_save_re_context
#define save_padsv		Perl_save_padsv
#define save_padsv_and_mortalize	Perl_save_padsv_and_mortalize
#define save_sptr		Perl_save_sptr
#define save_svref		Perl_save_svref
#define save_pushptr		Perl_save_pushptr
#ifdef PERL_CORE
#define save_pushi32ptr		Perl_save_pushi32ptr
#define save_pushptrptr		Perl_save_pushptrptr
#endif
#if defined(PERL_IN_SCOPE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define save_pushptri32ptr	S_save_pushptri32ptr
#endif
#endif
#ifdef PERL_CORE
#define sawparens		Perl_sawparens
#define scalar			Perl_scalar
#define scalarkids		Perl_scalarkids
#define scalarseq		Perl_scalarseq
#define scalarvoid		Perl_scalarvoid
#endif
#define scan_bin		Perl_scan_bin
#define scan_hex		Perl_scan_hex
#define scan_num		Perl_scan_num
#define scan_oct		Perl_scan_oct
#ifdef PERL_CORE
#define scope			Perl_scope
#endif
#define screaminstr		Perl_screaminstr
#if !defined(VMS)
#ifdef PERL_CORE
#define setenv_getix		Perl_setenv_getix
#endif
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define setdefout		Perl_setdefout
#endif
#define share_hek		Perl_share_hek
#if defined(HAS_SIGACTION) && defined(SA_SIGINFO)
#ifdef PERL_CORE
#define sighandler		Perl_sighandler
#endif
#define csighandler		Perl_csighandler
#else
#ifdef PERL_CORE
#define sighandler		Perl_sighandler
#endif
#define csighandler		Perl_csighandler
#endif
#define stack_grow		Perl_stack_grow
#define start_subparse		Perl_start_subparse
#ifdef PERL_CORE
#define sub_crush_depth		Perl_sub_crush_depth
#endif
#define sv_2bool		Perl_sv_2bool
#define sv_2cv			Perl_sv_2cv
#define sv_2io			Perl_sv_2io
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define glob_2number		S_glob_2number
#define glob_2pv		S_glob_2pv
#endif
#endif
#define sv_2iv_flags		Perl_sv_2iv_flags
#define sv_2mortal		Perl_sv_2mortal
#define sv_2nv			Perl_sv_2nv
#ifdef PERL_CORE
#define sv_2num			Perl_sv_2num
#endif
#define sv_2pv_flags		Perl_sv_2pv_flags
#define sv_2pvutf8		Perl_sv_2pvutf8
#define sv_2pvbyte		Perl_sv_2pvbyte
#define sv_pvn_nomg		Perl_sv_pvn_nomg
#define sv_2uv_flags		Perl_sv_2uv_flags
#define sv_iv			Perl_sv_iv
#define sv_uv			Perl_sv_uv
#define sv_nv			Perl_sv_nv
#define sv_pvn			Perl_sv_pvn
#define sv_pvutf8n		Perl_sv_pvutf8n
#define sv_pvbyten		Perl_sv_pvbyten
#define sv_true			Perl_sv_true
#ifdef PERL_CORE
#define sv_add_arena		Perl_sv_add_arena
#endif
#define sv_backoff		Perl_sv_backoff
#define sv_bless		Perl_sv_bless
#define sv_catpvf		Perl_sv_catpvf
#define sv_vcatpvf		Perl_sv_vcatpvf
#define sv_catpv		Perl_sv_catpv
#define sv_chop			Perl_sv_chop
#ifdef PERL_CORE
#define sv_clean_all		Perl_sv_clean_all
#define sv_clean_objs		Perl_sv_clean_objs
#endif
#define sv_clear		Perl_sv_clear
#define sv_cmp			Perl_sv_cmp
#define sv_cmp_locale		Perl_sv_cmp_locale
#if defined(USE_LOCALE_COLLATE)
#define sv_collxfrm		Perl_sv_collxfrm
#endif
#define sv_compile_2op		Perl_sv_compile_2op
#define getcwd_sv		Perl_getcwd_sv
#define sv_dec			Perl_sv_dec
#define sv_dump			Perl_sv_dump
#define sv_derived_from		Perl_sv_derived_from
#define sv_does			Perl_sv_does
#define sv_eq			Perl_sv_eq
#define sv_free			Perl_sv_free
#ifdef PERL_CORE
#define sv_free_arenas		Perl_sv_free_arenas
#endif
#define sv_gets			Perl_sv_gets
#define sv_grow			Perl_sv_grow
#define sv_inc			Perl_sv_inc
#define sv_insert_flags		Perl_sv_insert_flags
#define sv_isa			Perl_sv_isa
#define sv_isobject		Perl_sv_isobject
#define sv_len			Perl_sv_len
#define sv_len_utf8		Perl_sv_len_utf8
#define sv_magic		Perl_sv_magic
#define sv_magicext		Perl_sv_magicext
#define sv_mortalcopy		Perl_sv_mortalcopy
#define sv_newmortal		Perl_sv_newmortal
#define sv_newref		Perl_sv_newref
#define sv_peek			Perl_sv_peek
#define sv_pos_u2b		Perl_sv_pos_u2b
#define sv_pos_b2u		Perl_sv_pos_b2u
#define sv_pvutf8n_force	Perl_sv_pvutf8n_force
#define sv_pvbyten_force	Perl_sv_pvbyten_force
#define sv_recode_to_utf8	Perl_sv_recode_to_utf8
#define sv_cat_decode		Perl_sv_cat_decode
#define sv_reftype		Perl_sv_reftype
#define sv_replace		Perl_sv_replace
#define sv_report_used		Perl_sv_report_used
#define sv_reset		Perl_sv_reset
#define sv_setpvf		Perl_sv_setpvf
#define sv_vsetpvf		Perl_sv_vsetpvf
#define sv_setiv		Perl_sv_setiv
#define sv_setpviv		Perl_sv_setpviv
#define sv_setuv		Perl_sv_setuv
#define sv_setnv		Perl_sv_setnv
#define sv_setref_iv		Perl_sv_setref_iv
#define sv_setref_uv		Perl_sv_setref_uv
#define sv_setref_nv		Perl_sv_setref_nv
#define sv_setref_pv		Perl_sv_setref_pv
#define sv_setref_pvn		Perl_sv_setref_pvn
#define sv_setpv		Perl_sv_setpv
#define sv_setpvn		Perl_sv_setpvn
#define sv_tainted		Perl_sv_tainted
#define sv_unmagic		Perl_sv_unmagic
#define sv_unref_flags		Perl_sv_unref_flags
#define sv_untaint		Perl_sv_untaint
#define sv_upgrade		Perl_sv_upgrade
#define sv_usepvn_flags		Perl_sv_usepvn_flags
#define sv_vcatpvfn		Perl_sv_vcatpvfn
#define sv_vsetpvfn		Perl_sv_vsetpvfn
#define str_to_version		Perl_str_to_version
#define swash_init		Perl_swash_init
#define swash_fetch		Perl_swash_fetch
#define taint_env		Perl_taint_env
#define taint_proper		Perl_taint_proper
#define to_utf8_case		Perl_to_utf8_case
#define to_utf8_lower		Perl_to_utf8_lower
#define to_utf8_upper		Perl_to_utf8_upper
#define to_utf8_title		Perl_to_utf8_title
#define to_utf8_fold		Perl_to_utf8_fold
#if defined(UNLINK_ALL_VERSIONS)
#define unlnk			Perl_unlnk
#endif
#define unpack_str		Perl_unpack_str
#define unpackstring		Perl_unpackstring
#define unsharepvn		Perl_unsharepvn
#ifdef PERL_CORE
#define unshare_hek		Perl_unshare_hek
#endif
#ifdef PERL_MAD
#ifdef PERL_CORE
#define utilize			Perl_utilize
#endif
#else
#ifdef PERL_CORE
#define utilize			Perl_utilize
#endif
#endif
#define utf16_to_utf8		Perl_utf16_to_utf8
#define utf16_to_utf8_reversed	Perl_utf16_to_utf8_reversed
#define utf8_length		Perl_utf8_length
#define utf8_distance		Perl_utf8_distance
#define utf8_hop		Perl_utf8_hop
#define utf8_to_bytes		Perl_utf8_to_bytes
#define bytes_from_utf8		Perl_bytes_from_utf8
#define bytes_to_utf8		Perl_bytes_to_utf8
#define utf8_to_uvchr		Perl_utf8_to_uvchr
#define utf8_to_uvuni		Perl_utf8_to_uvuni
#ifdef EBCDIC
#define utf8n_to_uvchr		Perl_utf8n_to_uvchr
#else
#endif
#define utf8n_to_uvuni		Perl_utf8n_to_uvuni
#ifdef EBCDIC
#define uvchr_to_utf8		Perl_uvchr_to_utf8
#else
#endif
#define uvchr_to_utf8_flags	Perl_uvchr_to_utf8_flags
#define uvuni_to_utf8_flags	Perl_uvuni_to_utf8_flags
#define pv_uni_display		Perl_pv_uni_display
#define sv_uni_display		Perl_sv_uni_display
#if defined(PERL_CORE) || defined(PERL_EXT)
#define vivify_defelem		Perl_vivify_defelem
#endif
#ifdef PERL_CORE
#define vivify_ref		Perl_vivify_ref
#define wait4pid		Perl_wait4pid
#define parse_unicode_opts	Perl_parse_unicode_opts
#endif
#define seed			Perl_seed
#ifdef PERL_CORE
#define get_hash_seed		Perl_get_hash_seed
#define report_evil_fh		Perl_report_evil_fh
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define report_uninit		Perl_report_uninit
#endif
#define warn			Perl_warn
#define vwarn			Perl_vwarn
#define warner			Perl_warner
#define vwarner			Perl_vwarner
#ifdef PERL_CORE
#define watch			Perl_watch
#endif
#define whichsig		Perl_whichsig
#ifdef PERL_CORE
#define write_to_stderr		Perl_write_to_stderr
#define yyerror			Perl_yyerror
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define yylex			Perl_yylex
#endif
#ifdef PERL_CORE
#define yyparse			Perl_yyparse
#define parser_free		Perl_parser_free
#define yywarn			Perl_yywarn
#endif
#if defined(MYMALLOC)
#define dump_mstats		Perl_dump_mstats
#define get_mstats		Perl_get_mstats
#endif
#define safesysmalloc		Perl_safesysmalloc
#define safesyscalloc		Perl_safesyscalloc
#define safesysrealloc		Perl_safesysrealloc
#define safesysfree		Perl_safesysfree
#if defined(PERL_GLOBAL_STRUCT)
#define GetVars			Perl_GetVars
#define init_global_struct	Perl_init_global_struct
#define free_global_struct	Perl_free_global_struct
#endif
#define runops_standard		Perl_runops_standard
#define runops_debug		Perl_runops_debug
#define sv_catpvf_mg		Perl_sv_catpvf_mg
#define sv_vcatpvf_mg		Perl_sv_vcatpvf_mg
#define sv_catpv_mg		Perl_sv_catpv_mg
#define sv_setpvf_mg		Perl_sv_setpvf_mg
#define sv_vsetpvf_mg		Perl_sv_vsetpvf_mg
#define sv_setiv_mg		Perl_sv_setiv_mg
#define sv_setpviv_mg		Perl_sv_setpviv_mg
#define sv_setuv_mg		Perl_sv_setuv_mg
#define sv_setnv_mg		Perl_sv_setnv_mg
#define sv_setpv_mg		Perl_sv_setpv_mg
#define sv_setpvn_mg		Perl_sv_setpvn_mg
#define sv_setsv_mg		Perl_sv_setsv_mg
#define get_vtbl		Perl_get_vtbl
#define pv_display		Perl_pv_display
#define pv_escape		Perl_pv_escape
#define pv_pretty		Perl_pv_pretty
#define dump_indent		Perl_dump_indent
#define dump_vindent		Perl_dump_vindent
#define do_gv_dump		Perl_do_gv_dump
#define do_gvgv_dump		Perl_do_gvgv_dump
#define do_hv_dump		Perl_do_hv_dump
#define do_magic_dump		Perl_do_magic_dump
#define do_op_dump		Perl_do_op_dump
#define do_pmop_dump		Perl_do_pmop_dump
#define do_sv_dump		Perl_do_sv_dump
#define magic_dump		Perl_magic_dump
#define reginitcolors		Perl_reginitcolors
#define sv_utf8_downgrade	Perl_sv_utf8_downgrade
#define sv_utf8_encode		Perl_sv_utf8_encode
#define sv_utf8_decode		Perl_sv_utf8_decode
#define sv_force_normal_flags	Perl_sv_force_normal_flags
#define tmps_grow		Perl_tmps_grow
#define sv_rvweaken		Perl_sv_rvweaken
#ifdef PERL_CORE
#define magic_killbackrefs	Perl_magic_killbackrefs
#endif
#define newANONATTRSUB		Perl_newANONATTRSUB
#define newATTRSUB		Perl_newATTRSUB
#ifdef PERL_MAD
#define newMYSUB		Perl_newMYSUB
#else
#define newMYSUB		Perl_newMYSUB
#endif
#ifdef PERL_CORE
#define my_attrs		Perl_my_attrs
#define boot_core_xsutils	Perl_boot_core_xsutils
#endif
#if defined(USE_ITHREADS)
#define cx_dup			Perl_cx_dup
#define si_dup			Perl_si_dup
#define ss_dup			Perl_ss_dup
#define any_dup			Perl_any_dup
#define he_dup			Perl_he_dup
#define hek_dup			Perl_hek_dup
#define re_dup			Perl_re_dup
#define fp_dup			Perl_fp_dup
#define dirp_dup		Perl_dirp_dup
#define gp_dup			Perl_gp_dup
#define mg_dup			Perl_mg_dup
#define sv_dup			Perl_sv_dup
#define rvpv_dup		Perl_rvpv_dup
#define parser_dup		Perl_parser_dup
#endif
#define ptr_table_new		Perl_ptr_table_new
#define ptr_table_fetch		Perl_ptr_table_fetch
#define ptr_table_store		Perl_ptr_table_store
#define ptr_table_split		Perl_ptr_table_split
#define ptr_table_clear		Perl_ptr_table_clear
#define ptr_table_free		Perl_ptr_table_free
#if defined(USE_ITHREADS)
#  if defined(HAVE_INTERP_INTERN)
#define sys_intern_dup		Perl_sys_intern_dup
#  endif
#endif
#if defined(HAVE_INTERP_INTERN)
#define sys_intern_clear	Perl_sys_intern_clear
#define sys_intern_init		Perl_sys_intern_init
#endif
#define custom_op_name		Perl_custom_op_name
#define custom_op_desc		Perl_custom_op_desc
#define sv_nosharing		Perl_sv_nosharing
#define sv_destroyable		Perl_sv_destroyable
#ifdef NO_MATHOMS
#else
#define sv_nounlocking		Perl_sv_nounlocking
#endif
#define nothreadhook		Perl_nothreadhook
#if defined(PERL_IN_DOOP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define do_trans_simple		S_do_trans_simple
#define do_trans_count		S_do_trans_count
#define do_trans_complex	S_do_trans_complex
#define do_trans_simple_utf8	S_do_trans_simple_utf8
#define do_trans_count_utf8	S_do_trans_count_utf8
#define do_trans_complex_utf8	S_do_trans_complex_utf8
#endif
#endif
#if defined(PERL_IN_GV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define gv_init_sv		S_gv_init_sv
#define gv_get_super_pkg	S_gv_get_super_pkg
#define require_tie_mod		S_require_tie_mod
#endif
#endif
#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define hsplit			S_hsplit
#define hfreeentries		S_hfreeentries
#define new_he			S_new_he
#define save_hek_flags		S_save_hek_flags
#define hv_magic_check		S_hv_magic_check
#define unshare_hek_or_pvn	S_unshare_hek_or_pvn
#define share_hek_flags		S_share_hek_flags
#define hv_notallowed		S_hv_notallowed
#define hv_auxinit		S_hv_auxinit
#define hv_delete_common	S_hv_delete_common
#define clear_placeholders	S_clear_placeholders
#define refcounted_he_value	S_refcounted_he_value
#endif
#endif
#if defined(PERL_IN_MG_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define save_magic		S_save_magic
#define magic_methpack		S_magic_methpack
#define magic_methcall		S_magic_methcall
#define restore_magic		S_restore_magic
#define unwind_handler_stack	S_unwind_handler_stack
#endif
#endif
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define ck_anoncode		Perl_ck_anoncode
#define ck_bitop		Perl_ck_bitop
#define ck_concat		Perl_ck_concat
#define ck_defined		Perl_ck_defined
#define ck_delete		Perl_ck_delete
#define ck_die			Perl_ck_die
#define ck_eof			Perl_ck_eof
#define ck_eval			Perl_ck_eval
#define ck_exec			Perl_ck_exec
#define ck_exists		Perl_ck_exists
#define ck_exit			Perl_ck_exit
#define ck_ftst			Perl_ck_ftst
#define ck_fun			Perl_ck_fun
#define ck_glob			Perl_ck_glob
#define ck_grep			Perl_ck_grep
#define ck_index		Perl_ck_index
#define ck_join			Perl_ck_join
#define ck_lengthconst		Perl_ck_lengthconst
#define ck_lfun			Perl_ck_lfun
#define ck_listiob		Perl_ck_listiob
#define ck_match		Perl_ck_match
#define ck_method		Perl_ck_method
#define ck_null			Perl_ck_null
#define ck_open			Perl_ck_open
#define ck_readline		Perl_ck_readline
#define ck_repeat		Perl_ck_repeat
#define ck_require		Perl_ck_require
#define ck_return		Perl_ck_return
#define ck_rfun			Perl_ck_rfun
#define ck_rvconst		Perl_ck_rvconst
#define ck_sassign		Perl_ck_sassign
#define ck_select		Perl_ck_select
#define ck_shift		Perl_ck_shift
#define ck_sort			Perl_ck_sort
#define ck_spair		Perl_ck_spair
#define ck_split		Perl_ck_split
#define ck_subr			Perl_ck_subr
#define ck_substr		Perl_ck_substr
#define ck_svconst		Perl_ck_svconst
#define ck_trunc		Perl_ck_trunc
#define ck_unpack		Perl_ck_unpack
#define is_handle_constructor	S_is_handle_constructor
#define is_list_assignment	S_is_list_assignment
#endif
#  ifdef USE_ITHREADS
#  else
#  endif
#ifdef PERL_CORE
#define find_and_forget_pmops	S_find_and_forget_pmops
#define cop_free		S_cop_free
#define modkids			S_modkids
#define scalarboolean		S_scalarboolean
#define newDEFSVOP		S_newDEFSVOP
#define search_const		S_search_const
#define new_logop		S_new_logop
#define simplify_sort		S_simplify_sort
#define gv_ename		S_gv_ename
#define scalar_mod_type		S_scalar_mod_type
#define my_kid			S_my_kid
#define dup_attrlist		S_dup_attrlist
#define apply_attrs		S_apply_attrs
#define apply_attrs_my		S_apply_attrs_my
#define bad_type		S_bad_type
#define no_bareword_allowed	S_no_bareword_allowed
#define no_fh_allowed		S_no_fh_allowed
#define too_few_arguments	S_too_few_arguments
#define too_many_arguments	S_too_many_arguments
#define looks_like_bool		S_looks_like_bool
#define newGIVWHENOP		S_newGIVWHENOP
#define ref_array_or_hash	S_ref_array_or_hash
#define process_special_blocks	S_process_special_blocks
#endif
#endif
#if defined(PL_OP_SLAB_ALLOC)
#define Slab_Alloc		Perl_Slab_Alloc
#define Slab_Free		Perl_Slab_Free
#  if defined(PERL_DEBUG_READONLY_OPS)
#    if defined(PERL_IN_OP_C)
#ifdef PERL_CORE
#define Slab_to_rw		S_Slab_to_rw
#endif
#    endif
#  endif
#endif
#if defined(PERL_IN_PERL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define find_beginning		S_find_beginning
#define forbid_setid		S_forbid_setid
#define incpush			S_incpush
#define init_interp		S_init_interp
#define init_ids		S_init_ids
#define init_main_stash		S_init_main_stash
#define init_perllib		S_init_perllib
#define init_postdump_symbols	S_init_postdump_symbols
#define init_predump_symbols	S_init_predump_symbols
#define my_exit_jump		S_my_exit_jump
#define nuke_stacks		S_nuke_stacks
#define open_script		S_open_script
#define usage			S_usage
#endif
#ifdef DOSUID
#  ifdef IAMSUID
#  else
#  endif
#else
#  ifndef SETUID_SCRIPTS_ARE_SECURE_NOW
#  endif
#endif
#  if defined(IAMSUID)
#ifdef PERL_CORE
#define fd_on_nosuid_fs		S_fd_on_nosuid_fs
#endif
#  endif
#ifdef PERL_CORE
#define parse_body		S_parse_body
#define run_body		S_run_body
#define incpush_if_exists	S_incpush_if_exists
#endif
#endif
#if defined(PERL_IN_PP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define refto			S_refto
#endif
#endif
#if defined(PERL_IN_PP_C) || defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
#endif
#if defined(PERL_IN_PP_PACK_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define unpack_rec		S_unpack_rec
#define pack_rec		S_pack_rec
#define mul128			S_mul128
#define measure_struct		S_measure_struct
#define next_symbol		S_next_symbol
#define is_an_int		S_is_an_int
#define div128			S_div128
#define group_end		S_group_end
#define get_num			S_get_num
#define need_utf8		S_need_utf8
#define first_symbol		S_first_symbol
#define sv_exp_grow		S_sv_exp_grow
#define bytes_to_uni		S_bytes_to_uni
#endif
#endif
#if defined(PERL_IN_PP_CTL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define docatch			S_docatch
#define dofindlabel		S_dofindlabel
#define doparseform		S_doparseform
#define num_overflow		S_num_overflow
#define dopoptoeval		S_dopoptoeval
#define dopoptogiven		S_dopoptogiven
#define dopoptolabel		S_dopoptolabel
#define dopoptoloop		S_dopoptoloop
#define dopoptosub_at		S_dopoptosub_at
#define dopoptowhen		S_dopoptowhen
#define save_lines		S_save_lines
#define doeval			S_doeval
#define check_type_and_open	S_check_type_and_open
#endif
#ifndef PERL_DISABLE_PMC
#ifdef PERL_CORE
#define doopen_pm		S_doopen_pm
#endif
#endif
#ifdef PERL_CORE
#define path_is_absolute	S_path_is_absolute
#define run_user_filter		S_run_user_filter
#define make_matcher		S_make_matcher
#define matcher_matches_sv	S_matcher_matches_sv
#define destroy_matcher		S_destroy_matcher
#define do_smartmatch		S_do_smartmatch
#endif
#endif
#if defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define do_oddball		S_do_oddball
#define method_common		S_method_common
#endif
#endif
#if defined(PERL_IN_PP_SORT_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define sv_ncmp			S_sv_ncmp
#define sv_i_ncmp		S_sv_i_ncmp
#define amagic_ncmp		S_amagic_ncmp
#define amagic_i_ncmp		S_amagic_i_ncmp
#define amagic_cmp		S_amagic_cmp
#define amagic_cmp_locale	S_amagic_cmp_locale
#define sortcv			S_sortcv
#define sortcv_xsub		S_sortcv_xsub
#define sortcv_stacked		S_sortcv_stacked
#define qsortsvu		S_qsortsvu
#endif
#endif
#if defined(PERL_IN_PP_SYS_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define doform			S_doform
#endif
#  if !defined(HAS_MKDIR) || !defined(HAS_RMDIR)
#ifdef PERL_CORE
#define dooneliner		S_dooneliner
#endif
#  endif
#ifdef PERL_CORE
#define space_join_names_mortal	S_space_join_names_mortal
#endif
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_DECL_PROT)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg			S_reg
#define reganode		S_reganode
#define regatom			S_regatom
#define regbranch		S_regbranch
#define reguni			S_reguni
#define regclass		S_regclass
#define regcurly		S_regcurly
#define reg_node		S_reg_node
#define reg_recode		S_reg_recode
#define regpiece		S_regpiece
#define reg_namedseq		S_reg_namedseq
#define reginsert		S_reginsert
#define regtail			S_regtail
#define reg_scan_name		S_reg_scan_name
#define join_exact		S_join_exact
#define regwhite		S_regwhite
#define nextchar		S_nextchar
#define reg_skipcomment		S_reg_skipcomment
#define scan_commit		S_scan_commit
#define cl_anything		S_cl_anything
#define cl_is_anything		S_cl_is_anything
#define cl_init			S_cl_init
#define cl_init_zero		S_cl_init_zero
#define cl_and			S_cl_and
#define cl_or			S_cl_or
#define study_chunk		S_study_chunk
#define add_data		S_add_data
#endif
#ifdef PERL_CORE
#define re_croak2		S_re_croak2
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regpposixcc		S_regpposixcc
#define checkposixcc		S_checkposixcc
#define make_trie		S_make_trie
#define make_trie_failtable	S_make_trie_failtable
#endif
#  ifdef DEBUGGING
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regdump_extflags	S_regdump_extflags
#define dumpuntil		S_dumpuntil
#define put_byte		S_put_byte
#define dump_trie		S_dump_trie
#define dump_trie_interim_list	S_dump_trie_interim_list
#define dump_trie_interim_table	S_dump_trie_interim_table
#define regtail_study		S_regtail_study
#endif
#  endif
#endif
#if defined(PERL_IN_REGEXEC_C) || defined(PERL_DECL_PROT)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regmatch		S_regmatch
#define regrepeat		S_regrepeat
#define regtry			S_regtry
#define reginclass		S_reginclass
#define regcppush		S_regcppush
#define regcppop		S_regcppop
#define reghop3			S_reghop3
#endif
#ifdef XXX_dmq
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reghop4			S_reghop4
#endif
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reghopmaybe3		S_reghopmaybe3
#define find_byclass		S_find_byclass
#define swap_match_buff		S_swap_match_buff
#define to_utf8_substr		S_to_utf8_substr
#define to_byte_substr		S_to_byte_substr
#define reg_check_named_buff_matched	S_reg_check_named_buff_matched
#endif
#  ifdef DEBUGGING
#if defined(PERL_CORE) || defined(PERL_EXT)
#define dump_exec_pos		S_dump_exec_pos
#define debug_start_match	S_debug_start_match
#endif
#  endif
#endif
#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define deb_curcv		S_deb_curcv
#define debprof			S_debprof
#define sequence		S_sequence
#define sequence_tail		S_sequence_tail
#define sequence_num		S_sequence_num
#define pm_description		S_pm_description
#endif
#endif
#if defined(PERL_IN_SCOPE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define save_scalar_at		S_save_scalar_at
#endif
#endif
#if defined(PERL_IN_GV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
#endif
#if defined(PERL_IN_HV_C) || defined(PERL_IN_MG_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#endif
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define uiv_2buf		S_uiv_2buf
#define sv_unglob		S_sv_unglob
#define not_a_number		S_not_a_number
#define visit			S_visit
#define sv_del_backref		S_sv_del_backref
#define varname			S_varname
#endif
#  ifdef DEBUGGING
#ifdef PERL_CORE
#define del_sv			S_del_sv
#endif
#  endif
#  if !defined(NV_PRESERVES_UV)
#    ifdef DEBUGGING
#ifdef PERL_CORE
#define sv_2iuv_non_preserve	S_sv_2iuv_non_preserve
#endif
#    else
#ifdef PERL_CORE
#define sv_2iuv_non_preserve	S_sv_2iuv_non_preserve
#endif
#    endif
#  endif
#ifdef PERL_CORE
#define expect_number		S_expect_number
#endif
#ifdef PERL_CORE
#define sv_pos_u2b_forwards	S_sv_pos_u2b_forwards
#define sv_pos_u2b_midway	S_sv_pos_u2b_midway
#define sv_pos_u2b_cached	S_sv_pos_u2b_cached
#define utf8_mg_pos_cache_update	S_utf8_mg_pos_cache_update
#define sv_pos_b2u_midway	S_sv_pos_b2u_midway
#define F0convert		S_F0convert
#endif
#  if defined(PERL_OLD_COPY_ON_WRITE)
#ifdef PERL_CORE
#define sv_release_COW		S_sv_release_COW
#endif
#  endif
#ifdef PERL_CORE
#define more_sv			S_more_sv
#define more_bodies		S_more_bodies
#define sv_2iuv_common		S_sv_2iuv_common
#define glob_assign_glob	S_glob_assign_glob
#define glob_assign_ref		S_glob_assign_ref
#define ptr_table_find		S_ptr_table_find
#endif
#endif
#if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define check_uni		S_check_uni
#define force_next		S_force_next
#define force_version		S_force_version
#define force_word		S_force_word
#define tokeq			S_tokeq
#define readpipe_override	S_readpipe_override
#define scan_const		S_scan_const
#define scan_formline		S_scan_formline
#define scan_heredoc		S_scan_heredoc
#define scan_ident		S_scan_ident
#define scan_inputsymbol	S_scan_inputsymbol
#define scan_pat		S_scan_pat
#define scan_str		S_scan_str
#define scan_subst		S_scan_subst
#define scan_trans		S_scan_trans
#define scan_word		S_scan_word
#define update_debugger_info	S_update_debugger_info
#define skipspace		S_skipspace
#define swallow_bom		S_swallow_bom
#define checkcomma		S_checkcomma
#define feature_is_enabled	S_feature_is_enabled
#define force_ident		S_force_ident
#define incline			S_incline
#define intuit_method		S_intuit_method
#define intuit_more		S_intuit_more
#define lop			S_lop
#define missingterm		S_missingterm
#define no_op			S_no_op
#define sublex_done		S_sublex_done
#define sublex_push		S_sublex_push
#define sublex_start		S_sublex_start
#define filter_gets		S_filter_gets
#define find_in_my_stash	S_find_in_my_stash
#define tokenize_use		S_tokenize_use
#endif
#ifdef PERL_CORE
#define ao			S_ao
#endif
#  if defined(PERL_CR_FILTER)
#ifdef PERL_CORE
#define cr_textfilter		S_cr_textfilter
#define strip_return		S_strip_return
#endif
#  endif
#  if defined(DEBUGGING)
#ifdef PERL_CORE
#define tokereport		S_tokereport
#define printbuf		S_printbuf
#endif
#  endif
#endif
#if defined(PERL_IN_UNIVERSAL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define isa_lookup		S_isa_lookup
#endif
#endif
#if defined(PERL_IN_LOCALE_C) || defined(PERL_DECL_PROT)
#if defined(USE_LOCALE_NUMERIC) || defined(USE_LOCALE_COLLATE)
#ifdef PERL_CORE
#define stdize_locale		S_stdize_locale
#endif
#endif
#endif
#if defined(PERL_IN_UTIL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define closest_cop		S_closest_cop
#define mess_alloc		S_mess_alloc
#define vdie_croak_common	S_vdie_croak_common
#define vdie_common		S_vdie_common
#define write_no_mem		S_write_no_mem
#endif
#if defined(PERL_MEM_LOG) && defined(PERL_MEM_LOG_STDERR)
#ifdef PERL_CORE
#define mem_log_common		S_mem_log_common
#endif
#endif
#endif
#if defined(PERL_IN_NUMERIC_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define mulexp10		S_mulexp10
#endif
#endif
#if defined(PERL_IN_UTF8_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define is_utf8_char_slow	S_is_utf8_char_slow
#define is_utf8_common		S_is_utf8_common
#define swash_get		S_swash_get
#endif
#endif
#define sv_setsv_flags		Perl_sv_setsv_flags
#define sv_catpvn_flags		Perl_sv_catpvn_flags
#define sv_catsv_flags		Perl_sv_catsv_flags
#define sv_utf8_upgrade_flags	Perl_sv_utf8_upgrade_flags
#define sv_pvn_force_flags	Perl_sv_pvn_force_flags
#define sv_copypv		Perl_sv_copypv
#define my_atof2		Perl_my_atof2
#define my_socketpair		Perl_my_socketpair
#define my_dirfd		Perl_my_dirfd
#ifdef PERL_OLD_COPY_ON_WRITE
#if defined(PERL_CORE) || defined(PERL_EXT)
#define sv_setsv_cow		Perl_sv_setsv_cow
#endif
#endif
#if defined(USE_PERLIO) && !defined(USE_SFIO)
#define PerlIO_close		Perl_PerlIO_close
#define PerlIO_fill		Perl_PerlIO_fill
#define PerlIO_fileno		Perl_PerlIO_fileno
#define PerlIO_eof		Perl_PerlIO_eof
#define PerlIO_error		Perl_PerlIO_error
#define PerlIO_flush		Perl_PerlIO_flush
#define PerlIO_clearerr		Perl_PerlIO_clearerr
#define PerlIO_set_cnt		Perl_PerlIO_set_cnt
#define PerlIO_set_ptrcnt	Perl_PerlIO_set_ptrcnt
#define PerlIO_setlinebuf	Perl_PerlIO_setlinebuf
#define PerlIO_read		Perl_PerlIO_read
#define PerlIO_write		Perl_PerlIO_write
#define PerlIO_unread		Perl_PerlIO_unread
#define PerlIO_tell		Perl_PerlIO_tell
#define PerlIO_seek		Perl_PerlIO_seek
#define PerlIO_get_base		Perl_PerlIO_get_base
#define PerlIO_get_ptr		Perl_PerlIO_get_ptr
#define PerlIO_get_bufsiz	Perl_PerlIO_get_bufsiz
#define PerlIO_get_cnt		Perl_PerlIO_get_cnt
#define PerlIO_stdin		Perl_PerlIO_stdin
#define PerlIO_stdout		Perl_PerlIO_stdout
#define PerlIO_stderr		Perl_PerlIO_stderr
#endif /* PERLIO_LAYERS */
#ifdef PERL_CORE
#define deb_stack_all		Perl_deb_stack_all
#endif
#if defined(PERL_IN_DEB_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define deb_stack_n		S_deb_stack_n
#endif
#endif
#ifdef PERL_CORE
#define pad_new			Perl_pad_new
#define pad_undef		Perl_pad_undef
#define pad_add_name		Perl_pad_add_name
#define pad_add_anon		Perl_pad_add_anon
#define pad_check_dup		Perl_pad_check_dup
#endif
#ifdef DEBUGGING
#ifdef PERL_CORE
#define pad_setsv		Perl_pad_setsv
#endif
#endif
#ifdef PERL_CORE
#define pad_block_start		Perl_pad_block_start
#define pad_tidy		Perl_pad_tidy
#define do_dump_pad		Perl_do_dump_pad
#define pad_fixup_inner_anons	Perl_pad_fixup_inner_anons
#endif
#ifdef PERL_CORE
#define pad_push		Perl_pad_push
#define pad_compname_type	Perl_pad_compname_type
#endif
#if defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define pad_findlex		S_pad_findlex
#endif
#  if defined(DEBUGGING)
#ifdef PERL_CORE
#define cv_dump			S_cv_dump
#endif
#  endif
#endif
#define find_runcv		Perl_find_runcv
#ifdef PERL_CORE
#define free_tied_hv_pool	Perl_free_tied_hv_pool
#endif
#if defined(DEBUGGING)
#ifdef PERL_CORE
#define get_debug_opts		Perl_get_debug_opts
#endif
#endif
#define save_set_svflags	Perl_save_set_svflags
#define hv_scalar		Perl_hv_scalar
#define hv_name_set		Perl_hv_name_set
#if defined(PERL_IN_DUMP_C) || defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#endif
#define hv_clear_placeholders	Perl_hv_clear_placeholders
#ifdef PERL_CORE
#define magic_scalarpack	Perl_magic_scalarpack
#endif
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define find_hash_subscript	S_find_hash_subscript
#define find_array_subscript	S_find_array_subscript
#define find_uninit_var		S_find_uninit_var
#endif
#endif
#ifdef PERL_NEED_MY_HTOLE16
#ifdef PERL_CORE
#define my_htole16		Perl_my_htole16
#endif
#endif
#ifdef PERL_NEED_MY_LETOH16
#ifdef PERL_CORE
#define my_letoh16		Perl_my_letoh16
#endif
#endif
#ifdef PERL_NEED_MY_HTOBE16
#ifdef PERL_CORE
#define my_htobe16		Perl_my_htobe16
#endif
#endif
#ifdef PERL_NEED_MY_BETOH16
#ifdef PERL_CORE
#define my_betoh16		Perl_my_betoh16
#endif
#endif
#ifdef PERL_NEED_MY_HTOLE32
#ifdef PERL_CORE
#define my_htole32		Perl_my_htole32
#endif
#endif
#ifdef PERL_NEED_MY_LETOH32
#ifdef PERL_CORE
#define my_letoh32		Perl_my_letoh32
#endif
#endif
#ifdef PERL_NEED_MY_HTOBE32
#ifdef PERL_CORE
#define my_htobe32		Perl_my_htobe32
#endif
#endif
#ifdef PERL_NEED_MY_BETOH32
#ifdef PERL_CORE
#define my_betoh32		Perl_my_betoh32
#endif
#endif
#ifdef PERL_NEED_MY_HTOLE64
#ifdef PERL_CORE
#define my_htole64		Perl_my_htole64
#endif
#endif
#ifdef PERL_NEED_MY_LETOH64
#ifdef PERL_CORE
#define my_letoh64		Perl_my_letoh64
#endif
#endif
#ifdef PERL_NEED_MY_HTOBE64
#ifdef PERL_CORE
#define my_htobe64		Perl_my_htobe64
#endif
#endif
#ifdef PERL_NEED_MY_BETOH64
#ifdef PERL_CORE
#define my_betoh64		Perl_my_betoh64
#endif
#endif
#ifdef PERL_NEED_MY_HTOLES
#ifdef PERL_CORE
#define my_htoles		Perl_my_htoles
#endif
#endif
#ifdef PERL_NEED_MY_LETOHS
#ifdef PERL_CORE
#define my_letohs		Perl_my_letohs
#endif
#endif
#ifdef PERL_NEED_MY_HTOBES
#ifdef PERL_CORE
#define my_htobes		Perl_my_htobes
#endif
#endif
#ifdef PERL_NEED_MY_BETOHS
#ifdef PERL_CORE
#define my_betohs		Perl_my_betohs
#endif
#endif
#ifdef PERL_NEED_MY_HTOLEI
#ifdef PERL_CORE
#define my_htolei		Perl_my_htolei
#endif
#endif
#ifdef PERL_NEED_MY_LETOHI
#ifdef PERL_CORE
#define my_letohi		Perl_my_letohi
#endif
#endif
#ifdef PERL_NEED_MY_HTOBEI
#ifdef PERL_CORE
#define my_htobei		Perl_my_htobei
#endif
#endif
#ifdef PERL_NEED_MY_BETOHI
#ifdef PERL_CORE
#define my_betohi		Perl_my_betohi
#endif
#endif
#ifdef PERL_NEED_MY_HTOLEL
#ifdef PERL_CORE
#define my_htolel		Perl_my_htolel
#endif
#endif
#ifdef PERL_NEED_MY_LETOHL
#ifdef PERL_CORE
#define my_letohl		Perl_my_letohl
#endif
#endif
#ifdef PERL_NEED_MY_HTOBEL
#ifdef PERL_CORE
#define my_htobel		Perl_my_htobel
#endif
#endif
#ifdef PERL_NEED_MY_BETOHL
#ifdef PERL_CORE
#define my_betohl		Perl_my_betohl
#endif
#endif
#ifdef PERL_CORE
#define my_swabn		Perl_my_swabn
#endif
#define gv_fetchpvn_flags	Perl_gv_fetchpvn_flags
#define gv_fetchsv		Perl_gv_fetchsv
#ifdef PERL_CORE
#define is_gv_magical_sv	Perl_is_gv_magical_sv
#endif
#define stashpv_hvname_match	Perl_stashpv_hvname_match
#ifdef DEBUG_LEAKING_SCALARS_FORK_DUMP
#ifdef PERL_CORE
#define dump_sv_child		Perl_dump_sv_child
#endif
#endif
#ifdef PERL_DONT_CREATE_GVSV
#define gv_SVadd		Perl_gv_SVadd
#endif
#ifdef PERL_CORE
#define offer_nice_chunk	Perl_offer_nice_chunk
#endif
#ifndef SPRINTF_RETURNS_STRLEN
#endif
#ifdef PERL_CORE
#define my_clearenv		Perl_my_clearenv
#endif
#ifdef PERL_IMPLICIT_CONTEXT
#ifdef PERL_GLOBAL_STRUCT_PRIVATE
#else
#endif
#endif
#ifndef HAS_STRLCAT
#endif
#ifndef HAS_STRLCPY
#endif
#ifdef PERL_MAD
#ifdef PERL_CORE
#define pad_peg			Perl_pad_peg
#endif
#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define xmldump_attr		S_xmldump_attr
#endif
#endif
#ifdef PERL_CORE
#define xmldump_indent		Perl_xmldump_indent
#define xmldump_vindent		Perl_xmldump_vindent
#define xmldump_all		Perl_xmldump_all
#define xmldump_packsubs	Perl_xmldump_packsubs
#define xmldump_sub		Perl_xmldump_sub
#define xmldump_form		Perl_xmldump_form
#define xmldump_eval		Perl_xmldump_eval
#define sv_catxmlsv		Perl_sv_catxmlsv
#define sv_catxmlpvn		Perl_sv_catxmlpvn
#define sv_xmlpeek		Perl_sv_xmlpeek
#define do_pmop_xmldump		Perl_do_pmop_xmldump
#define pmop_xmldump		Perl_pmop_xmldump
#define do_op_xmldump		Perl_do_op_xmldump
#define op_xmldump		Perl_op_xmldump
#endif
#ifdef PERL_CORE
#define newTOKEN		Perl_newTOKEN
#define token_free		Perl_token_free
#define token_getmad		Perl_token_getmad
#define op_getmad_weak		Perl_op_getmad_weak
#define op_getmad		Perl_op_getmad
#define prepend_madprops	Perl_prepend_madprops
#define append_madprops		Perl_append_madprops
#define addmad			Perl_addmad
#define newMADsv		Perl_newMADsv
#define newMADPROP		Perl_newMADPROP
#define mad_free		Perl_mad_free
#endif
#  if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define skipspace0		S_skipspace0
#define skipspace1		S_skipspace1
#define skipspace2		S_skipspace2
#define start_force		S_start_force
#define curmad			S_curmad
#endif
#  endif
#ifdef PERL_CORE
#define madlex			Perl_madlex
#define madparse		Perl_madparse
#endif
#endif
#if !defined(HAS_SIGNBIT)
#endif
#if defined(USE_ITHREADS)
#ifdef PERL_CORE
#define mro_meta_dup		Perl_mro_meta_dup
#endif
#endif
#define mro_get_linear_isa	Perl_mro_get_linear_isa
#if defined(PERL_IN_MRO_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define mro_get_linear_isa_dfs	S_mro_get_linear_isa_dfs
#endif
#endif
#ifdef PERL_CORE
#define mro_isa_changed_in	Perl_mro_isa_changed_in
#endif
#define mro_method_changed_in	Perl_mro_method_changed_in
#ifdef PERL_CORE
#define boot_core_mro		Perl_boot_core_mro
#endif
#define ck_anoncode		Perl_ck_anoncode
#define ck_bitop		Perl_ck_bitop
#define ck_chdir		Perl_ck_chdir
#define ck_concat		Perl_ck_concat
#define ck_defined		Perl_ck_defined
#define ck_delete		Perl_ck_delete
#define ck_die			Perl_ck_die
#define ck_eof			Perl_ck_eof
#define ck_eval			Perl_ck_eval
#define ck_exec			Perl_ck_exec
#define ck_exists		Perl_ck_exists
#define ck_exit			Perl_ck_exit
#define ck_ftst			Perl_ck_ftst
#define ck_fun			Perl_ck_fun
#define ck_glob			Perl_ck_glob
#define ck_grep			Perl_ck_grep
#define ck_index		Perl_ck_index
#define ck_join			Perl_ck_join
#define ck_lengthconst		Perl_ck_lengthconst
#define ck_lfun			Perl_ck_lfun
#define ck_listiob		Perl_ck_listiob
#define ck_match		Perl_ck_match
#define ck_method		Perl_ck_method
#define ck_null			Perl_ck_null
#define ck_open			Perl_ck_open
#define ck_readline		Perl_ck_readline
#define ck_repeat		Perl_ck_repeat
#define ck_require		Perl_ck_require
#define ck_return		Perl_ck_return
#define ck_rfun			Perl_ck_rfun
#define ck_rvconst		Perl_ck_rvconst
#define ck_sassign		Perl_ck_sassign
#define ck_select		Perl_ck_select
#define ck_shift		Perl_ck_shift
#define ck_smartmatch		Perl_ck_smartmatch
#define ck_sort			Perl_ck_sort
#define ck_spair		Perl_ck_spair
#define ck_split		Perl_ck_split
#define ck_subr			Perl_ck_subr
#define ck_substr		Perl_ck_substr
#define ck_svconst		Perl_ck_svconst
#define ck_trunc		Perl_ck_trunc
#define ck_unpack		Perl_ck_unpack
#define pp_aassign		Perl_pp_aassign
#define pp_abs			Perl_pp_abs
#define pp_accept		Perl_pp_accept
#define pp_add			Perl_pp_add
#define pp_aelem		Perl_pp_aelem
#define pp_aelemfast		Perl_pp_aelemfast
#define pp_alarm		Perl_pp_alarm
#define pp_and			Perl_pp_and
#define pp_andassign		Perl_pp_andassign
#define pp_anoncode		Perl_pp_anoncode
#define pp_anonhash		Perl_pp_anonhash
#define pp_anonlist		Perl_pp_anonlist
#define pp_aslice		Perl_pp_aslice
#define pp_atan2		Perl_pp_atan2
#define pp_av2arylen		Perl_pp_av2arylen
#define pp_backtick		Perl_pp_backtick
#define pp_bind			Perl_pp_bind
#define pp_binmode		Perl_pp_binmode
#define pp_bit_and		Perl_pp_bit_and
#define pp_bit_or		Perl_pp_bit_or
#define pp_bit_xor		Perl_pp_bit_xor
#define pp_bless		Perl_pp_bless
#define pp_break		Perl_pp_break
#define pp_caller		Perl_pp_caller
#define pp_chdir		Perl_pp_chdir
#define pp_chmod		Perl_pp_chmod
#define pp_chomp		Perl_pp_chomp
#define pp_chop			Perl_pp_chop
#define pp_chown		Perl_pp_chown
#define pp_chr			Perl_pp_chr
#define pp_chroot		Perl_pp_chroot
#define pp_close		Perl_pp_close
#define pp_closedir		Perl_pp_closedir
#define pp_complement		Perl_pp_complement
#define pp_concat		Perl_pp_concat
#define pp_cond_expr		Perl_pp_cond_expr
#define pp_connect		Perl_pp_connect
#define pp_const		Perl_pp_const
#define pp_continue		Perl_pp_continue
#define pp_cos			Perl_pp_cos
#define pp_crypt		Perl_pp_crypt
#define pp_dbmclose		Perl_pp_dbmclose
#define pp_dbmopen		Perl_pp_dbmopen
#define pp_dbstate		Perl_pp_dbstate
#define pp_defined		Perl_pp_defined
#define pp_delete		Perl_pp_delete
#define pp_die			Perl_pp_die
#define pp_divide		Perl_pp_divide
#define pp_dofile		Perl_pp_dofile
#define pp_dor			Perl_pp_dor
#define pp_dorassign		Perl_pp_dorassign
#define pp_dump			Perl_pp_dump
#define pp_each			Perl_pp_each
#define pp_egrent		Perl_pp_egrent
#define pp_ehostent		Perl_pp_ehostent
#define pp_enetent		Perl_pp_enetent
#define pp_enter		Perl_pp_enter
#define pp_entereval		Perl_pp_entereval
#define pp_entergiven		Perl_pp_entergiven
#define pp_enteriter		Perl_pp_enteriter
#define pp_enterloop		Perl_pp_enterloop
#define pp_entersub		Perl_pp_entersub
#define pp_entertry		Perl_pp_entertry
#define pp_enterwhen		Perl_pp_enterwhen
#define pp_enterwrite		Perl_pp_enterwrite
#define pp_eof			Perl_pp_eof
#define pp_eprotoent		Perl_pp_eprotoent
#define pp_epwent		Perl_pp_epwent
#define pp_eq			Perl_pp_eq
#define pp_eservent		Perl_pp_eservent
#define pp_exec			Perl_pp_exec
#define pp_exists		Perl_pp_exists
#define pp_exit			Perl_pp_exit
#define pp_exp			Perl_pp_exp
#define pp_fcntl		Perl_pp_fcntl
#define pp_fileno		Perl_pp_fileno
#define pp_flip			Perl_pp_flip
#define pp_flock		Perl_pp_flock
#define pp_flop			Perl_pp_flop
#define pp_fork			Perl_pp_fork
#define pp_formline		Perl_pp_formline
#define pp_ftatime		Perl_pp_ftatime
#define pp_ftbinary		Perl_pp_ftbinary
#define pp_ftblk		Perl_pp_ftblk
#define pp_ftchr		Perl_pp_ftchr
#define pp_ftctime		Perl_pp_ftctime
#define pp_ftdir		Perl_pp_ftdir
#define pp_fteexec		Perl_pp_fteexec
#define pp_fteowned		Perl_pp_fteowned
#define pp_fteread		Perl_pp_fteread
#define pp_ftewrite		Perl_pp_ftewrite
#define pp_ftfile		Perl_pp_ftfile
#define pp_ftis			Perl_pp_ftis
#define pp_ftlink		Perl_pp_ftlink
#define pp_ftmtime		Perl_pp_ftmtime
#define pp_ftpipe		Perl_pp_ftpipe
#define pp_ftrexec		Perl_pp_ftrexec
#define pp_ftrowned		Perl_pp_ftrowned
#define pp_ftrread		Perl_pp_ftrread
#define pp_ftrwrite		Perl_pp_ftrwrite
#define pp_ftsgid		Perl_pp_ftsgid
#define pp_ftsize		Perl_pp_ftsize
#define pp_ftsock		Perl_pp_ftsock
#define pp_ftsuid		Perl_pp_ftsuid
#define pp_ftsvtx		Perl_pp_ftsvtx
#define pp_fttext		Perl_pp_fttext
#define pp_fttty		Perl_pp_fttty
#define pp_ftzero		Perl_pp_ftzero
#define pp_ge			Perl_pp_ge
#define pp_gelem		Perl_pp_gelem
#define pp_getc			Perl_pp_getc
#define pp_getlogin		Perl_pp_getlogin
#define pp_getpeername		Perl_pp_getpeername
#define pp_getpgrp		Perl_pp_getpgrp
#define pp_getppid		Perl_pp_getppid
#define pp_getpriority		Perl_pp_getpriority
#define pp_getsockname		Perl_pp_getsockname
#define pp_ggrent		Perl_pp_ggrent
#define pp_ggrgid		Perl_pp_ggrgid
#define pp_ggrnam		Perl_pp_ggrnam
#define pp_ghbyaddr		Perl_pp_ghbyaddr
#define pp_ghbyname		Perl_pp_ghbyname
#define pp_ghostent		Perl_pp_ghostent
#define pp_glob			Perl_pp_glob
#define pp_gmtime		Perl_pp_gmtime
#define pp_gnbyaddr		Perl_pp_gnbyaddr
#define pp_gnbyname		Perl_pp_gnbyname
#define pp_gnetent		Perl_pp_gnetent
#define pp_goto			Perl_pp_goto
#define pp_gpbyname		Perl_pp_gpbyname
#define pp_gpbynumber		Perl_pp_gpbynumber
#define pp_gprotoent		Perl_pp_gprotoent
#define pp_gpwent		Perl_pp_gpwent
#define pp_gpwnam		Perl_pp_gpwnam
#define pp_gpwuid		Perl_pp_gpwuid
#define pp_grepstart		Perl_pp_grepstart
#define pp_grepwhile		Perl_pp_grepwhile
#define pp_gsbyname		Perl_pp_gsbyname
#define pp_gsbyport		Perl_pp_gsbyport
#define pp_gservent		Perl_pp_gservent
#define pp_gsockopt		Perl_pp_gsockopt
#define pp_gt			Perl_pp_gt
#define pp_gv			Perl_pp_gv
#define pp_gvsv			Perl_pp_gvsv
#define pp_helem		Perl_pp_helem
#define pp_hex			Perl_pp_hex
#define pp_hslice		Perl_pp_hslice
#define pp_i_add		Perl_pp_i_add
#define pp_i_divide		Perl_pp_i_divide
#define pp_i_eq			Perl_pp_i_eq
#define pp_i_ge			Perl_pp_i_ge
#define pp_i_gt			Perl_pp_i_gt
#define pp_i_le			Perl_pp_i_le
#define pp_i_lt			Perl_pp_i_lt
#define pp_i_modulo		Perl_pp_i_modulo
#define pp_i_multiply		Perl_pp_i_multiply
#define pp_i_ncmp		Perl_pp_i_ncmp
#define pp_i_ne			Perl_pp_i_ne
#define pp_i_negate		Perl_pp_i_negate
#define pp_i_subtract		Perl_pp_i_subtract
#define pp_index		Perl_pp_index
#define pp_int			Perl_pp_int
#define pp_ioctl		Perl_pp_ioctl
#define pp_iter			Perl_pp_iter
#define pp_join			Perl_pp_join
#define pp_keys			Perl_pp_keys
#define pp_kill			Perl_pp_kill
#define pp_last			Perl_pp_last
#define pp_lc			Perl_pp_lc
#define pp_lcfirst		Perl_pp_lcfirst
#define pp_le			Perl_pp_le
#define pp_leave		Perl_pp_leave
#define pp_leaveeval		Perl_pp_leaveeval
#define pp_leavegiven		Perl_pp_leavegiven
#define pp_leaveloop		Perl_pp_leaveloop
#define pp_leavesub		Perl_pp_leavesub
#define pp_leavesublv		Perl_pp_leavesublv
#define pp_leavetry		Perl_pp_leavetry
#define pp_leavewhen		Perl_pp_leavewhen
#define pp_leavewrite		Perl_pp_leavewrite
#define pp_left_shift		Perl_pp_left_shift
#define pp_length		Perl_pp_length
#define pp_lineseq		Perl_pp_lineseq
#define pp_link			Perl_pp_link
#define pp_list			Perl_pp_list
#define pp_listen		Perl_pp_listen
#define pp_localtime		Perl_pp_localtime
#define pp_lock			Perl_pp_lock
#define pp_log			Perl_pp_log
#define pp_lslice		Perl_pp_lslice
#define pp_lstat		Perl_pp_lstat
#define pp_lt			Perl_pp_lt
#define pp_mapstart		Perl_pp_mapstart
#define pp_mapwhile		Perl_pp_mapwhile
#define pp_match		Perl_pp_match
#define pp_method		Perl_pp_method
#define pp_method_named		Perl_pp_method_named
#define pp_mkdir		Perl_pp_mkdir
#define pp_modulo		Perl_pp_modulo
#define pp_msgctl		Perl_pp_msgctl
#define pp_msgget		Perl_pp_msgget
#define pp_msgrcv		Perl_pp_msgrcv
#define pp_msgsnd		Perl_pp_msgsnd
#define pp_multiply		Perl_pp_multiply
#define pp_ncmp			Perl_pp_ncmp
#define pp_ne			Perl_pp_ne
#define pp_negate		Perl_pp_negate
#define pp_next			Perl_pp_next
#define pp_nextstate		Perl_pp_nextstate
#define pp_not			Perl_pp_not
#define pp_null			Perl_pp_null
#define pp_oct			Perl_pp_oct
#define pp_once			Perl_pp_once
#define pp_open			Perl_pp_open
#define pp_open_dir		Perl_pp_open_dir
#define pp_or			Perl_pp_or
#define pp_orassign		Perl_pp_orassign
#define pp_ord			Perl_pp_ord
#define pp_pack			Perl_pp_pack
#define pp_padany		Perl_pp_padany
#define pp_padav		Perl_pp_padav
#define pp_padhv		Perl_pp_padhv
#define pp_padsv		Perl_pp_padsv
#define pp_pipe_op		Perl_pp_pipe_op
#define pp_pop			Perl_pp_pop
#define pp_pos			Perl_pp_pos
#define pp_postdec		Perl_pp_postdec
#define pp_postinc		Perl_pp_postinc
#define pp_pow			Perl_pp_pow
#define pp_predec		Perl_pp_predec
#define pp_preinc		Perl_pp_preinc
#define pp_print		Perl_pp_print
#define pp_prototype		Perl_pp_prototype
#define pp_prtf			Perl_pp_prtf
#define pp_push			Perl_pp_push
#define pp_pushmark		Perl_pp_pushmark
#define pp_pushre		Perl_pp_pushre
#define pp_qr			Perl_pp_qr
#define pp_quotemeta		Perl_pp_quotemeta
#define pp_rand			Perl_pp_rand
#define pp_range		Perl_pp_range
#define pp_rcatline		Perl_pp_rcatline
#define pp_read			Perl_pp_read
#define pp_readdir		Perl_pp_readdir
#define pp_readline		Perl_pp_readline
#define pp_readlink		Perl_pp_readlink
#define pp_recv			Perl_pp_recv
#define pp_redo			Perl_pp_redo
#define pp_ref			Perl_pp_ref
#define pp_refgen		Perl_pp_refgen
#define pp_regcmaybe		Perl_pp_regcmaybe
#define pp_regcomp		Perl_pp_regcomp
#define pp_regcreset		Perl_pp_regcreset
#define pp_rename		Perl_pp_rename
#define pp_repeat		Perl_pp_repeat
#define pp_require		Perl_pp_require
#define pp_reset		Perl_pp_reset
#define pp_return		Perl_pp_return
#define pp_reverse		Perl_pp_reverse
#define pp_rewinddir		Perl_pp_rewinddir
#define pp_right_shift		Perl_pp_right_shift
#define pp_rindex		Perl_pp_rindex
#define pp_rmdir		Perl_pp_rmdir
#define pp_rv2av		Perl_pp_rv2av
#define pp_rv2cv		Perl_pp_rv2cv
#define pp_rv2gv		Perl_pp_rv2gv
#define pp_rv2hv		Perl_pp_rv2hv
#define pp_rv2sv		Perl_pp_rv2sv
#define pp_sassign		Perl_pp_sassign
#define pp_say			Perl_pp_say
#define pp_scalar		Perl_pp_scalar
#define pp_schomp		Perl_pp_schomp
#define pp_schop		Perl_pp_schop
#define pp_scmp			Perl_pp_scmp
#define pp_scope		Perl_pp_scope
#define pp_seek			Perl_pp_seek
#define pp_seekdir		Perl_pp_seekdir
#define pp_select		Perl_pp_select
#define pp_semctl		Perl_pp_semctl
#define pp_semget		Perl_pp_semget
#define pp_semop		Perl_pp_semop
#define pp_send			Perl_pp_send
#define pp_seq			Perl_pp_seq
#define pp_setpgrp		Perl_pp_setpgrp
#define pp_setpriority		Perl_pp_setpriority
#define pp_setstate		Perl_pp_setstate
#define pp_sge			Perl_pp_sge
#define pp_sgrent		Perl_pp_sgrent
#define pp_sgt			Perl_pp_sgt
#define pp_shift		Perl_pp_shift
#define pp_shmctl		Perl_pp_shmctl
#define pp_shmget		Perl_pp_shmget
#define pp_shmread		Perl_pp_shmread
#define pp_shmwrite		Perl_pp_shmwrite
#define pp_shostent		Perl_pp_shostent
#define pp_shutdown		Perl_pp_shutdown
#define pp_sin			Perl_pp_sin
#define pp_sle			Perl_pp_sle
#define pp_sleep		Perl_pp_sleep
#define pp_slt			Perl_pp_slt
#define pp_smartmatch		Perl_pp_smartmatch
#define pp_sne			Perl_pp_sne
#define pp_snetent		Perl_pp_snetent
#define pp_socket		Perl_pp_socket
#define pp_sockpair		Perl_pp_sockpair
#define pp_sort			Perl_pp_sort
#define pp_splice		Perl_pp_splice
#define pp_split		Perl_pp_split
#define pp_sprintf		Perl_pp_sprintf
#define pp_sprotoent		Perl_pp_sprotoent
#define pp_spwent		Perl_pp_spwent
#define pp_sqrt			Perl_pp_sqrt
#define pp_srand		Perl_pp_srand
#define pp_srefgen		Perl_pp_srefgen
#define pp_sselect		Perl_pp_sselect
#define pp_sservent		Perl_pp_sservent
#define pp_ssockopt		Perl_pp_ssockopt
#define pp_stat			Perl_pp_stat
#define pp_stringify		Perl_pp_stringify
#define pp_stub			Perl_pp_stub
#define pp_study		Perl_pp_study
#define pp_subst		Perl_pp_subst
#define pp_substcont		Perl_pp_substcont
#define pp_substr		Perl_pp_substr
#define pp_subtract		Perl_pp_subtract
#define pp_symlink		Perl_pp_symlink
#define pp_syscall		Perl_pp_syscall
#define pp_sysopen		Perl_pp_sysopen
#define pp_sysread		Perl_pp_sysread
#define pp_sysseek		Perl_pp_sysseek
#define pp_system		Perl_pp_system
#define pp_syswrite		Perl_pp_syswrite
#define pp_tell			Perl_pp_tell
#define pp_telldir		Perl_pp_telldir
#define pp_tie			Perl_pp_tie
#define pp_tied			Perl_pp_tied
#define pp_time			Perl_pp_time
#define pp_tms			Perl_pp_tms
#define pp_trans		Perl_pp_trans
#define pp_truncate		Perl_pp_truncate
#define pp_uc			Perl_pp_uc
#define pp_ucfirst		Perl_pp_ucfirst
#define pp_umask		Perl_pp_umask
#define pp_undef		Perl_pp_undef
#define pp_unlink		Perl_pp_unlink
#define pp_unpack		Perl_pp_unpack
#define pp_unshift		Perl_pp_unshift
#define pp_unstack		Perl_pp_unstack
#define pp_untie		Perl_pp_untie
#define pp_utime		Perl_pp_utime
#define pp_values		Perl_pp_values
#define pp_vec			Perl_pp_vec
#define pp_wait			Perl_pp_wait
#define pp_waitpid		Perl_pp_waitpid
#define pp_wantarray		Perl_pp_wantarray
#define pp_warn			Perl_pp_warn
#define pp_xor			Perl_pp_xor

#else	/* PERL_IMPLICIT_CONTEXT */

#if defined(PERL_IMPLICIT_SYS)
#endif
#define doing_taint		Perl_doing_taint
#if defined(USE_ITHREADS)
#  if defined(PERL_IMPLICIT_SYS)
#  endif
#endif
#if defined(MYMALLOC)
#ifdef PERL_CORE
#define malloced_size		Perl_malloced_size
#define malloc_good_size	Perl_malloc_good_size
#endif
#endif
#define get_context		Perl_get_context
#define set_context		Perl_set_context
#define amagic_call(a,b,c,d)	Perl_amagic_call(aTHX_ a,b,c,d)
#define Gv_AMupdate(a)		Perl_Gv_AMupdate(aTHX_ a)
#define gv_handler(a,b)		Perl_gv_handler(aTHX_ a,b)
#ifdef PERL_CORE
#define append_elem(a,b,c)	Perl_append_elem(aTHX_ a,b,c)
#define append_list(a,b,c)	Perl_append_list(aTHX_ a,b,c)
#define apply(a,b,c)		Perl_apply(aTHX_ a,b,c)
#endif
#define apply_attrs_string(a,b,c,d)	Perl_apply_attrs_string(aTHX_ a,b,c,d)
#define av_clear(a)		Perl_av_clear(aTHX_ a)
#define av_delete(a,b,c)	Perl_av_delete(aTHX_ a,b,c)
#define av_exists(a,b)		Perl_av_exists(aTHX_ a,b)
#define av_extend(a,b)		Perl_av_extend(aTHX_ a,b)
#ifdef PERL_CORE
#define av_fake(a,b)		Perl_av_fake(aTHX_ a,b)
#endif
#define av_fetch(a,b,c)		Perl_av_fetch(aTHX_ a,b,c)
#define av_fill(a,b)		Perl_av_fill(aTHX_ a,b)
#define av_len(a)		Perl_av_len(aTHX_ a)
#define av_make(a,b)		Perl_av_make(aTHX_ a,b)
#define av_pop(a)		Perl_av_pop(aTHX_ a)
#define av_push(a,b)		Perl_av_push(aTHX_ a,b)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define av_reify(a)		Perl_av_reify(aTHX_ a)
#endif
#define av_shift(a)		Perl_av_shift(aTHX_ a)
#define av_store(a,b,c)		Perl_av_store(aTHX_ a,b,c)
#define av_undef(a)		Perl_av_undef(aTHX_ a)
#define av_unshift(a,b)		Perl_av_unshift(aTHX_ a,b)
#ifdef PERL_CORE
#define bind_match(a,b,c)	Perl_bind_match(aTHX_ a,b,c)
#define block_end(a,b)		Perl_block_end(aTHX_ a,b)
#endif
#define block_gimme()		Perl_block_gimme(aTHX)
#ifdef PERL_CORE
#define block_start(a)		Perl_block_start(aTHX_ a)
#define boot_core_UNIVERSAL()	Perl_boot_core_UNIVERSAL(aTHX)
#define boot_core_PerlIO()	Perl_boot_core_PerlIO(aTHX)
#endif
#define call_list(a,b)		Perl_call_list(aTHX_ a,b)
#ifdef PERL_CORE
#define cando(a,b,c)		Perl_cando(aTHX_ a,b,c)
#endif
#define cast_ulong(a)		Perl_cast_ulong(aTHX_ a)
#define cast_i32(a)		Perl_cast_i32(aTHX_ a)
#define cast_iv(a)		Perl_cast_iv(aTHX_ a)
#define cast_uv(a)		Perl_cast_uv(aTHX_ a)
#if !defined(HAS_TRUNCATE) && !defined(HAS_CHSIZE) && defined(F_FREESP)
#define my_chsize(a,b)		Perl_my_chsize(aTHX_ a,b)
#endif
#ifdef PERL_CORE
#define convert(a,b,c)		Perl_convert(aTHX_ a,b,c)
#define create_eval_scope(a)	Perl_create_eval_scope(aTHX_ a)
#endif
#define vcroak(a,b)		Perl_vcroak(aTHX_ a,b)
#define croak_xs_usage(a,b)	Perl_croak_xs_usage(aTHX_ a,b)
#if defined(PERL_IMPLICIT_CONTEXT)
#endif
#ifdef PERL_CORE
#define cv_ckproto(a,b,c)	Perl_cv_ckproto(aTHX_ a,b,c)
#define cv_ckproto_len(a,b,c,d)	Perl_cv_ckproto_len(aTHX_ a,b,c,d)
#define cv_clone(a)		Perl_cv_clone(aTHX_ a)
#endif
#define gv_const_sv(a)		Perl_gv_const_sv(aTHX_ a)
#define cv_const_sv(a)		Perl_cv_const_sv(aTHX_ a)
#ifdef PERL_CORE
#define op_const_sv(a,b)	Perl_op_const_sv(aTHX_ a,b)
#endif
#define cv_undef(a)		Perl_cv_undef(aTHX_ a)
#define cx_dump(a)		Perl_cx_dump(aTHX_ a)
#define filter_add(a,b)		Perl_filter_add(aTHX_ a,b)
#define filter_del(a)		Perl_filter_del(aTHX_ a)
#define filter_read(a,b,c)	Perl_filter_read(aTHX_ a,b,c)
#define get_op_descs()		Perl_get_op_descs(aTHX)
#define get_op_names()		Perl_get_op_names(aTHX)
#ifdef PERL_CORE
#define get_no_modify()		Perl_get_no_modify(aTHX)
#define get_opargs()		Perl_get_opargs(aTHX)
#endif
#define get_ppaddr()		Perl_get_ppaddr(aTHX)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define cxinc()			Perl_cxinc(aTHX)
#endif
#define vdeb(a,b)		Perl_vdeb(aTHX_ a,b)
#define debprofdump()		Perl_debprofdump(aTHX)
#define debop(a)		Perl_debop(aTHX_ a)
#define debstack()		Perl_debstack(aTHX)
#define debstackptrs()		Perl_debstackptrs(aTHX)
#define delimcpy(a,b,c,d,e,f)	Perl_delimcpy(aTHX_ a,b,c,d,e,f)
#ifdef PERL_CORE
#define delete_eval_scope()	Perl_delete_eval_scope(aTHX)
#define deprecate(a)		Perl_deprecate(aTHX_ a)
#define deprecate_old(a)	Perl_deprecate_old(aTHX_ a)
#endif
#ifdef PERL_CORE
#define vdie(a,b)		Perl_vdie(aTHX_ a,b)
#define die_where(a,b)		Perl_die_where(aTHX_ a,b)
#endif
#define dounwind(a)		Perl_dounwind(aTHX_ a)
#ifdef PERL_CORE
#define do_aexec5(a,b,c,d,e)	Perl_do_aexec5(aTHX_ a,b,c,d,e)
#endif
#define do_binmode(a,b,c)	Perl_do_binmode(aTHX_ a,b,c)
#ifdef PERL_CORE
#define do_chop(a,b)		Perl_do_chop(aTHX_ a,b)
#endif
#define do_close(a,b)		Perl_do_close(aTHX_ a,b)
#ifdef PERL_CORE
#define do_eof(a)		Perl_do_eof(aTHX_ a)
#endif
#ifdef PERL_DEFAULT_DO_EXEC3_IMPLEMENTATION
#ifdef PERL_CORE
#endif
#else
#ifdef PERL_CORE
#define do_exec(a)		Perl_do_exec(aTHX_ a)
#endif
#endif
#if defined(WIN32) || defined(__SYMBIAN32__) || defined(VMS)
#define do_aspawn(a,b,c)	Perl_do_aspawn(aTHX_ a,b,c)
#define do_spawn(a)		Perl_do_spawn(aTHX_ a)
#define do_spawn_nowait(a)	Perl_do_spawn_nowait(aTHX_ a)
#endif
#if !defined(WIN32)
#ifdef PERL_CORE
#define do_exec3(a,b,c)		Perl_do_exec3(aTHX_ a,b,c)
#endif
#endif
#ifdef PERL_CORE
#define do_execfree()		Perl_do_execfree(aTHX)
#endif
#if defined(PERL_IN_DOIO_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define exec_failed(a,b,c)	S_exec_failed(aTHX_ a,b,c)
#endif
#endif
#if defined(HAS_MSG) || defined(HAS_SEM) || defined(HAS_SHM)
#ifdef PERL_CORE
#define do_ipcctl(a,b,c)	Perl_do_ipcctl(aTHX_ a,b,c)
#define do_ipcget(a,b,c)	Perl_do_ipcget(aTHX_ a,b,c)
#define do_msgrcv(a,b)		Perl_do_msgrcv(aTHX_ a,b)
#define do_msgsnd(a,b)		Perl_do_msgsnd(aTHX_ a,b)
#define do_semop(a,b)		Perl_do_semop(aTHX_ a,b)
#define do_shmio(a,b,c)		Perl_do_shmio(aTHX_ a,b,c)
#endif
#endif
#define do_join(a,b,c,d)	Perl_do_join(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#define do_kv()			Perl_do_kv(aTHX)
#endif
#define do_open9(a,b,c,d,e,f,g,h,i)	Perl_do_open9(aTHX_ a,b,c,d,e,f,g,h,i)
#define do_openn(a,b,c,d,e,f,g,h,i)	Perl_do_openn(aTHX_ a,b,c,d,e,f,g,h,i)
#ifdef PERL_CORE
#define do_print(a,b)		Perl_do_print(aTHX_ a,b)
#define do_readline()		Perl_do_readline(aTHX)
#define do_chomp(a)		Perl_do_chomp(aTHX_ a)
#define do_seek(a,b,c)		Perl_do_seek(aTHX_ a,b,c)
#endif
#define do_sprintf(a,b,c)	Perl_do_sprintf(aTHX_ a,b,c)
#ifdef PERL_CORE
#define do_sysseek(a,b,c)	Perl_do_sysseek(aTHX_ a,b,c)
#define do_tell(a)		Perl_do_tell(aTHX_ a)
#define do_trans(a)		Perl_do_trans(aTHX_ a)
#define do_vecget(a,b,c)	Perl_do_vecget(aTHX_ a,b,c)
#define do_vecset(a)		Perl_do_vecset(aTHX_ a)
#define do_vop(a,b,c,d)		Perl_do_vop(aTHX_ a,b,c,d)
#define dofile(a,b)		Perl_dofile(aTHX_ a,b)
#endif
#define dowantarray()		Perl_dowantarray(aTHX)
#define dump_all()		Perl_dump_all(aTHX)
#define dump_eval()		Perl_dump_eval(aTHX)
#if defined(DUMP_FDS)
#define dump_fds(a)		Perl_dump_fds(aTHX_ a)
#endif
#define dump_form(a)		Perl_dump_form(aTHX_ a)
#define gv_dump(a)		Perl_gv_dump(aTHX_ a)
#define op_dump(a)		Perl_op_dump(aTHX_ a)
#define pmop_dump(a)		Perl_pmop_dump(aTHX_ a)
#define dump_packsubs(a)	Perl_dump_packsubs(aTHX_ a)
#define dump_sub(a)		Perl_dump_sub(aTHX_ a)
#define fbm_compile(a,b)	Perl_fbm_compile(aTHX_ a,b)
#define fbm_instr(a,b,c,d)	Perl_fbm_instr(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#define find_script(a,b,c,d)	Perl_find_script(aTHX_ a,b,c,d)
#define force_list(a)		Perl_force_list(aTHX_ a)
#define fold_constants(a)	Perl_fold_constants(aTHX_ a)
#endif
#define vform(a,b)		Perl_vform(aTHX_ a,b)
#define free_tmps()		Perl_free_tmps(aTHX)
#ifdef PERL_CORE
#define gen_constant_list(a)	Perl_gen_constant_list(aTHX_ a)
#endif
#if !defined(HAS_GETENV_LEN)
#ifdef PERL_CORE
#define getenv_len(a,b)		Perl_getenv_len(aTHX_ a,b)
#endif
#endif
#ifdef PERL_CORE
#endif
#define gp_free(a)		Perl_gp_free(aTHX_ a)
#define gp_ref(a)		Perl_gp_ref(aTHX_ a)
#define gv_AVadd(a)		Perl_gv_AVadd(aTHX_ a)
#define gv_HVadd(a)		Perl_gv_HVadd(aTHX_ a)
#define gv_IOadd(a)		Perl_gv_IOadd(aTHX_ a)
#define gv_autoload4(a,b,c,d)	Perl_gv_autoload4(aTHX_ a,b,c,d)
#define gv_check(a)		Perl_gv_check(aTHX_ a)
#define gv_efullname(a,b)	Perl_gv_efullname(aTHX_ a,b)
#define gv_efullname4(a,b,c,d)	Perl_gv_efullname4(aTHX_ a,b,c,d)
#define gv_fetchfile(a)		Perl_gv_fetchfile(aTHX_ a)
#define gv_fetchfile_flags(a,b,c)	Perl_gv_fetchfile_flags(aTHX_ a,b,c)
#define gv_fetchmeth(a,b,c,d)	Perl_gv_fetchmeth(aTHX_ a,b,c,d)
#define gv_fetchmeth_autoload(a,b,c,d)	Perl_gv_fetchmeth_autoload(aTHX_ a,b,c,d)
#define gv_fetchmethod_autoload(a,b,c)	Perl_gv_fetchmethod_autoload(aTHX_ a,b,c)
#define gv_fetchpv(a,b,c)	Perl_gv_fetchpv(aTHX_ a,b,c)
#define gv_fullname(a,b)	Perl_gv_fullname(aTHX_ a,b)
#define gv_fullname4(a,b,c,d)	Perl_gv_fullname4(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#endif
#define gv_init(a,b,c,d,e)	Perl_gv_init(aTHX_ a,b,c,d,e)
#define gv_name_set(a,b,c,d)	Perl_gv_name_set(aTHX_ a,b,c,d)
#define gv_stashpv(a,b)		Perl_gv_stashpv(aTHX_ a,b)
#define gv_stashpvn(a,b,c)	Perl_gv_stashpvn(aTHX_ a,b,c)
#define gv_stashsv(a,b)		Perl_gv_stashsv(aTHX_ a,b)
#define hv_clear(a)		Perl_hv_clear(aTHX_ a)
#ifdef PERL_CORE
#endif
#define hv_delayfree_ent(a,b)	Perl_hv_delayfree_ent(aTHX_ a,b)
#define hv_common(a,b,c,d,e,f,g,h)	Perl_hv_common(aTHX_ a,b,c,d,e,f,g,h)
#define hv_common_key_len(a,b,c,d,e,f)	Perl_hv_common_key_len(aTHX_ a,b,c,d,e,f)
#define hv_free_ent(a,b)	Perl_hv_free_ent(aTHX_ a,b)
#define hv_iterinit(a)		Perl_hv_iterinit(aTHX_ a)
#define hv_iterkey(a,b)		Perl_hv_iterkey(aTHX_ a,b)
#define hv_iterkeysv(a)		Perl_hv_iterkeysv(aTHX_ a)
#define hv_iternextsv(a,b,c)	Perl_hv_iternextsv(aTHX_ a,b,c)
#define hv_iternext_flags(a,b)	Perl_hv_iternext_flags(aTHX_ a,b)
#define hv_iterval(a,b)		Perl_hv_iterval(aTHX_ a,b)
#define hv_ksplit(a,b)		Perl_hv_ksplit(aTHX_ a,b)
#if defined(PERL_CORE) || defined(PERL_EXT)
#endif
#ifdef PERL_CORE
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#endif
#define hv_undef(a)		Perl_hv_undef(aTHX_ a)
#define ibcmp(a,b,c)		Perl_ibcmp(aTHX_ a,b,c)
#define ibcmp_locale(a,b,c)	Perl_ibcmp_locale(aTHX_ a,b,c)
#define ibcmp_utf8(a,b,c,d,e,f,g,h)	Perl_ibcmp_utf8(aTHX_ a,b,c,d,e,f,g,h)
#ifdef PERL_CORE
#define ingroup(a,b)		Perl_ingroup(aTHX_ a,b)
#define init_argv_symbols(a,b)	Perl_init_argv_symbols(aTHX_ a,b)
#define init_debugger()		Perl_init_debugger(aTHX)
#endif
#define init_stacks()		Perl_init_stacks(aTHX)
#define init_tm(a)		Perl_init_tm(aTHX_ a)
#ifdef PERL_CORE
#define intro_my()		Perl_intro_my(aTHX)
#endif
#define instr(a,b)		Perl_instr(aTHX_ a,b)
#ifdef PERL_CORE
#define io_close(a,b)		Perl_io_close(aTHX_ a,b)
#define invert(a)		Perl_invert(aTHX_ a)
#define is_gv_magical(a,b,c)	Perl_is_gv_magical(aTHX_ a,b,c)
#endif
#define is_lvalue_sub()		Perl_is_lvalue_sub(aTHX)
#define to_uni_upper_lc(a)	Perl_to_uni_upper_lc(aTHX_ a)
#define to_uni_title_lc(a)	Perl_to_uni_title_lc(aTHX_ a)
#define to_uni_lower_lc(a)	Perl_to_uni_lower_lc(aTHX_ a)
#define is_uni_alnum(a)		Perl_is_uni_alnum(aTHX_ a)
#define is_uni_alnumc(a)	Perl_is_uni_alnumc(aTHX_ a)
#define is_uni_idfirst(a)	Perl_is_uni_idfirst(aTHX_ a)
#define is_uni_alpha(a)		Perl_is_uni_alpha(aTHX_ a)
#define is_uni_ascii(a)		Perl_is_uni_ascii(aTHX_ a)
#define is_uni_space(a)		Perl_is_uni_space(aTHX_ a)
#define is_uni_cntrl(a)		Perl_is_uni_cntrl(aTHX_ a)
#define is_uni_graph(a)		Perl_is_uni_graph(aTHX_ a)
#define is_uni_digit(a)		Perl_is_uni_digit(aTHX_ a)
#define is_uni_upper(a)		Perl_is_uni_upper(aTHX_ a)
#define is_uni_lower(a)		Perl_is_uni_lower(aTHX_ a)
#define is_uni_print(a)		Perl_is_uni_print(aTHX_ a)
#define is_uni_punct(a)		Perl_is_uni_punct(aTHX_ a)
#define is_uni_xdigit(a)	Perl_is_uni_xdigit(aTHX_ a)
#define to_uni_upper(a,b,c)	Perl_to_uni_upper(aTHX_ a,b,c)
#define to_uni_title(a,b,c)	Perl_to_uni_title(aTHX_ a,b,c)
#define to_uni_lower(a,b,c)	Perl_to_uni_lower(aTHX_ a,b,c)
#define to_uni_fold(a,b,c)	Perl_to_uni_fold(aTHX_ a,b,c)
#define is_uni_alnum_lc(a)	Perl_is_uni_alnum_lc(aTHX_ a)
#define is_uni_alnumc_lc(a)	Perl_is_uni_alnumc_lc(aTHX_ a)
#define is_uni_idfirst_lc(a)	Perl_is_uni_idfirst_lc(aTHX_ a)
#define is_uni_alpha_lc(a)	Perl_is_uni_alpha_lc(aTHX_ a)
#define is_uni_ascii_lc(a)	Perl_is_uni_ascii_lc(aTHX_ a)
#define is_uni_space_lc(a)	Perl_is_uni_space_lc(aTHX_ a)
#define is_uni_cntrl_lc(a)	Perl_is_uni_cntrl_lc(aTHX_ a)
#define is_uni_graph_lc(a)	Perl_is_uni_graph_lc(aTHX_ a)
#define is_uni_digit_lc(a)	Perl_is_uni_digit_lc(aTHX_ a)
#define is_uni_upper_lc(a)	Perl_is_uni_upper_lc(aTHX_ a)
#define is_uni_lower_lc(a)	Perl_is_uni_lower_lc(aTHX_ a)
#define is_uni_print_lc(a)	Perl_is_uni_print_lc(aTHX_ a)
#define is_uni_punct_lc(a)	Perl_is_uni_punct_lc(aTHX_ a)
#define is_uni_xdigit_lc(a)	Perl_is_uni_xdigit_lc(aTHX_ a)
#define is_utf8_char(a)		Perl_is_utf8_char(aTHX_ a)
#define is_utf8_string(a,b)	Perl_is_utf8_string(aTHX_ a,b)
#define is_utf8_string_loclen(a,b,c,d)	Perl_is_utf8_string_loclen(aTHX_ a,b,c,d)
#define is_utf8_alnum(a)	Perl_is_utf8_alnum(aTHX_ a)
#define is_utf8_alnumc(a)	Perl_is_utf8_alnumc(aTHX_ a)
#define is_utf8_idfirst(a)	Perl_is_utf8_idfirst(aTHX_ a)
#define is_utf8_idcont(a)	Perl_is_utf8_idcont(aTHX_ a)
#define is_utf8_alpha(a)	Perl_is_utf8_alpha(aTHX_ a)
#define is_utf8_ascii(a)	Perl_is_utf8_ascii(aTHX_ a)
#define is_utf8_space(a)	Perl_is_utf8_space(aTHX_ a)
#define is_utf8_cntrl(a)	Perl_is_utf8_cntrl(aTHX_ a)
#define is_utf8_digit(a)	Perl_is_utf8_digit(aTHX_ a)
#define is_utf8_graph(a)	Perl_is_utf8_graph(aTHX_ a)
#define is_utf8_upper(a)	Perl_is_utf8_upper(aTHX_ a)
#define is_utf8_lower(a)	Perl_is_utf8_lower(aTHX_ a)
#define is_utf8_print(a)	Perl_is_utf8_print(aTHX_ a)
#define is_utf8_punct(a)	Perl_is_utf8_punct(aTHX_ a)
#define is_utf8_xdigit(a)	Perl_is_utf8_xdigit(aTHX_ a)
#define is_utf8_mark(a)		Perl_is_utf8_mark(aTHX_ a)
#ifdef PERL_CORE
#define jmaybe(a)		Perl_jmaybe(aTHX_ a)
#define keyword(a,b,c)		Perl_keyword(aTHX_ a,b,c)
#endif
#define leave_scope(a)		Perl_leave_scope(aTHX_ a)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define lex_end()		Perl_lex_end(aTHX)
#endif
#ifdef PERL_CORE
#define lex_start(a,b,c)	Perl_lex_start(aTHX_ a,b,c)
#endif
#define op_null(a)		Perl_op_null(aTHX_ a)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define op_clear(a)		Perl_op_clear(aTHX_ a)
#endif
#define op_refcnt_lock()	Perl_op_refcnt_lock(aTHX)
#define op_refcnt_unlock()	Perl_op_refcnt_unlock(aTHX)
#ifdef PERL_CORE
#define linklist(a)		Perl_linklist(aTHX_ a)
#define list(a)			Perl_list(aTHX_ a)
#define listkids(a)		Perl_listkids(aTHX_ a)
#endif
#define vload_module(a,b,c,d)	Perl_vload_module(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#define localize(a,b)		Perl_localize(aTHX_ a,b)
#endif
#define looks_like_number(a)	Perl_looks_like_number(aTHX_ a)
#define grok_bin(a,b,c,d)	Perl_grok_bin(aTHX_ a,b,c,d)
#define grok_hex(a,b,c,d)	Perl_grok_hex(aTHX_ a,b,c,d)
#define grok_number(a,b,c)	Perl_grok_number(aTHX_ a,b,c)
#define grok_numeric_radix(a,b)	Perl_grok_numeric_radix(aTHX_ a,b)
#define grok_oct(a,b,c,d)	Perl_grok_oct(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#define magic_clearenv(a,b)	Perl_magic_clearenv(aTHX_ a,b)
#define magic_clear_all_env(a,b)	Perl_magic_clear_all_env(aTHX_ a,b)
#define magic_clearhint(a,b)	Perl_magic_clearhint(aTHX_ a,b)
#define magic_clearisa(a,b)	Perl_magic_clearisa(aTHX_ a,b)
#define magic_clearpack(a,b)	Perl_magic_clearpack(aTHX_ a,b)
#define magic_clearsig(a,b)	Perl_magic_clearsig(aTHX_ a,b)
#define magic_existspack(a,b)	Perl_magic_existspack(aTHX_ a,b)
#define magic_freeregexp(a,b)	Perl_magic_freeregexp(aTHX_ a,b)
#define magic_freeovrld(a,b)	Perl_magic_freeovrld(aTHX_ a,b)
#define magic_get(a,b)		Perl_magic_get(aTHX_ a,b)
#define magic_getarylen(a,b)	Perl_magic_getarylen(aTHX_ a,b)
#define magic_getdefelem(a,b)	Perl_magic_getdefelem(aTHX_ a,b)
#define magic_getnkeys(a,b)	Perl_magic_getnkeys(aTHX_ a,b)
#define magic_getpack(a,b)	Perl_magic_getpack(aTHX_ a,b)
#define magic_getpos(a,b)	Perl_magic_getpos(aTHX_ a,b)
#define magic_getsig(a,b)	Perl_magic_getsig(aTHX_ a,b)
#define magic_getsubstr(a,b)	Perl_magic_getsubstr(aTHX_ a,b)
#define magic_gettaint(a,b)	Perl_magic_gettaint(aTHX_ a,b)
#define magic_getuvar(a,b)	Perl_magic_getuvar(aTHX_ a,b)
#define magic_getvec(a,b)	Perl_magic_getvec(aTHX_ a,b)
#define magic_len(a,b)		Perl_magic_len(aTHX_ a,b)
#define magic_nextpack(a,b,c)	Perl_magic_nextpack(aTHX_ a,b,c)
#define magic_regdata_cnt(a,b)	Perl_magic_regdata_cnt(aTHX_ a,b)
#define magic_regdatum_get(a,b)	Perl_magic_regdatum_get(aTHX_ a,b)
#define magic_regdatum_set(a,b)	Perl_magic_regdatum_set(aTHX_ a,b)
#define magic_set(a,b)		Perl_magic_set(aTHX_ a,b)
#define magic_setamagic(a,b)	Perl_magic_setamagic(aTHX_ a,b)
#define magic_setarylen(a,b)	Perl_magic_setarylen(aTHX_ a,b)
#define magic_freearylen_p(a,b)	Perl_magic_freearylen_p(aTHX_ a,b)
#endif
#ifndef NO_MATHOMS
#ifdef PERL_CORE
#define magic_setbm(a,b)	Perl_magic_setbm(aTHX_ a,b)
#define magic_setfm(a,b)	Perl_magic_setfm(aTHX_ a,b)
#endif
#endif
#ifdef PERL_CORE
#define magic_setdbline(a,b)	Perl_magic_setdbline(aTHX_ a,b)
#define magic_setdefelem(a,b)	Perl_magic_setdefelem(aTHX_ a,b)
#define magic_setenv(a,b)	Perl_magic_setenv(aTHX_ a,b)
#define magic_sethint(a,b)	Perl_magic_sethint(aTHX_ a,b)
#define magic_setisa(a,b)	Perl_magic_setisa(aTHX_ a,b)
#endif
#ifndef NO_MATHOMS
#ifdef PERL_CORE
#define magic_setglob(a,b)	Perl_magic_setglob(aTHX_ a,b)
#endif
#endif
#ifdef PERL_CORE
#define magic_setmglob(a,b)	Perl_magic_setmglob(aTHX_ a,b)
#define magic_setnkeys(a,b)	Perl_magic_setnkeys(aTHX_ a,b)
#define magic_setpack(a,b)	Perl_magic_setpack(aTHX_ a,b)
#define magic_setpos(a,b)	Perl_magic_setpos(aTHX_ a,b)
#define magic_setregexp(a,b)	Perl_magic_setregexp(aTHX_ a,b)
#define magic_setsig(a,b)	Perl_magic_setsig(aTHX_ a,b)
#define magic_setsubstr(a,b)	Perl_magic_setsubstr(aTHX_ a,b)
#define magic_settaint(a,b)	Perl_magic_settaint(aTHX_ a,b)
#define magic_setuvar(a,b)	Perl_magic_setuvar(aTHX_ a,b)
#define magic_setvec(a,b)	Perl_magic_setvec(aTHX_ a,b)
#define magic_setutf8(a,b)	Perl_magic_setutf8(aTHX_ a,b)
#define magic_set_all_env(a,b)	Perl_magic_set_all_env(aTHX_ a,b)
#define magic_sizepack(a,b)	Perl_magic_sizepack(aTHX_ a,b)
#define magic_wipepack(a,b)	Perl_magic_wipepack(aTHX_ a,b)
#define magicname(a,b,c)	Perl_magicname(aTHX_ a,b,c)
#endif
#define markstack_grow()	Perl_markstack_grow(aTHX)
#if defined(USE_LOCALE_COLLATE)
#ifdef PERL_CORE
#define magic_setcollxfrm(a,b)	Perl_magic_setcollxfrm(aTHX_ a,b)
#define mem_collxfrm(a,b,c)	Perl_mem_collxfrm(aTHX_ a,b,c)
#endif
#endif
#define vmess(a,b)		Perl_vmess(aTHX_ a,b)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define qerror(a)		Perl_qerror(aTHX_ a)
#endif
#define sortsv(a,b,c)		Perl_sortsv(aTHX_ a,b,c)
#define sortsv_flags(a,b,c,d)	Perl_sortsv_flags(aTHX_ a,b,c,d)
#define mg_clear(a)		Perl_mg_clear(aTHX_ a)
#define mg_copy(a,b,c,d)	Perl_mg_copy(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#define mg_localize(a,b)	Perl_mg_localize(aTHX_ a,b)
#endif
#define mg_find(a,b)		Perl_mg_find(aTHX_ a,b)
#define mg_free(a)		Perl_mg_free(aTHX_ a)
#define mg_get(a)		Perl_mg_get(aTHX_ a)
#define mg_length(a)		Perl_mg_length(aTHX_ a)
#define mg_magical(a)		Perl_mg_magical(aTHX_ a)
#define mg_set(a)		Perl_mg_set(aTHX_ a)
#define mg_size(a)		Perl_mg_size(aTHX_ a)
#define mini_mktime(a)		Perl_mini_mktime(aTHX_ a)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define mod(a,b)		Perl_mod(aTHX_ a,b)
#endif
#ifdef PERL_CORE
#define mode_from_discipline(a)	Perl_mode_from_discipline(aTHX_ a)
#endif
#define moreswitches(a)		Perl_moreswitches(aTHX_ a)
#ifdef PERL_CORE
#define my(a)			Perl_my(aTHX_ a)
#endif
#define my_atof(a)		Perl_my_atof(aTHX_ a)
#if (!defined(HAS_MEMCPY) && !defined(HAS_BCOPY)) || (!defined(HAS_MEMMOVE) && !defined(HAS_SAFE_MEMCPY) && !defined(HAS_SAFE_BCOPY))
#define my_bcopy		Perl_my_bcopy
#endif
#if !defined(HAS_BZERO) && !defined(HAS_MEMSET)
#define my_bzero		Perl_my_bzero
#endif
#define my_exit(a)		Perl_my_exit(aTHX_ a)
#define my_failure_exit()	Perl_my_failure_exit(aTHX)
#define my_fflush_all()		Perl_my_fflush_all(aTHX)
#define my_fork			Perl_my_fork
#define atfork_lock		Perl_atfork_lock
#define atfork_unlock		Perl_atfork_unlock
#define my_lstat()		Perl_my_lstat(aTHX)
#if !defined(HAS_MEMCMP) || !defined(HAS_SANE_MEMCMP)
#define my_memcmp		Perl_my_memcmp
#endif
#if !defined(HAS_MEMSET)
#define my_memset		Perl_my_memset
#endif
#define my_pclose(a)		Perl_my_pclose(aTHX_ a)
#define my_popen(a,b)		Perl_my_popen(aTHX_ a,b)
#define my_popen_list(a,b,c)	Perl_my_popen_list(aTHX_ a,b,c)
#define my_setenv(a,b)		Perl_my_setenv(aTHX_ a,b)
#define my_stat()		Perl_my_stat(aTHX)
#define my_strftime(a,b,c,d,e,f,g,h,i,j)	Perl_my_strftime(aTHX_ a,b,c,d,e,f,g,h,i,j)
#if defined(MYSWAP)
#define my_swap(a)		Perl_my_swap(aTHX_ a)
#define my_htonl(a)		Perl_my_htonl(aTHX_ a)
#define my_ntohl(a)		Perl_my_ntohl(aTHX_ a)
#endif
#ifdef PERL_CORE
#define my_unexec()		Perl_my_unexec(aTHX)
#endif
#define newANONLIST(a)		Perl_newANONLIST(aTHX_ a)
#define newANONHASH(a)		Perl_newANONHASH(aTHX_ a)
#define newANONSUB(a,b,c)	Perl_newANONSUB(aTHX_ a,b,c)
#define newASSIGNOP(a,b,c,d)	Perl_newASSIGNOP(aTHX_ a,b,c,d)
#define newCONDOP(a,b,c,d)	Perl_newCONDOP(aTHX_ a,b,c,d)
#define newCONSTSUB(a,b,c)	Perl_newCONSTSUB(aTHX_ a,b,c)
#ifdef PERL_MAD
#define newFORM(a,b,c)		Perl_newFORM(aTHX_ a,b,c)
#else
#define newFORM(a,b,c)		Perl_newFORM(aTHX_ a,b,c)
#endif
#define newFOROP(a,b,c,d,e,f,g)	Perl_newFOROP(aTHX_ a,b,c,d,e,f,g)
#define newGIVENOP(a,b,c)	Perl_newGIVENOP(aTHX_ a,b,c)
#define newLOGOP(a,b,c,d)	Perl_newLOGOP(aTHX_ a,b,c,d)
#define newLOOPEX(a,b)		Perl_newLOOPEX(aTHX_ a,b)
#define newLOOPOP(a,b,c,d)	Perl_newLOOPOP(aTHX_ a,b,c,d)
#define newNULLLIST()		Perl_newNULLLIST(aTHX)
#define newOP(a,b)		Perl_newOP(aTHX_ a,b)
#define newPROG(a)		Perl_newPROG(aTHX_ a)
#define newRANGE(a,b,c)		Perl_newRANGE(aTHX_ a,b,c)
#define newSLICEOP(a,b,c)	Perl_newSLICEOP(aTHX_ a,b,c)
#define newSTATEOP(a,b,c)	Perl_newSTATEOP(aTHX_ a,b,c)
#define newSUB(a,b,c,d)		Perl_newSUB(aTHX_ a,b,c,d)
#define newXS_flags(a,b,c,d,e)	Perl_newXS_flags(aTHX_ a,b,c,d,e)
#define newXS(a,b,c)		Perl_newXS(aTHX_ a,b,c)
#define newAVREF(a)		Perl_newAVREF(aTHX_ a)
#define newBINOP(a,b,c,d)	Perl_newBINOP(aTHX_ a,b,c,d)
#define newCVREF(a,b)		Perl_newCVREF(aTHX_ a,b)
#define newGVOP(a,b,c)		Perl_newGVOP(aTHX_ a,b,c)
#define newGVgen(a)		Perl_newGVgen(aTHX_ a)
#define newGVREF(a,b)		Perl_newGVREF(aTHX_ a,b)
#define newHVREF(a)		Perl_newHVREF(aTHX_ a)
#define newHVhv(a)		Perl_newHVhv(aTHX_ a)
#define newIO()			Perl_newIO(aTHX)
#define newLISTOP(a,b,c,d)	Perl_newLISTOP(aTHX_ a,b,c,d)
#ifdef USE_ITHREADS
#define newPADOP(a,b,c)		Perl_newPADOP(aTHX_ a,b,c)
#endif
#define newPMOP(a,b)		Perl_newPMOP(aTHX_ a,b)
#define newPVOP(a,b,c)		Perl_newPVOP(aTHX_ a,b,c)
#define newRV(a)		Perl_newRV(aTHX_ a)
#define newRV_noinc(a)		Perl_newRV_noinc(aTHX_ a)
#define newSV(a)		Perl_newSV(aTHX_ a)
#define newSVREF(a)		Perl_newSVREF(aTHX_ a)
#define newSVOP(a,b,c)		Perl_newSVOP(aTHX_ a,b,c)
#define newSViv(a)		Perl_newSViv(aTHX_ a)
#define newSVuv(a)		Perl_newSVuv(aTHX_ a)
#define newSVnv(a)		Perl_newSVnv(aTHX_ a)
#define newSVpv(a,b)		Perl_newSVpv(aTHX_ a,b)
#define newSVpvn(a,b)		Perl_newSVpvn(aTHX_ a,b)
#define newSVpvn_flags(a,b,c)	Perl_newSVpvn_flags(aTHX_ a,b,c)
#define newSVhek(a)		Perl_newSVhek(aTHX_ a)
#define newSVpvn_share(a,b,c)	Perl_newSVpvn_share(aTHX_ a,b,c)
#define vnewSVpvf(a,b)		Perl_vnewSVpvf(aTHX_ a,b)
#define newSVrv(a,b)		Perl_newSVrv(aTHX_ a,b)
#define newSVsv(a)		Perl_newSVsv(aTHX_ a)
#define newSV_type(a)		Perl_newSV_type(aTHX_ a)
#define newUNOP(a,b,c)		Perl_newUNOP(aTHX_ a,b,c)
#define newWHENOP(a,b)		Perl_newWHENOP(aTHX_ a,b)
#define newWHILEOP(a,b,c,d,e,f,g,h)	Perl_newWHILEOP(aTHX_ a,b,c,d,e,f,g,h)
#define new_stackinfo(a,b)	Perl_new_stackinfo(aTHX_ a,b)
#define scan_vstring(a,b,c)	Perl_scan_vstring(aTHX_ a,b,c)
#define scan_version(a,b,c)	Perl_scan_version(aTHX_ a,b,c)
#define new_version(a)		Perl_new_version(aTHX_ a)
#define upg_version(a,b)	Perl_upg_version(aTHX_ a,b)
#define vverify(a)		Perl_vverify(aTHX_ a)
#define vnumify(a)		Perl_vnumify(aTHX_ a)
#define vnormal(a)		Perl_vnormal(aTHX_ a)
#define vstringify(a)		Perl_vstringify(aTHX_ a)
#define vcmp(a,b)		Perl_vcmp(aTHX_ a,b)
#ifdef PERL_CORE
#define nextargv(a)		Perl_nextargv(aTHX_ a)
#endif
#define ninstr(a,b,c,d)		Perl_ninstr(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#define oopsCV(a)		Perl_oopsCV(aTHX_ a)
#endif
#define op_free(a)		Perl_op_free(aTHX_ a)
#ifdef PERL_MAD
#ifdef PERL_CORE
#define package(a)		Perl_package(aTHX_ a)
#endif
#else
#ifdef PERL_CORE
#define package(a)		Perl_package(aTHX_ a)
#endif
#endif
#ifdef PERL_CORE
#define pad_alloc(a,b)		Perl_pad_alloc(aTHX_ a,b)
#define allocmy(a)		Perl_allocmy(aTHX_ a)
#define pad_findmy(a)		Perl_pad_findmy(aTHX_ a)
#endif
#define find_rundefsvoffset()	Perl_find_rundefsvoffset(aTHX)
#ifdef PERL_CORE
#define oopsAV(a)		Perl_oopsAV(aTHX_ a)
#define oopsHV(a)		Perl_oopsHV(aTHX_ a)
#define pad_leavemy()		Perl_pad_leavemy(aTHX)
#endif
#define pad_sv(a)		Perl_pad_sv(aTHX_ a)
#ifdef PERL_CORE
#define pad_free(a)		Perl_pad_free(aTHX_ a)
#define pad_reset()		Perl_pad_reset(aTHX)
#define pad_swipe(a,b)		Perl_pad_swipe(aTHX_ a,b)
#define peep(a)			Perl_peep(aTHX_ a)
#endif
#if defined(USE_REENTRANT_API)
#define reentrant_size()	Perl_reentrant_size(aTHX)
#define reentrant_init()	Perl_reentrant_init(aTHX)
#define reentrant_free()	Perl_reentrant_free(aTHX)
#endif
#define call_atexit(a,b)	Perl_call_atexit(aTHX_ a,b)
#define call_argv(a,b,c)	Perl_call_argv(aTHX_ a,b,c)
#define call_method(a,b)	Perl_call_method(aTHX_ a,b)
#define call_pv(a,b)		Perl_call_pv(aTHX_ a,b)
#define call_sv(a,b)		Perl_call_sv(aTHX_ a,b)
#define despatch_signals()	Perl_despatch_signals(aTHX)
#define doref(a,b,c)		Perl_doref(aTHX_ a,b,c)
#define eval_pv(a,b)		Perl_eval_pv(aTHX_ a,b)
#define eval_sv(a,b)		Perl_eval_sv(aTHX_ a,b)
#define get_sv(a,b)		Perl_get_sv(aTHX_ a,b)
#define get_av(a,b)		Perl_get_av(aTHX_ a,b)
#define get_hv(a,b)		Perl_get_hv(aTHX_ a,b)
#define get_cv(a,b)		Perl_get_cv(aTHX_ a,b)
#define get_cvn_flags(a,b,c)	Perl_get_cvn_flags(aTHX_ a,b,c)
#define init_i18nl10n(a)	Perl_init_i18nl10n(aTHX_ a)
#define init_i18nl14n(a)	Perl_init_i18nl14n(aTHX_ a)
#define new_collate(a)		Perl_new_collate(aTHX_ a)
#define new_ctype(a)		Perl_new_ctype(aTHX_ a)
#define new_numeric(a)		Perl_new_numeric(aTHX_ a)
#define set_numeric_local()	Perl_set_numeric_local(aTHX)
#define set_numeric_radix()	Perl_set_numeric_radix(aTHX)
#define set_numeric_standard()	Perl_set_numeric_standard(aTHX)
#define require_pv(a)		Perl_require_pv(aTHX_ a)
#define pack_cat(a,b,c,d,e,f,g)	Perl_pack_cat(aTHX_ a,b,c,d,e,f,g)
#define packlist(a,b,c,d,e)	Perl_packlist(aTHX_ a,b,c,d,e)
#ifdef PERL_USES_PL_PIDSTATUS
#ifdef PERL_CORE
#define pidgone(a,b)		Perl_pidgone(aTHX_ a,b)
#endif
#endif
#define pmflag(a,b)		Perl_pmflag(aTHX_ a,b)
#ifdef PERL_CORE
#define pmruntime(a,b,c)	Perl_pmruntime(aTHX_ a,b,c)
#define pmtrans(a,b,c)		Perl_pmtrans(aTHX_ a,b,c)
#endif
#define pop_scope()		Perl_pop_scope(aTHX)
#ifdef PERL_CORE
#define prepend_elem(a,b,c)	Perl_prepend_elem(aTHX_ a,b,c)
#endif
#define push_scope()		Perl_push_scope(aTHX)
#ifdef PERL_CORE
#define refkids(a,b)		Perl_refkids(aTHX_ a,b)
#endif
#define regdump(a)		Perl_regdump(aTHX_ a)
#define regdump(a)		Perl_regdump(aTHX_ a)
#define regclass_swash(a,b,c,d,e)	Perl_regclass_swash(aTHX_ a,b,c,d,e)
#define pregexec(a,b,c,d,e,f,g)	Perl_pregexec(aTHX_ a,b,c,d,e,f,g)
#define pregfree(a)		Perl_pregfree(aTHX_ a)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_temp_copy(a)	Perl_reg_temp_copy(aTHX_ a)
#endif
#define regfree_internal(a)	Perl_regfree_internal(aTHX_ a)
#define reg_stringify(a,b,c,d)	Perl_reg_stringify(aTHX_ a,b,c,d)
#if defined(USE_ITHREADS)
#define regdupe_internal(a,b)	Perl_regdupe_internal(aTHX_ a,b)
#endif
#define pregcomp(a,b)		Perl_pregcomp(aTHX_ a,b)
#define re_compile(a,b)		Perl_re_compile(aTHX_ a,b)
#define re_intuit_start(a,b,c,d,e,f)	Perl_re_intuit_start(aTHX_ a,b,c,d,e,f)
#define re_intuit_string(a)	Perl_re_intuit_string(aTHX_ a)
#define regexec_flags(a,b,c,d,e,f,g,h)	Perl_regexec_flags(aTHX_ a,b,c,d,e,f,g,h)
#define regnext(a)		Perl_regnext(aTHX_ a)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_named_buff(a,b,c,d)	Perl_reg_named_buff(aTHX_ a,b,c,d)
#define reg_named_buff_iter(a,b,c)	Perl_reg_named_buff_iter(aTHX_ a,b,c)
#endif
#define reg_named_buff_fetch(a,b,c)	Perl_reg_named_buff_fetch(aTHX_ a,b,c)
#define reg_named_buff_exists(a,b,c)	Perl_reg_named_buff_exists(aTHX_ a,b,c)
#define reg_named_buff_firstkey(a,b)	Perl_reg_named_buff_firstkey(aTHX_ a,b)
#define reg_named_buff_nextkey(a,b)	Perl_reg_named_buff_nextkey(aTHX_ a,b)
#define reg_named_buff_scalar(a,b)	Perl_reg_named_buff_scalar(aTHX_ a,b)
#define reg_named_buff_all(a,b)	Perl_reg_named_buff_all(aTHX_ a,b)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_numbered_buff_fetch(a,b,c)	Perl_reg_numbered_buff_fetch(aTHX_ a,b,c)
#define reg_numbered_buff_store(a,b,c)	Perl_reg_numbered_buff_store(aTHX_ a,b,c)
#define reg_numbered_buff_length(a,b,c)	Perl_reg_numbered_buff_length(aTHX_ a,b,c)
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg_qr_package(a)	Perl_reg_qr_package(aTHX_ a)
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regprop(a,b,c)		Perl_regprop(aTHX_ a,b,c)
#endif
#define repeatcpy(a,b,c,d)	Perl_repeatcpy(aTHX_ a,b,c,d)
#define rninstr(a,b,c,d)	Perl_rninstr(aTHX_ a,b,c,d)
#define rsignal(a,b)		Perl_rsignal(aTHX_ a,b)
#ifdef PERL_CORE
#define rsignal_restore(a,b)	Perl_rsignal_restore(aTHX_ a,b)
#define rsignal_save(a,b,c)	Perl_rsignal_save(aTHX_ a,b,c)
#endif
#define rsignal_state(a)	Perl_rsignal_state(aTHX_ a)
#ifdef PERL_CORE
#define rxres_free(a)		Perl_rxres_free(aTHX_ a)
#define rxres_restore(a,b)	Perl_rxres_restore(aTHX_ a,b)
#define rxres_save(a,b)		Perl_rxres_save(aTHX_ a,b)
#endif
#if !defined(HAS_RENAME)
#ifdef PERL_CORE
#define same_dirent(a,b)	Perl_same_dirent(aTHX_ a,b)
#endif
#endif
#define savepv(a)		Perl_savepv(aTHX_ a)
#define savepvn(a,b)		Perl_savepvn(aTHX_ a,b)
#define savesharedpv(a)		Perl_savesharedpv(aTHX_ a)
#define savesharedpvn(a,b)	Perl_savesharedpvn(aTHX_ a,b)
#define savesvpv(a)		Perl_savesvpv(aTHX_ a)
#define savestack_grow()	Perl_savestack_grow(aTHX)
#define savestack_grow_cnt(a)	Perl_savestack_grow_cnt(aTHX_ a)
#define save_aelem(a,b,c)	Perl_save_aelem(aTHX_ a,b,c)
#define save_alloc(a,b)		Perl_save_alloc(aTHX_ a,b)
#define save_aptr(a)		Perl_save_aptr(aTHX_ a)
#define save_ary(a)		Perl_save_ary(aTHX_ a)
#define save_bool(a)		Perl_save_bool(aTHX_ a)
#define save_clearsv(a)		Perl_save_clearsv(aTHX_ a)
#define save_delete(a,b,c)	Perl_save_delete(aTHX_ a,b,c)
#define save_destructor(a,b)	Perl_save_destructor(aTHX_ a,b)
#define save_destructor_x(a,b)	Perl_save_destructor_x(aTHX_ a,b)
#ifdef PERL_CORE
#endif
#define save_generic_svref(a)	Perl_save_generic_svref(aTHX_ a)
#define save_generic_pvref(a)	Perl_save_generic_pvref(aTHX_ a)
#define save_shared_pvref(a)	Perl_save_shared_pvref(aTHX_ a)
#define save_gp(a,b)		Perl_save_gp(aTHX_ a,b)
#define save_hash(a)		Perl_save_hash(aTHX_ a)
#ifdef PERL_CORE
#define save_hints()		Perl_save_hints(aTHX)
#endif
#define save_helem(a,b,c)	Perl_save_helem(aTHX_ a,b,c)
#define save_hptr(a)		Perl_save_hptr(aTHX_ a)
#define save_I16(a)		Perl_save_I16(aTHX_ a)
#define save_I32(a)		Perl_save_I32(aTHX_ a)
#define save_I8(a)		Perl_save_I8(aTHX_ a)
#define save_int(a)		Perl_save_int(aTHX_ a)
#define save_item(a)		Perl_save_item(aTHX_ a)
#define save_iv(a)		Perl_save_iv(aTHX_ a)
#define save_list(a,b)		Perl_save_list(aTHX_ a,b)
#define save_long(a)		Perl_save_long(aTHX_ a)
#define save_nogv(a)		Perl_save_nogv(aTHX_ a)
#ifdef PERL_CORE
#endif
#define save_scalar(a)		Perl_save_scalar(aTHX_ a)
#define save_pptr(a)		Perl_save_pptr(aTHX_ a)
#define save_vptr(a)		Perl_save_vptr(aTHX_ a)
#define save_re_context()	Perl_save_re_context(aTHX)
#define save_padsv(a)		Perl_save_padsv(aTHX_ a)
#define save_padsv_and_mortalize(a)	Perl_save_padsv_and_mortalize(aTHX_ a)
#define save_sptr(a)		Perl_save_sptr(aTHX_ a)
#define save_svref(a)		Perl_save_svref(aTHX_ a)
#define save_pushptr(a,b)	Perl_save_pushptr(aTHX_ a,b)
#ifdef PERL_CORE
#define save_pushi32ptr(a,b,c)	Perl_save_pushi32ptr(aTHX_ a,b,c)
#define save_pushptrptr(a,b,c)	Perl_save_pushptrptr(aTHX_ a,b,c)
#endif
#if defined(PERL_IN_SCOPE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define save_pushptri32ptr(a,b,c,d)	S_save_pushptri32ptr(aTHX_ a,b,c,d)
#endif
#endif
#ifdef PERL_CORE
#define sawparens(a)		Perl_sawparens(aTHX_ a)
#define scalar(a)		Perl_scalar(aTHX_ a)
#define scalarkids(a)		Perl_scalarkids(aTHX_ a)
#define scalarseq(a)		Perl_scalarseq(aTHX_ a)
#define scalarvoid(a)		Perl_scalarvoid(aTHX_ a)
#endif
#define scan_bin(a,b,c)		Perl_scan_bin(aTHX_ a,b,c)
#define scan_hex(a,b,c)		Perl_scan_hex(aTHX_ a,b,c)
#define scan_num(a,b)		Perl_scan_num(aTHX_ a,b)
#define scan_oct(a,b,c)		Perl_scan_oct(aTHX_ a,b,c)
#ifdef PERL_CORE
#define scope(a)		Perl_scope(aTHX_ a)
#endif
#define screaminstr(a,b,c,d,e,f)	Perl_screaminstr(aTHX_ a,b,c,d,e,f)
#if !defined(VMS)
#ifdef PERL_CORE
#define setenv_getix(a)		Perl_setenv_getix(aTHX_ a)
#endif
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define setdefout(a)		Perl_setdefout(aTHX_ a)
#endif
#define share_hek(a,b,c)	Perl_share_hek(aTHX_ a,b,c)
#if defined(HAS_SIGACTION) && defined(SA_SIGINFO)
#ifdef PERL_CORE
#define sighandler		Perl_sighandler
#endif
#define csighandler		Perl_csighandler
#else
#ifdef PERL_CORE
#define sighandler		Perl_sighandler
#endif
#define csighandler		Perl_csighandler
#endif
#define stack_grow(a,b,c)	Perl_stack_grow(aTHX_ a,b,c)
#define start_subparse(a,b)	Perl_start_subparse(aTHX_ a,b)
#ifdef PERL_CORE
#define sub_crush_depth(a)	Perl_sub_crush_depth(aTHX_ a)
#endif
#define sv_2bool(a)		Perl_sv_2bool(aTHX_ a)
#define sv_2cv(a,b,c,d)		Perl_sv_2cv(aTHX_ a,b,c,d)
#define sv_2io(a)		Perl_sv_2io(aTHX_ a)
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define glob_2number(a)		S_glob_2number(aTHX_ a)
#define glob_2pv(a,b)		S_glob_2pv(aTHX_ a,b)
#endif
#endif
#define sv_2iv_flags(a,b)	Perl_sv_2iv_flags(aTHX_ a,b)
#define sv_2mortal(a)		Perl_sv_2mortal(aTHX_ a)
#define sv_2nv(a)		Perl_sv_2nv(aTHX_ a)
#ifdef PERL_CORE
#define sv_2num(a)		Perl_sv_2num(aTHX_ a)
#endif
#define sv_2pv_flags(a,b,c)	Perl_sv_2pv_flags(aTHX_ a,b,c)
#define sv_2pvutf8(a,b)		Perl_sv_2pvutf8(aTHX_ a,b)
#define sv_2pvbyte(a,b)		Perl_sv_2pvbyte(aTHX_ a,b)
#define sv_pvn_nomg(a,b)	Perl_sv_pvn_nomg(aTHX_ a,b)
#define sv_2uv_flags(a,b)	Perl_sv_2uv_flags(aTHX_ a,b)
#define sv_iv(a)		Perl_sv_iv(aTHX_ a)
#define sv_uv(a)		Perl_sv_uv(aTHX_ a)
#define sv_nv(a)		Perl_sv_nv(aTHX_ a)
#define sv_pvn(a,b)		Perl_sv_pvn(aTHX_ a,b)
#define sv_pvutf8n(a,b)		Perl_sv_pvutf8n(aTHX_ a,b)
#define sv_pvbyten(a,b)		Perl_sv_pvbyten(aTHX_ a,b)
#define sv_true(a)		Perl_sv_true(aTHX_ a)
#ifdef PERL_CORE
#define sv_add_arena(a,b,c)	Perl_sv_add_arena(aTHX_ a,b,c)
#endif
#define sv_backoff(a)		Perl_sv_backoff(aTHX_ a)
#define sv_bless(a,b)		Perl_sv_bless(aTHX_ a,b)
#define sv_vcatpvf(a,b,c)	Perl_sv_vcatpvf(aTHX_ a,b,c)
#define sv_catpv(a,b)		Perl_sv_catpv(aTHX_ a,b)
#define sv_chop(a,b)		Perl_sv_chop(aTHX_ a,b)
#ifdef PERL_CORE
#define sv_clean_all()		Perl_sv_clean_all(aTHX)
#define sv_clean_objs()		Perl_sv_clean_objs(aTHX)
#endif
#define sv_clear(a)		Perl_sv_clear(aTHX_ a)
#define sv_cmp(a,b)		Perl_sv_cmp(aTHX_ a,b)
#define sv_cmp_locale(a,b)	Perl_sv_cmp_locale(aTHX_ a,b)
#if defined(USE_LOCALE_COLLATE)
#define sv_collxfrm(a,b)	Perl_sv_collxfrm(aTHX_ a,b)
#endif
#define sv_compile_2op(a,b,c,d)	Perl_sv_compile_2op(aTHX_ a,b,c,d)
#define getcwd_sv(a)		Perl_getcwd_sv(aTHX_ a)
#define sv_dec(a)		Perl_sv_dec(aTHX_ a)
#define sv_dump(a)		Perl_sv_dump(aTHX_ a)
#define sv_derived_from(a,b)	Perl_sv_derived_from(aTHX_ a,b)
#define sv_does(a,b)		Perl_sv_does(aTHX_ a,b)
#define sv_eq(a,b)		Perl_sv_eq(aTHX_ a,b)
#define sv_free(a)		Perl_sv_free(aTHX_ a)
#ifdef PERL_CORE
#define sv_free_arenas()	Perl_sv_free_arenas(aTHX)
#endif
#define sv_gets(a,b,c)		Perl_sv_gets(aTHX_ a,b,c)
#define sv_grow(a,b)		Perl_sv_grow(aTHX_ a,b)
#define sv_inc(a)		Perl_sv_inc(aTHX_ a)
#define sv_insert_flags(a,b,c,d,e,f)	Perl_sv_insert_flags(aTHX_ a,b,c,d,e,f)
#define sv_isa(a,b)		Perl_sv_isa(aTHX_ a,b)
#define sv_isobject(a)		Perl_sv_isobject(aTHX_ a)
#define sv_len(a)		Perl_sv_len(aTHX_ a)
#define sv_len_utf8(a)		Perl_sv_len_utf8(aTHX_ a)
#define sv_magic(a,b,c,d,e)	Perl_sv_magic(aTHX_ a,b,c,d,e)
#define sv_magicext(a,b,c,d,e,f)	Perl_sv_magicext(aTHX_ a,b,c,d,e,f)
#define sv_mortalcopy(a)	Perl_sv_mortalcopy(aTHX_ a)
#define sv_newmortal()		Perl_sv_newmortal(aTHX)
#define sv_newref(a)		Perl_sv_newref(aTHX_ a)
#define sv_peek(a)		Perl_sv_peek(aTHX_ a)
#define sv_pos_u2b(a,b,c)	Perl_sv_pos_u2b(aTHX_ a,b,c)
#define sv_pos_b2u(a,b)		Perl_sv_pos_b2u(aTHX_ a,b)
#define sv_pvutf8n_force(a,b)	Perl_sv_pvutf8n_force(aTHX_ a,b)
#define sv_pvbyten_force(a,b)	Perl_sv_pvbyten_force(aTHX_ a,b)
#define sv_recode_to_utf8(a,b)	Perl_sv_recode_to_utf8(aTHX_ a,b)
#define sv_cat_decode(a,b,c,d,e,f)	Perl_sv_cat_decode(aTHX_ a,b,c,d,e,f)
#define sv_reftype(a,b)		Perl_sv_reftype(aTHX_ a,b)
#define sv_replace(a,b)		Perl_sv_replace(aTHX_ a,b)
#define sv_report_used()	Perl_sv_report_used(aTHX)
#define sv_reset(a,b)		Perl_sv_reset(aTHX_ a,b)
#define sv_vsetpvf(a,b,c)	Perl_sv_vsetpvf(aTHX_ a,b,c)
#define sv_setiv(a,b)		Perl_sv_setiv(aTHX_ a,b)
#define sv_setpviv(a,b)		Perl_sv_setpviv(aTHX_ a,b)
#define sv_setuv(a,b)		Perl_sv_setuv(aTHX_ a,b)
#define sv_setnv(a,b)		Perl_sv_setnv(aTHX_ a,b)
#define sv_setref_iv(a,b,c)	Perl_sv_setref_iv(aTHX_ a,b,c)
#define sv_setref_uv(a,b,c)	Perl_sv_setref_uv(aTHX_ a,b,c)
#define sv_setref_nv(a,b,c)	Perl_sv_setref_nv(aTHX_ a,b,c)
#define sv_setref_pv(a,b,c)	Perl_sv_setref_pv(aTHX_ a,b,c)
#define sv_setref_pvn(a,b,c,d)	Perl_sv_setref_pvn(aTHX_ a,b,c,d)
#define sv_setpv(a,b)		Perl_sv_setpv(aTHX_ a,b)
#define sv_setpvn(a,b,c)	Perl_sv_setpvn(aTHX_ a,b,c)
#define sv_tainted(a)		Perl_sv_tainted(aTHX_ a)
#define sv_unmagic(a,b)		Perl_sv_unmagic(aTHX_ a,b)
#define sv_unref_flags(a,b)	Perl_sv_unref_flags(aTHX_ a,b)
#define sv_untaint(a)		Perl_sv_untaint(aTHX_ a)
#define sv_upgrade(a,b)		Perl_sv_upgrade(aTHX_ a,b)
#define sv_usepvn_flags(a,b,c,d)	Perl_sv_usepvn_flags(aTHX_ a,b,c,d)
#define sv_vcatpvfn(a,b,c,d,e,f,g)	Perl_sv_vcatpvfn(aTHX_ a,b,c,d,e,f,g)
#define sv_vsetpvfn(a,b,c,d,e,f,g)	Perl_sv_vsetpvfn(aTHX_ a,b,c,d,e,f,g)
#define str_to_version(a)	Perl_str_to_version(aTHX_ a)
#define swash_init(a,b,c,d,e)	Perl_swash_init(aTHX_ a,b,c,d,e)
#define swash_fetch(a,b,c)	Perl_swash_fetch(aTHX_ a,b,c)
#define taint_env()		Perl_taint_env(aTHX)
#define taint_proper(a,b)	Perl_taint_proper(aTHX_ a,b)
#define to_utf8_case(a,b,c,d,e,f)	Perl_to_utf8_case(aTHX_ a,b,c,d,e,f)
#define to_utf8_lower(a,b,c)	Perl_to_utf8_lower(aTHX_ a,b,c)
#define to_utf8_upper(a,b,c)	Perl_to_utf8_upper(aTHX_ a,b,c)
#define to_utf8_title(a,b,c)	Perl_to_utf8_title(aTHX_ a,b,c)
#define to_utf8_fold(a,b,c)	Perl_to_utf8_fold(aTHX_ a,b,c)
#if defined(UNLINK_ALL_VERSIONS)
#define unlnk(a)		Perl_unlnk(aTHX_ a)
#endif
#define unpack_str(a,b,c,d,e,f,g,h)	Perl_unpack_str(aTHX_ a,b,c,d,e,f,g,h)
#define unpackstring(a,b,c,d,e)	Perl_unpackstring(aTHX_ a,b,c,d,e)
#define unsharepvn(a,b,c)	Perl_unsharepvn(aTHX_ a,b,c)
#ifdef PERL_CORE
#define unshare_hek(a)		Perl_unshare_hek(aTHX_ a)
#endif
#ifdef PERL_MAD
#ifdef PERL_CORE
#define utilize(a,b,c,d,e)	Perl_utilize(aTHX_ a,b,c,d,e)
#endif
#else
#ifdef PERL_CORE
#define utilize(a,b,c,d,e)	Perl_utilize(aTHX_ a,b,c,d,e)
#endif
#endif
#define utf16_to_utf8(a,b,c,d)	Perl_utf16_to_utf8(aTHX_ a,b,c,d)
#define utf16_to_utf8_reversed(a,b,c,d)	Perl_utf16_to_utf8_reversed(aTHX_ a,b,c,d)
#define utf8_length(a,b)	Perl_utf8_length(aTHX_ a,b)
#define utf8_distance(a,b)	Perl_utf8_distance(aTHX_ a,b)
#define utf8_hop(a,b)		Perl_utf8_hop(aTHX_ a,b)
#define utf8_to_bytes(a,b)	Perl_utf8_to_bytes(aTHX_ a,b)
#define bytes_from_utf8(a,b,c)	Perl_bytes_from_utf8(aTHX_ a,b,c)
#define bytes_to_utf8(a,b)	Perl_bytes_to_utf8(aTHX_ a,b)
#define utf8_to_uvchr(a,b)	Perl_utf8_to_uvchr(aTHX_ a,b)
#define utf8_to_uvuni(a,b)	Perl_utf8_to_uvuni(aTHX_ a,b)
#ifdef EBCDIC
#define utf8n_to_uvchr(a,b,c,d)	Perl_utf8n_to_uvchr(aTHX_ a,b,c,d)
#else
#endif
#define utf8n_to_uvuni(a,b,c,d)	Perl_utf8n_to_uvuni(aTHX_ a,b,c,d)
#ifdef EBCDIC
#define uvchr_to_utf8(a,b)	Perl_uvchr_to_utf8(aTHX_ a,b)
#else
#endif
#define uvchr_to_utf8_flags(a,b,c)	Perl_uvchr_to_utf8_flags(aTHX_ a,b,c)
#define uvuni_to_utf8_flags(a,b,c)	Perl_uvuni_to_utf8_flags(aTHX_ a,b,c)
#define pv_uni_display(a,b,c,d,e)	Perl_pv_uni_display(aTHX_ a,b,c,d,e)
#define sv_uni_display(a,b,c,d)	Perl_sv_uni_display(aTHX_ a,b,c,d)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define vivify_defelem(a)	Perl_vivify_defelem(aTHX_ a)
#endif
#ifdef PERL_CORE
#define vivify_ref(a,b)		Perl_vivify_ref(aTHX_ a,b)
#define wait4pid(a,b,c)		Perl_wait4pid(aTHX_ a,b,c)
#define parse_unicode_opts(a)	Perl_parse_unicode_opts(aTHX_ a)
#endif
#define seed()			Perl_seed(aTHX)
#ifdef PERL_CORE
#define get_hash_seed()		Perl_get_hash_seed(aTHX)
#define report_evil_fh(a,b,c)	Perl_report_evil_fh(aTHX_ a,b,c)
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define report_uninit(a)	Perl_report_uninit(aTHX_ a)
#endif
#define vwarn(a,b)		Perl_vwarn(aTHX_ a,b)
#define vwarner(a,b,c)		Perl_vwarner(aTHX_ a,b,c)
#ifdef PERL_CORE
#define watch(a)		Perl_watch(aTHX_ a)
#endif
#define whichsig(a)		Perl_whichsig(aTHX_ a)
#ifdef PERL_CORE
#define write_to_stderr(a,b)	Perl_write_to_stderr(aTHX_ a,b)
#define yyerror(a)		Perl_yyerror(aTHX_ a)
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define yylex()			Perl_yylex(aTHX)
#endif
#ifdef PERL_CORE
#define yyparse()		Perl_yyparse(aTHX)
#define parser_free(a)		Perl_parser_free(aTHX_ a)
#define yywarn(a)		Perl_yywarn(aTHX_ a)
#endif
#if defined(MYMALLOC)
#define dump_mstats(a)		Perl_dump_mstats(aTHX_ a)
#define get_mstats(a,b,c)	Perl_get_mstats(aTHX_ a,b,c)
#endif
#define safesysmalloc		Perl_safesysmalloc
#define safesyscalloc		Perl_safesyscalloc
#define safesysrealloc		Perl_safesysrealloc
#define safesysfree		Perl_safesysfree
#if defined(PERL_GLOBAL_STRUCT)
#define GetVars()		Perl_GetVars(aTHX)
#define init_global_struct()	Perl_init_global_struct(aTHX)
#define free_global_struct(a)	Perl_free_global_struct(aTHX_ a)
#endif
#define runops_standard()	Perl_runops_standard(aTHX)
#define runops_debug()		Perl_runops_debug(aTHX)
#define sv_vcatpvf_mg(a,b,c)	Perl_sv_vcatpvf_mg(aTHX_ a,b,c)
#define sv_catpv_mg(a,b)	Perl_sv_catpv_mg(aTHX_ a,b)
#define sv_vsetpvf_mg(a,b,c)	Perl_sv_vsetpvf_mg(aTHX_ a,b,c)
#define sv_setiv_mg(a,b)	Perl_sv_setiv_mg(aTHX_ a,b)
#define sv_setpviv_mg(a,b)	Perl_sv_setpviv_mg(aTHX_ a,b)
#define sv_setuv_mg(a,b)	Perl_sv_setuv_mg(aTHX_ a,b)
#define sv_setnv_mg(a,b)	Perl_sv_setnv_mg(aTHX_ a,b)
#define sv_setpv_mg(a,b)	Perl_sv_setpv_mg(aTHX_ a,b)
#define sv_setpvn_mg(a,b,c)	Perl_sv_setpvn_mg(aTHX_ a,b,c)
#define sv_setsv_mg(a,b)	Perl_sv_setsv_mg(aTHX_ a,b)
#define get_vtbl(a)		Perl_get_vtbl(aTHX_ a)
#define pv_display(a,b,c,d,e)	Perl_pv_display(aTHX_ a,b,c,d,e)
#define pv_escape(a,b,c,d,e,f)	Perl_pv_escape(aTHX_ a,b,c,d,e,f)
#define pv_pretty(a,b,c,d,e,f,g)	Perl_pv_pretty(aTHX_ a,b,c,d,e,f,g)
#define dump_vindent(a,b,c,d)	Perl_dump_vindent(aTHX_ a,b,c,d)
#define do_gv_dump(a,b,c,d)	Perl_do_gv_dump(aTHX_ a,b,c,d)
#define do_gvgv_dump(a,b,c,d)	Perl_do_gvgv_dump(aTHX_ a,b,c,d)
#define do_hv_dump(a,b,c,d)	Perl_do_hv_dump(aTHX_ a,b,c,d)
#define do_magic_dump(a,b,c,d,e,f,g)	Perl_do_magic_dump(aTHX_ a,b,c,d,e,f,g)
#define do_op_dump(a,b,c)	Perl_do_op_dump(aTHX_ a,b,c)
#define do_pmop_dump(a,b,c)	Perl_do_pmop_dump(aTHX_ a,b,c)
#define do_sv_dump(a,b,c,d,e,f,g)	Perl_do_sv_dump(aTHX_ a,b,c,d,e,f,g)
#define magic_dump(a)		Perl_magic_dump(aTHX_ a)
#define reginitcolors()		Perl_reginitcolors(aTHX)
#define sv_utf8_downgrade(a,b)	Perl_sv_utf8_downgrade(aTHX_ a,b)
#define sv_utf8_encode(a)	Perl_sv_utf8_encode(aTHX_ a)
#define sv_utf8_decode(a)	Perl_sv_utf8_decode(aTHX_ a)
#define sv_force_normal_flags(a,b)	Perl_sv_force_normal_flags(aTHX_ a,b)
#define tmps_grow(a)		Perl_tmps_grow(aTHX_ a)
#define sv_rvweaken(a)		Perl_sv_rvweaken(aTHX_ a)
#ifdef PERL_CORE
#define magic_killbackrefs(a,b)	Perl_magic_killbackrefs(aTHX_ a,b)
#endif
#define newANONATTRSUB(a,b,c,d)	Perl_newANONATTRSUB(aTHX_ a,b,c,d)
#define newATTRSUB(a,b,c,d,e)	Perl_newATTRSUB(aTHX_ a,b,c,d,e)
#ifdef PERL_MAD
#define newMYSUB(a,b,c,d,e)	Perl_newMYSUB(aTHX_ a,b,c,d,e)
#else
#define newMYSUB(a,b,c,d,e)	Perl_newMYSUB(aTHX_ a,b,c,d,e)
#endif
#ifdef PERL_CORE
#define my_attrs(a,b)		Perl_my_attrs(aTHX_ a,b)
#define boot_core_xsutils()	Perl_boot_core_xsutils(aTHX)
#endif
#if defined(USE_ITHREADS)
#define cx_dup(a,b,c,d)		Perl_cx_dup(aTHX_ a,b,c,d)
#define si_dup(a,b)		Perl_si_dup(aTHX_ a,b)
#define ss_dup(a,b)		Perl_ss_dup(aTHX_ a,b)
#define any_dup(a,b)		Perl_any_dup(aTHX_ a,b)
#define he_dup(a,b,c)		Perl_he_dup(aTHX_ a,b,c)
#define hek_dup(a,b)		Perl_hek_dup(aTHX_ a,b)
#define re_dup(a,b)		Perl_re_dup(aTHX_ a,b)
#define fp_dup(a,b,c)		Perl_fp_dup(aTHX_ a,b,c)
#define dirp_dup(a)		Perl_dirp_dup(aTHX_ a)
#define gp_dup(a,b)		Perl_gp_dup(aTHX_ a,b)
#define mg_dup(a,b)		Perl_mg_dup(aTHX_ a,b)
#define sv_dup(a,b)		Perl_sv_dup(aTHX_ a,b)
#define rvpv_dup(a,b,c)		Perl_rvpv_dup(aTHX_ a,b,c)
#define parser_dup(a,b)		Perl_parser_dup(aTHX_ a,b)
#endif
#define ptr_table_new()		Perl_ptr_table_new(aTHX)
#define ptr_table_fetch(a,b)	Perl_ptr_table_fetch(aTHX_ a,b)
#define ptr_table_store(a,b,c)	Perl_ptr_table_store(aTHX_ a,b,c)
#define ptr_table_split(a)	Perl_ptr_table_split(aTHX_ a)
#define ptr_table_clear(a)	Perl_ptr_table_clear(aTHX_ a)
#define ptr_table_free(a)	Perl_ptr_table_free(aTHX_ a)
#if defined(USE_ITHREADS)
#  if defined(HAVE_INTERP_INTERN)
#define sys_intern_dup(a,b)	Perl_sys_intern_dup(aTHX_ a,b)
#  endif
#endif
#if defined(HAVE_INTERP_INTERN)
#define sys_intern_clear()	Perl_sys_intern_clear(aTHX)
#define sys_intern_init()	Perl_sys_intern_init(aTHX)
#endif
#define custom_op_name(a)	Perl_custom_op_name(aTHX_ a)
#define custom_op_desc(a)	Perl_custom_op_desc(aTHX_ a)
#define sv_nosharing(a)		Perl_sv_nosharing(aTHX_ a)
#define sv_destroyable(a)	Perl_sv_destroyable(aTHX_ a)
#ifdef NO_MATHOMS
#else
#define sv_nounlocking(a)	Perl_sv_nounlocking(aTHX_ a)
#endif
#define nothreadhook()		Perl_nothreadhook(aTHX)
#if defined(PERL_IN_DOOP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define do_trans_simple(a)	S_do_trans_simple(aTHX_ a)
#define do_trans_count(a)	S_do_trans_count(aTHX_ a)
#define do_trans_complex(a)	S_do_trans_complex(aTHX_ a)
#define do_trans_simple_utf8(a)	S_do_trans_simple_utf8(aTHX_ a)
#define do_trans_count_utf8(a)	S_do_trans_count_utf8(aTHX_ a)
#define do_trans_complex_utf8(a)	S_do_trans_complex_utf8(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_GV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define gv_init_sv(a,b)		S_gv_init_sv(aTHX_ a,b)
#define gv_get_super_pkg(a,b)	S_gv_get_super_pkg(aTHX_ a,b)
#define require_tie_mod(a,b,c,d,e)	S_require_tie_mod(aTHX_ a,b,c,d,e)
#endif
#endif
#ifdef PERL_CORE
#endif
#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define hsplit(a)		S_hsplit(aTHX_ a)
#define hfreeentries(a)		S_hfreeentries(aTHX_ a)
#define new_he()		S_new_he(aTHX)
#define save_hek_flags		S_save_hek_flags
#define hv_magic_check		S_hv_magic_check
#define unshare_hek_or_pvn(a,b,c,d)	S_unshare_hek_or_pvn(aTHX_ a,b,c,d)
#define share_hek_flags(a,b,c,d)	S_share_hek_flags(aTHX_ a,b,c,d)
#define hv_notallowed(a,b,c,d)	S_hv_notallowed(aTHX_ a,b,c,d)
#define hv_auxinit		S_hv_auxinit
#define hv_delete_common(a,b,c,d,e,f,g)	S_hv_delete_common(aTHX_ a,b,c,d,e,f,g)
#define clear_placeholders(a,b)	S_clear_placeholders(aTHX_ a,b)
#define refcounted_he_value(a)	S_refcounted_he_value(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_MG_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define save_magic(a,b)		S_save_magic(aTHX_ a,b)
#define magic_methpack(a,b,c)	S_magic_methpack(aTHX_ a,b,c)
#define magic_methcall(a,b,c,d,e,f)	S_magic_methcall(aTHX_ a,b,c,d,e,f)
#define restore_magic(a)	S_restore_magic(aTHX_ a)
#define unwind_handler_stack(a)	S_unwind_handler_stack(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define ck_anoncode(a)		Perl_ck_anoncode(aTHX_ a)
#define ck_bitop(a)		Perl_ck_bitop(aTHX_ a)
#define ck_concat(a)		Perl_ck_concat(aTHX_ a)
#define ck_defined(a)		Perl_ck_defined(aTHX_ a)
#define ck_delete(a)		Perl_ck_delete(aTHX_ a)
#define ck_die(a)		Perl_ck_die(aTHX_ a)
#define ck_eof(a)		Perl_ck_eof(aTHX_ a)
#define ck_eval(a)		Perl_ck_eval(aTHX_ a)
#define ck_exec(a)		Perl_ck_exec(aTHX_ a)
#define ck_exists(a)		Perl_ck_exists(aTHX_ a)
#define ck_exit(a)		Perl_ck_exit(aTHX_ a)
#define ck_ftst(a)		Perl_ck_ftst(aTHX_ a)
#define ck_fun(a)		Perl_ck_fun(aTHX_ a)
#define ck_glob(a)		Perl_ck_glob(aTHX_ a)
#define ck_grep(a)		Perl_ck_grep(aTHX_ a)
#define ck_index(a)		Perl_ck_index(aTHX_ a)
#define ck_join(a)		Perl_ck_join(aTHX_ a)
#define ck_lengthconst(a)	Perl_ck_lengthconst(aTHX_ a)
#define ck_lfun(a)		Perl_ck_lfun(aTHX_ a)
#define ck_listiob(a)		Perl_ck_listiob(aTHX_ a)
#define ck_match(a)		Perl_ck_match(aTHX_ a)
#define ck_method(a)		Perl_ck_method(aTHX_ a)
#define ck_null(a)		Perl_ck_null(aTHX_ a)
#define ck_open(a)		Perl_ck_open(aTHX_ a)
#define ck_readline(a)		Perl_ck_readline(aTHX_ a)
#define ck_repeat(a)		Perl_ck_repeat(aTHX_ a)
#define ck_require(a)		Perl_ck_require(aTHX_ a)
#define ck_return(a)		Perl_ck_return(aTHX_ a)
#define ck_rfun(a)		Perl_ck_rfun(aTHX_ a)
#define ck_rvconst(a)		Perl_ck_rvconst(aTHX_ a)
#define ck_sassign(a)		Perl_ck_sassign(aTHX_ a)
#define ck_select(a)		Perl_ck_select(aTHX_ a)
#define ck_shift(a)		Perl_ck_shift(aTHX_ a)
#define ck_sort(a)		Perl_ck_sort(aTHX_ a)
#define ck_spair(a)		Perl_ck_spair(aTHX_ a)
#define ck_split(a)		Perl_ck_split(aTHX_ a)
#define ck_subr(a)		Perl_ck_subr(aTHX_ a)
#define ck_substr(a)		Perl_ck_substr(aTHX_ a)
#define ck_svconst(a)		Perl_ck_svconst(aTHX_ a)
#define ck_trunc(a)		Perl_ck_trunc(aTHX_ a)
#define ck_unpack(a)		Perl_ck_unpack(aTHX_ a)
#define is_handle_constructor	S_is_handle_constructor
#define is_list_assignment(a)	S_is_list_assignment(aTHX_ a)
#endif
#  ifdef USE_ITHREADS
#ifdef PERL_CORE
#endif
#  else
#ifdef PERL_CORE
#endif
#  endif
#ifdef PERL_CORE
#define find_and_forget_pmops(a)	S_find_and_forget_pmops(aTHX_ a)
#define cop_free(a)		S_cop_free(aTHX_ a)
#define modkids(a,b)		S_modkids(aTHX_ a,b)
#define scalarboolean(a)	S_scalarboolean(aTHX_ a)
#define newDEFSVOP()		S_newDEFSVOP(aTHX)
#define search_const(a)		S_search_const(aTHX_ a)
#define new_logop(a,b,c,d)	S_new_logop(aTHX_ a,b,c,d)
#define simplify_sort(a)	S_simplify_sort(aTHX_ a)
#define gv_ename(a)		S_gv_ename(aTHX_ a)
#define scalar_mod_type		S_scalar_mod_type
#define my_kid(a,b,c)		S_my_kid(aTHX_ a,b,c)
#define dup_attrlist(a)		S_dup_attrlist(aTHX_ a)
#define apply_attrs(a,b,c,d)	S_apply_attrs(aTHX_ a,b,c,d)
#define apply_attrs_my(a,b,c,d)	S_apply_attrs_my(aTHX_ a,b,c,d)
#define bad_type(a,b,c,d)	S_bad_type(aTHX_ a,b,c,d)
#define no_bareword_allowed(a)	S_no_bareword_allowed(aTHX_ a)
#define no_fh_allowed(a)	S_no_fh_allowed(aTHX_ a)
#define too_few_arguments(a,b)	S_too_few_arguments(aTHX_ a,b)
#define too_many_arguments(a,b)	S_too_many_arguments(aTHX_ a,b)
#define looks_like_bool(a)	S_looks_like_bool(aTHX_ a)
#define newGIVWHENOP(a,b,c,d,e)	S_newGIVWHENOP(aTHX_ a,b,c,d,e)
#define ref_array_or_hash(a)	S_ref_array_or_hash(aTHX_ a)
#define process_special_blocks(a,b,c)	S_process_special_blocks(aTHX_ a,b,c)
#endif
#endif
#if defined(PL_OP_SLAB_ALLOC)
#define Slab_Alloc(a)		Perl_Slab_Alloc(aTHX_ a)
#define Slab_Free(a)		Perl_Slab_Free(aTHX_ a)
#  if defined(PERL_DEBUG_READONLY_OPS)
#ifdef PERL_CORE
#endif
#    if defined(PERL_IN_OP_C)
#ifdef PERL_CORE
#define Slab_to_rw(a)		S_Slab_to_rw(aTHX_ a)
#endif
#    endif
#  endif
#endif
#if defined(PERL_IN_PERL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define find_beginning(a,b)	S_find_beginning(aTHX_ a,b)
#define forbid_setid(a,b)	S_forbid_setid(aTHX_ a,b)
#define incpush(a,b,c,d,e)	S_incpush(aTHX_ a,b,c,d,e)
#define init_interp()		S_init_interp(aTHX)
#define init_ids()		S_init_ids(aTHX)
#define init_main_stash()	S_init_main_stash(aTHX)
#define init_perllib()		S_init_perllib(aTHX)
#define init_postdump_symbols(a,b,c)	S_init_postdump_symbols(aTHX_ a,b,c)
#define init_predump_symbols()	S_init_predump_symbols(aTHX)
#define my_exit_jump()		S_my_exit_jump(aTHX)
#define nuke_stacks()		S_nuke_stacks(aTHX)
#define open_script(a,b,c,d,e)	S_open_script(aTHX_ a,b,c,d,e)
#define usage(a)		S_usage(aTHX_ a)
#endif
#ifdef DOSUID
#  ifdef IAMSUID
#ifdef PERL_CORE
#endif
#  else
#ifdef PERL_CORE
#endif
#  endif
#else
#  ifndef SETUID_SCRIPTS_ARE_SECURE_NOW
#ifdef PERL_CORE
#endif
#  endif
#endif
#  if defined(IAMSUID)
#ifdef PERL_CORE
#define fd_on_nosuid_fs(a)	S_fd_on_nosuid_fs(aTHX_ a)
#endif
#  endif
#ifdef PERL_CORE
#define parse_body(a,b)		S_parse_body(aTHX_ a,b)
#define run_body(a)		S_run_body(aTHX_ a)
#define incpush_if_exists(a)	S_incpush_if_exists(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_PP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define refto(a)		S_refto(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_PP_C) || defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#endif
#endif
#if defined(PERL_IN_PP_PACK_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define unpack_rec(a,b,c,d,e)	S_unpack_rec(aTHX_ a,b,c,d,e)
#define pack_rec(a,b,c,d)	S_pack_rec(aTHX_ a,b,c,d)
#define mul128(a,b)		S_mul128(aTHX_ a,b)
#define measure_struct(a)	S_measure_struct(aTHX_ a)
#define next_symbol(a)		S_next_symbol(aTHX_ a)
#define is_an_int(a,b)		S_is_an_int(aTHX_ a,b)
#define div128(a,b)		S_div128(aTHX_ a,b)
#define group_end(a,b,c)	S_group_end(aTHX_ a,b,c)
#define get_num(a,b)		S_get_num(aTHX_ a,b)
#define need_utf8		S_need_utf8
#define first_symbol		S_first_symbol
#define sv_exp_grow(a,b)	S_sv_exp_grow(aTHX_ a,b)
#define bytes_to_uni		S_bytes_to_uni
#endif
#endif
#if defined(PERL_IN_PP_CTL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define docatch(a)		S_docatch(aTHX_ a)
#define dofindlabel(a,b,c,d)	S_dofindlabel(aTHX_ a,b,c,d)
#define doparseform(a)		S_doparseform(aTHX_ a)
#define num_overflow		S_num_overflow
#define dopoptoeval(a)		S_dopoptoeval(aTHX_ a)
#define dopoptogiven(a)		S_dopoptogiven(aTHX_ a)
#define dopoptolabel(a)		S_dopoptolabel(aTHX_ a)
#define dopoptoloop(a)		S_dopoptoloop(aTHX_ a)
#define dopoptosub_at(a,b)	S_dopoptosub_at(aTHX_ a,b)
#define dopoptowhen(a)		S_dopoptowhen(aTHX_ a)
#define save_lines(a,b)		S_save_lines(aTHX_ a,b)
#define doeval(a,b,c,d)		S_doeval(aTHX_ a,b,c,d)
#define check_type_and_open(a)	S_check_type_and_open(aTHX_ a)
#endif
#ifndef PERL_DISABLE_PMC
#ifdef PERL_CORE
#define doopen_pm(a,b)		S_doopen_pm(aTHX_ a,b)
#endif
#endif
#ifdef PERL_CORE
#define path_is_absolute	S_path_is_absolute
#define run_user_filter(a,b,c)	S_run_user_filter(aTHX_ a,b,c)
#define make_matcher(a)		S_make_matcher(aTHX_ a)
#define matcher_matches_sv(a,b)	S_matcher_matches_sv(aTHX_ a,b)
#define destroy_matcher(a)	S_destroy_matcher(aTHX_ a)
#define do_smartmatch(a,b)	S_do_smartmatch(aTHX_ a,b)
#endif
#endif
#if defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define do_oddball(a,b,c)	S_do_oddball(aTHX_ a,b,c)
#define method_common(a,b)	S_method_common(aTHX_ a,b)
#endif
#endif
#if defined(PERL_IN_PP_SORT_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define sv_ncmp(a,b)		S_sv_ncmp(aTHX_ a,b)
#define sv_i_ncmp(a,b)		S_sv_i_ncmp(aTHX_ a,b)
#define amagic_ncmp(a,b)	S_amagic_ncmp(aTHX_ a,b)
#define amagic_i_ncmp(a,b)	S_amagic_i_ncmp(aTHX_ a,b)
#define amagic_cmp(a,b)		S_amagic_cmp(aTHX_ a,b)
#define amagic_cmp_locale(a,b)	S_amagic_cmp_locale(aTHX_ a,b)
#define sortcv(a,b)		S_sortcv(aTHX_ a,b)
#define sortcv_xsub(a,b)	S_sortcv_xsub(aTHX_ a,b)
#define sortcv_stacked(a,b)	S_sortcv_stacked(aTHX_ a,b)
#define qsortsvu(a,b,c)		S_qsortsvu(aTHX_ a,b,c)
#endif
#endif
#if defined(PERL_IN_PP_SYS_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define doform(a,b,c)		S_doform(aTHX_ a,b,c)
#endif
#  if !defined(HAS_MKDIR) || !defined(HAS_RMDIR)
#ifdef PERL_CORE
#define dooneliner(a,b)		S_dooneliner(aTHX_ a,b)
#endif
#  endif
#ifdef PERL_CORE
#define space_join_names_mortal(a)	S_space_join_names_mortal(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_DECL_PROT)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reg(a,b,c,d)		S_reg(aTHX_ a,b,c,d)
#define reganode(a,b,c)		S_reganode(aTHX_ a,b,c)
#define regatom(a,b,c)		S_regatom(aTHX_ a,b,c)
#define regbranch(a,b,c,d)	S_regbranch(aTHX_ a,b,c,d)
#define reguni(a,b,c)		S_reguni(aTHX_ a,b,c)
#define regclass(a,b)		S_regclass(aTHX_ a,b)
#define regcurly		S_regcurly
#define reg_node(a,b)		S_reg_node(aTHX_ a,b)
#define reg_recode(a,b)		S_reg_recode(aTHX_ a,b)
#define regpiece(a,b,c)		S_regpiece(aTHX_ a,b,c)
#define reg_namedseq(a,b)	S_reg_namedseq(aTHX_ a,b)
#define reginsert(a,b,c,d)	S_reginsert(aTHX_ a,b,c,d)
#define regtail(a,b,c,d)	S_regtail(aTHX_ a,b,c,d)
#define reg_scan_name(a,b)	S_reg_scan_name(aTHX_ a,b)
#define join_exact(a,b,c,d,e,f)	S_join_exact(aTHX_ a,b,c,d,e,f)
#define regwhite		S_regwhite
#define nextchar(a)		S_nextchar(aTHX_ a)
#define reg_skipcomment(a)	S_reg_skipcomment(aTHX_ a)
#define scan_commit(a,b,c,d)	S_scan_commit(aTHX_ a,b,c,d)
#define cl_anything		S_cl_anything
#define cl_is_anything		S_cl_is_anything
#define cl_init			S_cl_init
#define cl_init_zero		S_cl_init_zero
#define cl_and			S_cl_and
#define cl_or			S_cl_or
#define study_chunk(a,b,c,d,e,f,g,h,i,j,k)	S_study_chunk(aTHX_ a,b,c,d,e,f,g,h,i,j,k)
#define add_data		S_add_data
#endif
#ifdef PERL_CORE
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regpposixcc(a,b)	S_regpposixcc(aTHX_ a,b)
#define checkposixcc(a)		S_checkposixcc(aTHX_ a)
#define make_trie(a,b,c,d,e,f,g,h)	S_make_trie(aTHX_ a,b,c,d,e,f,g,h)
#define make_trie_failtable(a,b,c,d)	S_make_trie_failtable(aTHX_ a,b,c,d)
#endif
#  ifdef DEBUGGING
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regdump_extflags(a,b)	S_regdump_extflags(aTHX_ a,b)
#define dumpuntil(a,b,c,d,e,f,g,h)	S_dumpuntil(aTHX_ a,b,c,d,e,f,g,h)
#define put_byte(a,b)		S_put_byte(aTHX_ a,b)
#define dump_trie(a,b,c,d)	S_dump_trie(aTHX_ a,b,c,d)
#define dump_trie_interim_list(a,b,c,d,e)	S_dump_trie_interim_list(aTHX_ a,b,c,d,e)
#define dump_trie_interim_table(a,b,c,d,e)	S_dump_trie_interim_table(aTHX_ a,b,c,d,e)
#define regtail_study(a,b,c,d)	S_regtail_study(aTHX_ a,b,c,d)
#endif
#  endif
#endif
#if defined(PERL_IN_REGEXEC_C) || defined(PERL_DECL_PROT)
#if defined(PERL_CORE) || defined(PERL_EXT)
#define regmatch(a,b)		S_regmatch(aTHX_ a,b)
#define regrepeat(a,b,c,d)	S_regrepeat(aTHX_ a,b,c,d)
#define regtry(a,b)		S_regtry(aTHX_ a,b)
#define reginclass(a,b,c,d,e)	S_reginclass(aTHX_ a,b,c,d,e)
#define regcppush(a)		S_regcppush(aTHX_ a)
#define regcppop(a)		S_regcppop(aTHX_ a)
#define reghop3			S_reghop3
#endif
#ifdef XXX_dmq
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reghop4			S_reghop4
#endif
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#define reghopmaybe3		S_reghopmaybe3
#define find_byclass(a,b,c,d,e)	S_find_byclass(aTHX_ a,b,c,d,e)
#define swap_match_buff(a)	S_swap_match_buff(aTHX_ a)
#define to_utf8_substr(a)	S_to_utf8_substr(aTHX_ a)
#define to_byte_substr(a)	S_to_byte_substr(aTHX_ a)
#define reg_check_named_buff_matched(a,b)	S_reg_check_named_buff_matched(aTHX_ a,b)
#endif
#  ifdef DEBUGGING
#if defined(PERL_CORE) || defined(PERL_EXT)
#define dump_exec_pos(a,b,c,d,e,f)	S_dump_exec_pos(aTHX_ a,b,c,d,e,f)
#define debug_start_match(a,b,c,d,e)	S_debug_start_match(aTHX_ a,b,c,d,e)
#endif
#  endif
#endif
#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define deb_curcv(a)		S_deb_curcv(aTHX_ a)
#define debprof(a)		S_debprof(aTHX_ a)
#define sequence(a)		S_sequence(aTHX_ a)
#define sequence_tail(a)	S_sequence_tail(aTHX_ a)
#define sequence_num(a)		S_sequence_num(aTHX_ a)
#define pm_description(a)	S_pm_description(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_SCOPE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define save_scalar_at(a)	S_save_scalar_at(aTHX_ a)
#endif
#endif
#if defined(PERL_IN_GV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#endif
#endif
#if defined(PERL_IN_HV_C) || defined(PERL_IN_MG_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#endif
#endif
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define uiv_2buf		S_uiv_2buf
#define sv_unglob(a)		S_sv_unglob(aTHX_ a)
#define not_a_number(a)		S_not_a_number(aTHX_ a)
#define visit(a,b,c)		S_visit(aTHX_ a,b,c)
#define sv_del_backref(a,b)	S_sv_del_backref(aTHX_ a,b)
#define varname(a,b,c,d,e,f)	S_varname(aTHX_ a,b,c,d,e,f)
#endif
#  ifdef DEBUGGING
#ifdef PERL_CORE
#define del_sv(a)		S_del_sv(aTHX_ a)
#endif
#  endif
#  if !defined(NV_PRESERVES_UV)
#    ifdef DEBUGGING
#ifdef PERL_CORE
#define sv_2iuv_non_preserve(a,b)	S_sv_2iuv_non_preserve(aTHX_ a,b)
#endif
#    else
#ifdef PERL_CORE
#define sv_2iuv_non_preserve(a)	S_sv_2iuv_non_preserve(aTHX_ a)
#endif
#    endif
#  endif
#ifdef PERL_CORE
#define expect_number(a)	S_expect_number(aTHX_ a)
#endif
#ifdef PERL_CORE
#define sv_pos_u2b_forwards	S_sv_pos_u2b_forwards
#define sv_pos_u2b_midway	S_sv_pos_u2b_midway
#define sv_pos_u2b_cached(a,b,c,d,e,f,g)	S_sv_pos_u2b_cached(aTHX_ a,b,c,d,e,f,g)
#define utf8_mg_pos_cache_update(a,b,c,d,e)	S_utf8_mg_pos_cache_update(aTHX_ a,b,c,d,e)
#define sv_pos_b2u_midway(a,b,c,d)	S_sv_pos_b2u_midway(aTHX_ a,b,c,d)
#define F0convert		S_F0convert
#endif
#  if defined(PERL_OLD_COPY_ON_WRITE)
#ifdef PERL_CORE
#define sv_release_COW(a,b,c)	S_sv_release_COW(aTHX_ a,b,c)
#endif
#  endif
#ifdef PERL_CORE
#define more_sv()		S_more_sv(aTHX)
#define more_bodies(a)		S_more_bodies(aTHX_ a)
#define sv_2iuv_common(a)	S_sv_2iuv_common(aTHX_ a)
#define glob_assign_glob(a,b,c)	S_glob_assign_glob(aTHX_ a,b,c)
#define glob_assign_ref(a,b)	S_glob_assign_ref(aTHX_ a,b)
#define ptr_table_find		S_ptr_table_find
#endif
#endif
#if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define check_uni()		S_check_uni(aTHX)
#define force_next(a)		S_force_next(aTHX_ a)
#define force_version(a,b)	S_force_version(aTHX_ a,b)
#define force_word(a,b,c,d,e)	S_force_word(aTHX_ a,b,c,d,e)
#define tokeq(a)		S_tokeq(aTHX_ a)
#define readpipe_override()	S_readpipe_override(aTHX)
#define scan_const(a)		S_scan_const(aTHX_ a)
#define scan_formline(a)	S_scan_formline(aTHX_ a)
#define scan_heredoc(a)		S_scan_heredoc(aTHX_ a)
#define scan_ident(a,b,c,d,e)	S_scan_ident(aTHX_ a,b,c,d,e)
#define scan_inputsymbol(a)	S_scan_inputsymbol(aTHX_ a)
#define scan_pat(a,b)		S_scan_pat(aTHX_ a,b)
#define scan_str(a,b,c)		S_scan_str(aTHX_ a,b,c)
#define scan_subst(a)		S_scan_subst(aTHX_ a)
#define scan_trans(a)		S_scan_trans(aTHX_ a)
#define scan_word(a,b,c,d,e)	S_scan_word(aTHX_ a,b,c,d,e)
#define update_debugger_info(a,b,c)	S_update_debugger_info(aTHX_ a,b,c)
#define skipspace(a)		S_skipspace(aTHX_ a)
#define swallow_bom(a)		S_swallow_bom(aTHX_ a)
#define checkcomma(a,b,c)	S_checkcomma(aTHX_ a,b,c)
#define feature_is_enabled(a,b)	S_feature_is_enabled(aTHX_ a,b)
#define force_ident(a,b)	S_force_ident(aTHX_ a,b)
#define incline(a)		S_incline(aTHX_ a)
#define intuit_method(a,b,c)	S_intuit_method(aTHX_ a,b,c)
#define intuit_more(a)		S_intuit_more(aTHX_ a)
#define lop(a,b,c)		S_lop(aTHX_ a,b,c)
#define missingterm(a)		S_missingterm(aTHX_ a)
#define no_op(a,b)		S_no_op(aTHX_ a,b)
#define sublex_done()		S_sublex_done(aTHX)
#define sublex_push()		S_sublex_push(aTHX)
#define sublex_start()		S_sublex_start(aTHX)
#define filter_gets(a,b,c)	S_filter_gets(aTHX_ a,b,c)
#define find_in_my_stash(a,b)	S_find_in_my_stash(aTHX_ a,b)
#define tokenize_use(a,b)	S_tokenize_use(aTHX_ a,b)
#define ao(a)			S_ao(aTHX_ a)
#endif
#  if defined(PERL_CR_FILTER)
#ifdef PERL_CORE
#define cr_textfilter(a,b,c)	S_cr_textfilter(aTHX_ a,b,c)
#define strip_return(a)		S_strip_return(aTHX_ a)
#endif
#  endif
#  if defined(DEBUGGING)
#ifdef PERL_CORE
#define tokereport(a,b)		S_tokereport(aTHX_ a,b)
#define printbuf(a,b)		S_printbuf(aTHX_ a,b)
#endif
#  endif
#endif
#if defined(PERL_IN_UNIVERSAL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define isa_lookup(a,b)		S_isa_lookup(aTHX_ a,b)
#endif
#endif
#if defined(PERL_IN_LOCALE_C) || defined(PERL_DECL_PROT)
#if defined(USE_LOCALE_NUMERIC) || defined(USE_LOCALE_COLLATE)
#ifdef PERL_CORE
#define stdize_locale(a)	S_stdize_locale(aTHX_ a)
#endif
#endif
#endif
#if defined(PERL_IN_UTIL_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define closest_cop(a,b)	S_closest_cop(aTHX_ a,b)
#define mess_alloc()		S_mess_alloc(aTHX)
#define vdie_croak_common(a,b,c,d)	S_vdie_croak_common(aTHX_ a,b,c,d)
#define vdie_common(a,b,c,d)	S_vdie_common(aTHX_ a,b,c,d)
#define write_no_mem()		S_write_no_mem(aTHX)
#endif
#if defined(PERL_MEM_LOG) && defined(PERL_MEM_LOG_STDERR)
#ifdef PERL_CORE
#define mem_log_common		S_mem_log_common
#endif
#endif
#endif
#if defined(PERL_IN_NUMERIC_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define mulexp10		S_mulexp10
#endif
#endif
#if defined(PERL_IN_UTF8_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define is_utf8_char_slow	S_is_utf8_char_slow
#define is_utf8_common(a,b,c)	S_is_utf8_common(aTHX_ a,b,c)
#define swash_get(a,b,c)	S_swash_get(aTHX_ a,b,c)
#endif
#endif
#define sv_setsv_flags(a,b,c)	Perl_sv_setsv_flags(aTHX_ a,b,c)
#define sv_catpvn_flags(a,b,c,d)	Perl_sv_catpvn_flags(aTHX_ a,b,c,d)
#define sv_catsv_flags(a,b,c)	Perl_sv_catsv_flags(aTHX_ a,b,c)
#define sv_utf8_upgrade_flags(a,b)	Perl_sv_utf8_upgrade_flags(aTHX_ a,b)
#define sv_pvn_force_flags(a,b,c)	Perl_sv_pvn_force_flags(aTHX_ a,b,c)
#define sv_copypv(a,b)		Perl_sv_copypv(aTHX_ a,b)
#define my_atof2(a,b)		Perl_my_atof2(aTHX_ a,b)
#define my_socketpair		Perl_my_socketpair
#define my_dirfd(a)		Perl_my_dirfd(aTHX_ a)
#ifdef PERL_OLD_COPY_ON_WRITE
#if defined(PERL_CORE) || defined(PERL_EXT)
#define sv_setsv_cow(a,b)	Perl_sv_setsv_cow(aTHX_ a,b)
#endif
#endif
#if defined(USE_PERLIO) && !defined(USE_SFIO)
#define PerlIO_close(a)		Perl_PerlIO_close(aTHX_ a)
#define PerlIO_fill(a)		Perl_PerlIO_fill(aTHX_ a)
#define PerlIO_fileno(a)	Perl_PerlIO_fileno(aTHX_ a)
#define PerlIO_eof(a)		Perl_PerlIO_eof(aTHX_ a)
#define PerlIO_error(a)		Perl_PerlIO_error(aTHX_ a)
#define PerlIO_flush(a)		Perl_PerlIO_flush(aTHX_ a)
#define PerlIO_clearerr(a)	Perl_PerlIO_clearerr(aTHX_ a)
#define PerlIO_set_cnt(a,b)	Perl_PerlIO_set_cnt(aTHX_ a,b)
#define PerlIO_set_ptrcnt(a,b,c)	Perl_PerlIO_set_ptrcnt(aTHX_ a,b,c)
#define PerlIO_setlinebuf(a)	Perl_PerlIO_setlinebuf(aTHX_ a)
#define PerlIO_read(a,b,c)	Perl_PerlIO_read(aTHX_ a,b,c)
#define PerlIO_write(a,b,c)	Perl_PerlIO_write(aTHX_ a,b,c)
#define PerlIO_unread(a,b,c)	Perl_PerlIO_unread(aTHX_ a,b,c)
#define PerlIO_tell(a)		Perl_PerlIO_tell(aTHX_ a)
#define PerlIO_seek(a,b,c)	Perl_PerlIO_seek(aTHX_ a,b,c)
#define PerlIO_get_base(a)	Perl_PerlIO_get_base(aTHX_ a)
#define PerlIO_get_ptr(a)	Perl_PerlIO_get_ptr(aTHX_ a)
#define PerlIO_get_bufsiz(a)	Perl_PerlIO_get_bufsiz(aTHX_ a)
#define PerlIO_get_cnt(a)	Perl_PerlIO_get_cnt(aTHX_ a)
#define PerlIO_stdin()		Perl_PerlIO_stdin(aTHX)
#define PerlIO_stdout()		Perl_PerlIO_stdout(aTHX)
#define PerlIO_stderr()		Perl_PerlIO_stderr(aTHX)
#endif /* PERLIO_LAYERS */
#ifdef PERL_CORE
#define deb_stack_all()		Perl_deb_stack_all(aTHX)
#endif
#if defined(PERL_IN_DEB_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define deb_stack_n(a,b,c,d,e)	S_deb_stack_n(aTHX_ a,b,c,d,e)
#endif
#endif
#ifdef PERL_CORE
#define pad_new(a)		Perl_pad_new(aTHX_ a)
#define pad_undef(a)		Perl_pad_undef(aTHX_ a)
#define pad_add_name(a,b,c,d,e)	Perl_pad_add_name(aTHX_ a,b,c,d,e)
#define pad_add_anon(a,b)	Perl_pad_add_anon(aTHX_ a,b)
#define pad_check_dup(a,b,c)	Perl_pad_check_dup(aTHX_ a,b,c)
#endif
#ifdef DEBUGGING
#ifdef PERL_CORE
#define pad_setsv(a,b)		Perl_pad_setsv(aTHX_ a,b)
#endif
#endif
#ifdef PERL_CORE
#define pad_block_start(a)	Perl_pad_block_start(aTHX_ a)
#define pad_tidy(a)		Perl_pad_tidy(aTHX_ a)
#define do_dump_pad(a,b,c,d)	Perl_do_dump_pad(aTHX_ a,b,c,d)
#define pad_fixup_inner_anons(a,b,c)	Perl_pad_fixup_inner_anons(aTHX_ a,b,c)
#endif
#ifdef PERL_CORE
#define pad_push(a,b)		Perl_pad_push(aTHX_ a,b)
#define pad_compname_type(a)	Perl_pad_compname_type(aTHX_ a)
#endif
#if defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define pad_findlex(a,b,c,d,e,f,g)	S_pad_findlex(aTHX_ a,b,c,d,e,f,g)
#endif
#  if defined(DEBUGGING)
#ifdef PERL_CORE
#define cv_dump(a,b)		S_cv_dump(aTHX_ a,b)
#endif
#  endif
#endif
#define find_runcv(a)		Perl_find_runcv(aTHX_ a)
#ifdef PERL_CORE
#define free_tied_hv_pool()	Perl_free_tied_hv_pool(aTHX)
#endif
#if defined(DEBUGGING)
#ifdef PERL_CORE
#define get_debug_opts(a,b)	Perl_get_debug_opts(aTHX_ a,b)
#endif
#endif
#define save_set_svflags(a,b,c)	Perl_save_set_svflags(aTHX_ a,b,c)
#define hv_scalar(a)		Perl_hv_scalar(aTHX_ a)
#define hv_name_set(a,b,c,d)	Perl_hv_name_set(aTHX_ a,b,c,d)
#ifdef PERL_CORE
#endif
#if defined(PERL_IN_DUMP_C) || defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#endif
#endif
#define hv_clear_placeholders(a)	Perl_hv_clear_placeholders(aTHX_ a)
#ifdef PERL_CORE
#define magic_scalarpack(a,b)	Perl_magic_scalarpack(aTHX_ a,b)
#endif
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define find_hash_subscript(a,b)	S_find_hash_subscript(aTHX_ a,b)
#define find_array_subscript(a,b)	S_find_array_subscript(aTHX_ a,b)
#define find_uninit_var(a,b,c)	S_find_uninit_var(aTHX_ a,b,c)
#endif
#endif
#ifdef PERL_NEED_MY_HTOLE16
#ifdef PERL_CORE
#define my_htole16		Perl_my_htole16
#endif
#endif
#ifdef PERL_NEED_MY_LETOH16
#ifdef PERL_CORE
#define my_letoh16		Perl_my_letoh16
#endif
#endif
#ifdef PERL_NEED_MY_HTOBE16
#ifdef PERL_CORE
#define my_htobe16		Perl_my_htobe16
#endif
#endif
#ifdef PERL_NEED_MY_BETOH16
#ifdef PERL_CORE
#define my_betoh16		Perl_my_betoh16
#endif
#endif
#ifdef PERL_NEED_MY_HTOLE32
#ifdef PERL_CORE
#define my_htole32		Perl_my_htole32
#endif
#endif
#ifdef PERL_NEED_MY_LETOH32
#ifdef PERL_CORE
#define my_letoh32		Perl_my_letoh32
#endif
#endif
#ifdef PERL_NEED_MY_HTOBE32
#ifdef PERL_CORE
#define my_htobe32		Perl_my_htobe32
#endif
#endif
#ifdef PERL_NEED_MY_BETOH32
#ifdef PERL_CORE
#define my_betoh32		Perl_my_betoh32
#endif
#endif
#ifdef PERL_NEED_MY_HTOLE64
#ifdef PERL_CORE
#define my_htole64		Perl_my_htole64
#endif
#endif
#ifdef PERL_NEED_MY_LETOH64
#ifdef PERL_CORE
#define my_letoh64		Perl_my_letoh64
#endif
#endif
#ifdef PERL_NEED_MY_HTOBE64
#ifdef PERL_CORE
#define my_htobe64		Perl_my_htobe64
#endif
#endif
#ifdef PERL_NEED_MY_BETOH64
#ifdef PERL_CORE
#define my_betoh64		Perl_my_betoh64
#endif
#endif
#ifdef PERL_NEED_MY_HTOLES
#ifdef PERL_CORE
#define my_htoles		Perl_my_htoles
#endif
#endif
#ifdef PERL_NEED_MY_LETOHS
#ifdef PERL_CORE
#define my_letohs		Perl_my_letohs
#endif
#endif
#ifdef PERL_NEED_MY_HTOBES
#ifdef PERL_CORE
#define my_htobes		Perl_my_htobes
#endif
#endif
#ifdef PERL_NEED_MY_BETOHS
#ifdef PERL_CORE
#define my_betohs		Perl_my_betohs
#endif
#endif
#ifdef PERL_NEED_MY_HTOLEI
#ifdef PERL_CORE
#define my_htolei		Perl_my_htolei
#endif
#endif
#ifdef PERL_NEED_MY_LETOHI
#ifdef PERL_CORE
#define my_letohi		Perl_my_letohi
#endif
#endif
#ifdef PERL_NEED_MY_HTOBEI
#ifdef PERL_CORE
#define my_htobei		Perl_my_htobei
#endif
#endif
#ifdef PERL_NEED_MY_BETOHI
#ifdef PERL_CORE
#define my_betohi		Perl_my_betohi
#endif
#endif
#ifdef PERL_NEED_MY_HTOLEL
#ifdef PERL_CORE
#define my_htolel		Perl_my_htolel
#endif
#endif
#ifdef PERL_NEED_MY_LETOHL
#ifdef PERL_CORE
#define my_letohl		Perl_my_letohl
#endif
#endif
#ifdef PERL_NEED_MY_HTOBEL
#ifdef PERL_CORE
#define my_htobel		Perl_my_htobel
#endif
#endif
#ifdef PERL_NEED_MY_BETOHL
#ifdef PERL_CORE
#define my_betohl		Perl_my_betohl
#endif
#endif
#ifdef PERL_CORE
#define my_swabn		Perl_my_swabn
#endif
#define gv_fetchpvn_flags(a,b,c,d)	Perl_gv_fetchpvn_flags(aTHX_ a,b,c,d)
#define gv_fetchsv(a,b,c)	Perl_gv_fetchsv(aTHX_ a,b,c)
#ifdef PERL_CORE
#define is_gv_magical_sv(a,b)	Perl_is_gv_magical_sv(aTHX_ a,b)
#endif
#define stashpv_hvname_match(a,b)	Perl_stashpv_hvname_match(aTHX_ a,b)
#ifdef DEBUG_LEAKING_SCALARS_FORK_DUMP
#ifdef PERL_CORE
#define dump_sv_child(a)	Perl_dump_sv_child(aTHX_ a)
#endif
#endif
#ifdef PERL_DONT_CREATE_GVSV
#define gv_SVadd(a)		Perl_gv_SVadd(aTHX_ a)
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#endif
#ifdef PERL_CORE
#define offer_nice_chunk(a,b)	Perl_offer_nice_chunk(aTHX_ a,b)
#endif
#ifndef SPRINTF_RETURNS_STRLEN
#endif
#ifdef PERL_CORE
#define my_clearenv()		Perl_my_clearenv(aTHX)
#endif
#ifdef PERL_IMPLICIT_CONTEXT
#ifdef PERL_GLOBAL_STRUCT_PRIVATE
#else
#endif
#endif
#ifndef HAS_STRLCAT
#endif
#ifndef HAS_STRLCPY
#endif
#ifdef PERL_MAD
#ifdef PERL_CORE
#define pad_peg			Perl_pad_peg
#endif
#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#endif
#endif
#ifdef PERL_CORE
#define xmldump_vindent(a,b,c,d)	Perl_xmldump_vindent(aTHX_ a,b,c,d)
#define xmldump_all()		Perl_xmldump_all(aTHX)
#define xmldump_packsubs(a)	Perl_xmldump_packsubs(aTHX_ a)
#define xmldump_sub(a)		Perl_xmldump_sub(aTHX_ a)
#define xmldump_form(a)		Perl_xmldump_form(aTHX_ a)
#define xmldump_eval()		Perl_xmldump_eval(aTHX)
#define sv_catxmlsv(a,b)	Perl_sv_catxmlsv(aTHX_ a,b)
#define sv_catxmlpvn(a,b,c,d)	Perl_sv_catxmlpvn(aTHX_ a,b,c,d)
#define sv_xmlpeek(a)		Perl_sv_xmlpeek(aTHX_ a)
#define do_pmop_xmldump(a,b,c)	Perl_do_pmop_xmldump(aTHX_ a,b,c)
#define pmop_xmldump(a)		Perl_pmop_xmldump(aTHX_ a)
#define do_op_xmldump(a,b,c)	Perl_do_op_xmldump(aTHX_ a,b,c)
#define op_xmldump(a)		Perl_op_xmldump(aTHX_ a)
#endif
#ifdef PERL_CORE
#define newTOKEN(a,b,c)		Perl_newTOKEN(aTHX_ a,b,c)
#define token_free(a)		Perl_token_free(aTHX_ a)
#define token_getmad(a,b,c)	Perl_token_getmad(aTHX_ a,b,c)
#define op_getmad_weak(a,b,c)	Perl_op_getmad_weak(aTHX_ a,b,c)
#define op_getmad(a,b,c)	Perl_op_getmad(aTHX_ a,b,c)
#define prepend_madprops(a,b,c)	Perl_prepend_madprops(aTHX_ a,b,c)
#define append_madprops(a,b,c)	Perl_append_madprops(aTHX_ a,b,c)
#define addmad(a,b,c)		Perl_addmad(aTHX_ a,b,c)
#define newMADsv(a,b)		Perl_newMADsv(aTHX_ a,b)
#define newMADPROP(a,b,c,d)	Perl_newMADPROP(aTHX_ a,b,c,d)
#define mad_free(a)		Perl_mad_free(aTHX_ a)
#endif
#  if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define skipspace0(a)		S_skipspace0(aTHX_ a)
#define skipspace1(a)		S_skipspace1(aTHX_ a)
#define skipspace2(a,b)		S_skipspace2(aTHX_ a,b)
#define start_force(a)		S_start_force(aTHX_ a)
#define curmad(a,b)		S_curmad(aTHX_ a,b)
#endif
#  endif
#ifdef PERL_CORE
#define madlex()		Perl_madlex(aTHX)
#define madparse()		Perl_madparse(aTHX)
#endif
#endif
#if !defined(HAS_SIGNBIT)
#endif
#if defined(PERL_CORE) || defined(PERL_EXT)
#endif
#ifdef PERL_CORE
#endif
#if defined(USE_ITHREADS)
#ifdef PERL_CORE
#define mro_meta_dup(a,b)	Perl_mro_meta_dup(aTHX_ a,b)
#endif
#endif
#define mro_get_linear_isa(a)	Perl_mro_get_linear_isa(aTHX_ a)
#if defined(PERL_IN_MRO_C) || defined(PERL_DECL_PROT)
#ifdef PERL_CORE
#define mro_get_linear_isa_dfs(a,b)	S_mro_get_linear_isa_dfs(aTHX_ a,b)
#endif
#endif
#ifdef PERL_CORE
#define mro_isa_changed_in(a)	Perl_mro_isa_changed_in(aTHX_ a)
#endif
#define mro_method_changed_in(a)	Perl_mro_method_changed_in(aTHX_ a)
#ifdef PERL_CORE
#define boot_core_mro()		Perl_boot_core_mro(aTHX)
#endif
#define ck_anoncode(a)		Perl_ck_anoncode(aTHX_ a)
#define ck_bitop(a)		Perl_ck_bitop(aTHX_ a)
#define ck_chdir(a)		Perl_ck_chdir(aTHX_ a)
#define ck_concat(a)		Perl_ck_concat(aTHX_ a)
#define ck_defined(a)		Perl_ck_defined(aTHX_ a)
#define ck_delete(a)		Perl_ck_delete(aTHX_ a)
#define ck_die(a)		Perl_ck_die(aTHX_ a)
#define ck_eof(a)		Perl_ck_eof(aTHX_ a)
#define ck_eval(a)		Perl_ck_eval(aTHX_ a)
#define ck_exec(a)		Perl_ck_exec(aTHX_ a)
#define ck_exists(a)		Perl_ck_exists(aTHX_ a)
#define ck_exit(a)		Perl_ck_exit(aTHX_ a)
#define ck_ftst(a)		Perl_ck_ftst(aTHX_ a)
#define ck_fun(a)		Perl_ck_fun(aTHX_ a)
#define ck_glob(a)		Perl_ck_glob(aTHX_ a)
#define ck_grep(a)		Perl_ck_grep(aTHX_ a)
#define ck_index(a)		Perl_ck_index(aTHX_ a)
#define ck_join(a)		Perl_ck_join(aTHX_ a)
#define ck_lengthconst(a)	Perl_ck_lengthconst(aTHX_ a)
#define ck_lfun(a)		Perl_ck_lfun(aTHX_ a)
#define ck_listiob(a)		Perl_ck_listiob(aTHX_ a)
#define ck_match(a)		Perl_ck_match(aTHX_ a)
#define ck_method(a)		Perl_ck_method(aTHX_ a)
#define ck_null(a)		Perl_ck_null(aTHX_ a)
#define ck_open(a)		Perl_ck_open(aTHX_ a)
#define ck_readline(a)		Perl_ck_readline(aTHX_ a)
#define ck_repeat(a)		Perl_ck_repeat(aTHX_ a)
#define ck_require(a)		Perl_ck_require(aTHX_ a)
#define ck_return(a)		Perl_ck_return(aTHX_ a)
#define ck_rfun(a)		Perl_ck_rfun(aTHX_ a)
#define ck_rvconst(a)		Perl_ck_rvconst(aTHX_ a)
#define ck_sassign(a)		Perl_ck_sassign(aTHX_ a)
#define ck_select(a)		Perl_ck_select(aTHX_ a)
#define ck_shift(a)		Perl_ck_shift(aTHX_ a)
#define ck_smartmatch(a)	Perl_ck_smartmatch(aTHX_ a)
#define ck_sort(a)		Perl_ck_sort(aTHX_ a)
#define ck_spair(a)		Perl_ck_spair(aTHX_ a)
#define ck_split(a)		Perl_ck_split(aTHX_ a)
#define ck_subr(a)		Perl_ck_subr(aTHX_ a)
#define ck_substr(a)		Perl_ck_substr(aTHX_ a)
#define ck_svconst(a)		Perl_ck_svconst(aTHX_ a)
#define ck_trunc(a)		Perl_ck_trunc(aTHX_ a)
#define ck_unpack(a)		Perl_ck_unpack(aTHX_ a)
#define pp_aassign()		Perl_pp_aassign(aTHX)
#define pp_abs()		Perl_pp_abs(aTHX)
#define pp_accept()		Perl_pp_accept(aTHX)
#define pp_add()		Perl_pp_add(aTHX)
#define pp_aelem()		Perl_pp_aelem(aTHX)
#define pp_aelemfast()		Perl_pp_aelemfast(aTHX)
#define pp_alarm()		Perl_pp_alarm(aTHX)
#define pp_and()		Perl_pp_and(aTHX)
#define pp_andassign()		Perl_pp_andassign(aTHX)
#define pp_anoncode()		Perl_pp_anoncode(aTHX)
#define pp_anonhash()		Perl_pp_anonhash(aTHX)
#define pp_anonlist()		Perl_pp_anonlist(aTHX)
#define pp_aslice()		Perl_pp_aslice(aTHX)
#define pp_atan2()		Perl_pp_atan2(aTHX)
#define pp_av2arylen()		Perl_pp_av2arylen(aTHX)
#define pp_backtick()		Perl_pp_backtick(aTHX)
#define pp_bind()		Perl_pp_bind(aTHX)
#define pp_binmode()		Perl_pp_binmode(aTHX)
#define pp_bit_and()		Perl_pp_bit_and(aTHX)
#define pp_bit_or()		Perl_pp_bit_or(aTHX)
#define pp_bit_xor()		Perl_pp_bit_xor(aTHX)
#define pp_bless()		Perl_pp_bless(aTHX)
#define pp_break()		Perl_pp_break(aTHX)
#define pp_caller()		Perl_pp_caller(aTHX)
#define pp_chdir()		Perl_pp_chdir(aTHX)
#define pp_chmod()		Perl_pp_chmod(aTHX)
#define pp_chomp()		Perl_pp_chomp(aTHX)
#define pp_chop()		Perl_pp_chop(aTHX)
#define pp_chown()		Perl_pp_chown(aTHX)
#define pp_chr()		Perl_pp_chr(aTHX)
#define pp_chroot()		Perl_pp_chroot(aTHX)
#define pp_close()		Perl_pp_close(aTHX)
#define pp_closedir()		Perl_pp_closedir(aTHX)
#define pp_complement()		Perl_pp_complement(aTHX)
#define pp_concat()		Perl_pp_concat(aTHX)
#define pp_cond_expr()		Perl_pp_cond_expr(aTHX)
#define pp_connect()		Perl_pp_connect(aTHX)
#define pp_const()		Perl_pp_const(aTHX)
#define pp_continue()		Perl_pp_continue(aTHX)
#define pp_cos()		Perl_pp_cos(aTHX)
#define pp_crypt()		Perl_pp_crypt(aTHX)
#define pp_dbmclose()		Perl_pp_dbmclose(aTHX)
#define pp_dbmopen()		Perl_pp_dbmopen(aTHX)
#define pp_dbstate()		Perl_pp_dbstate(aTHX)
#define pp_defined()		Perl_pp_defined(aTHX)
#define pp_delete()		Perl_pp_delete(aTHX)
#define pp_die()		Perl_pp_die(aTHX)
#define pp_divide()		Perl_pp_divide(aTHX)
#define pp_dofile()		Perl_pp_dofile(aTHX)
#define pp_dor()		Perl_pp_dor(aTHX)
#define pp_dorassign()		Perl_pp_dorassign(aTHX)
#define pp_dump()		Perl_pp_dump(aTHX)
#define pp_each()		Perl_pp_each(aTHX)
#define pp_egrent()		Perl_pp_egrent(aTHX)
#define pp_ehostent()		Perl_pp_ehostent(aTHX)
#define pp_enetent()		Perl_pp_enetent(aTHX)
#define pp_enter()		Perl_pp_enter(aTHX)
#define pp_entereval()		Perl_pp_entereval(aTHX)
#define pp_entergiven()		Perl_pp_entergiven(aTHX)
#define pp_enteriter()		Perl_pp_enteriter(aTHX)
#define pp_enterloop()		Perl_pp_enterloop(aTHX)
#define pp_entersub()		Perl_pp_entersub(aTHX)
#define pp_entertry()		Perl_pp_entertry(aTHX)
#define pp_enterwhen()		Perl_pp_enterwhen(aTHX)
#define pp_enterwrite()		Perl_pp_enterwrite(aTHX)
#define pp_eof()		Perl_pp_eof(aTHX)
#define pp_eprotoent()		Perl_pp_eprotoent(aTHX)
#define pp_epwent()		Perl_pp_epwent(aTHX)
#define pp_eq()			Perl_pp_eq(aTHX)
#define pp_eservent()		Perl_pp_eservent(aTHX)
#define pp_exec()		Perl_pp_exec(aTHX)
#define pp_exists()		Perl_pp_exists(aTHX)
#define pp_exit()		Perl_pp_exit(aTHX)
#define pp_exp()		Perl_pp_exp(aTHX)
#define pp_fcntl()		Perl_pp_fcntl(aTHX)
#define pp_fileno()		Perl_pp_fileno(aTHX)
#define pp_flip()		Perl_pp_flip(aTHX)
#define pp_flock()		Perl_pp_flock(aTHX)
#define pp_flop()		Perl_pp_flop(aTHX)
#define pp_fork()		Perl_pp_fork(aTHX)
#define pp_formline()		Perl_pp_formline(aTHX)
#define pp_ftatime()		Perl_pp_ftatime(aTHX)
#define pp_ftbinary()		Perl_pp_ftbinary(aTHX)
#define pp_ftblk()		Perl_pp_ftblk(aTHX)
#define pp_ftchr()		Perl_pp_ftchr(aTHX)
#define pp_ftctime()		Perl_pp_ftctime(aTHX)
#define pp_ftdir()		Perl_pp_ftdir(aTHX)
#define pp_fteexec()		Perl_pp_fteexec(aTHX)
#define pp_fteowned()		Perl_pp_fteowned(aTHX)
#define pp_fteread()		Perl_pp_fteread(aTHX)
#define pp_ftewrite()		Perl_pp_ftewrite(aTHX)
#define pp_ftfile()		Perl_pp_ftfile(aTHX)
#define pp_ftis()		Perl_pp_ftis(aTHX)
#define pp_ftlink()		Perl_pp_ftlink(aTHX)
#define pp_ftmtime()		Perl_pp_ftmtime(aTHX)
#define pp_ftpipe()		Perl_pp_ftpipe(aTHX)
#define pp_ftrexec()		Perl_pp_ftrexec(aTHX)
#define pp_ftrowned()		Perl_pp_ftrowned(aTHX)
#define pp_ftrread()		Perl_pp_ftrread(aTHX)
#define pp_ftrwrite()		Perl_pp_ftrwrite(aTHX)
#define pp_ftsgid()		Perl_pp_ftsgid(aTHX)
#define pp_ftsize()		Perl_pp_ftsize(aTHX)
#define pp_ftsock()		Perl_pp_ftsock(aTHX)
#define pp_ftsuid()		Perl_pp_ftsuid(aTHX)
#define pp_ftsvtx()		Perl_pp_ftsvtx(aTHX)
#define pp_fttext()		Perl_pp_fttext(aTHX)
#define pp_fttty()		Perl_pp_fttty(aTHX)
#define pp_ftzero()		Perl_pp_ftzero(aTHX)
#define pp_ge()			Perl_pp_ge(aTHX)
#define pp_gelem()		Perl_pp_gelem(aTHX)
#define pp_getc()		Perl_pp_getc(aTHX)
#define pp_getlogin()		Perl_pp_getlogin(aTHX)
#define pp_getpeername()	Perl_pp_getpeername(aTHX)
#define pp_getpgrp()		Perl_pp_getpgrp(aTHX)
#define pp_getppid()		Perl_pp_getppid(aTHX)
#define pp_getpriority()	Perl_pp_getpriority(aTHX)
#define pp_getsockname()	Perl_pp_getsockname(aTHX)
#define pp_ggrent()		Perl_pp_ggrent(aTHX)
#define pp_ggrgid()		Perl_pp_ggrgid(aTHX)
#define pp_ggrnam()		Perl_pp_ggrnam(aTHX)
#define pp_ghbyaddr()		Perl_pp_ghbyaddr(aTHX)
#define pp_ghbyname()		Perl_pp_ghbyname(aTHX)
#define pp_ghostent()		Perl_pp_ghostent(aTHX)
#define pp_glob()		Perl_pp_glob(aTHX)
#define pp_gmtime()		Perl_pp_gmtime(aTHX)
#define pp_gnbyaddr()		Perl_pp_gnbyaddr(aTHX)
#define pp_gnbyname()		Perl_pp_gnbyname(aTHX)
#define pp_gnetent()		Perl_pp_gnetent(aTHX)
#define pp_goto()		Perl_pp_goto(aTHX)
#define pp_gpbyname()		Perl_pp_gpbyname(aTHX)
#define pp_gpbynumber()		Perl_pp_gpbynumber(aTHX)
#define pp_gprotoent()		Perl_pp_gprotoent(aTHX)
#define pp_gpwent()		Perl_pp_gpwent(aTHX)
#define pp_gpwnam()		Perl_pp_gpwnam(aTHX)
#define pp_gpwuid()		Perl_pp_gpwuid(aTHX)
#define pp_grepstart()		Perl_pp_grepstart(aTHX)
#define pp_grepwhile()		Perl_pp_grepwhile(aTHX)
#define pp_gsbyname()		Perl_pp_gsbyname(aTHX)
#define pp_gsbyport()		Perl_pp_gsbyport(aTHX)
#define pp_gservent()		Perl_pp_gservent(aTHX)
#define pp_gsockopt()		Perl_pp_gsockopt(aTHX)
#define pp_gt()			Perl_pp_gt(aTHX)
#define pp_gv()			Perl_pp_gv(aTHX)
#define pp_gvsv()		Perl_pp_gvsv(aTHX)
#define pp_helem()		Perl_pp_helem(aTHX)
#define pp_hex()		Perl_pp_hex(aTHX)
#define pp_hslice()		Perl_pp_hslice(aTHX)
#define pp_i_add()		Perl_pp_i_add(aTHX)
#define pp_i_divide()		Perl_pp_i_divide(aTHX)
#define pp_i_eq()		Perl_pp_i_eq(aTHX)
#define pp_i_ge()		Perl_pp_i_ge(aTHX)
#define pp_i_gt()		Perl_pp_i_gt(aTHX)
#define pp_i_le()		Perl_pp_i_le(aTHX)
#define pp_i_lt()		Perl_pp_i_lt(aTHX)
#define pp_i_modulo()		Perl_pp_i_modulo(aTHX)
#define pp_i_multiply()		Perl_pp_i_multiply(aTHX)
#define pp_i_ncmp()		Perl_pp_i_ncmp(aTHX)
#define pp_i_ne()		Perl_pp_i_ne(aTHX)
#define pp_i_negate()		Perl_pp_i_negate(aTHX)
#define pp_i_subtract()		Perl_pp_i_subtract(aTHX)
#define pp_index()		Perl_pp_index(aTHX)
#define pp_int()		Perl_pp_int(aTHX)
#define pp_ioctl()		Perl_pp_ioctl(aTHX)
#define pp_iter()		Perl_pp_iter(aTHX)
#define pp_join()		Perl_pp_join(aTHX)
#define pp_keys()		Perl_pp_keys(aTHX)
#define pp_kill()		Perl_pp_kill(aTHX)
#define pp_last()		Perl_pp_last(aTHX)
#define pp_lc()			Perl_pp_lc(aTHX)
#define pp_lcfirst()		Perl_pp_lcfirst(aTHX)
#define pp_le()			Perl_pp_le(aTHX)
#define pp_leave()		Perl_pp_leave(aTHX)
#define pp_leaveeval()		Perl_pp_leaveeval(aTHX)
#define pp_leavegiven()		Perl_pp_leavegiven(aTHX)
#define pp_leaveloop()		Perl_pp_leaveloop(aTHX)
#define pp_leavesub()		Perl_pp_leavesub(aTHX)
#define pp_leavesublv()		Perl_pp_leavesublv(aTHX)
#define pp_leavetry()		Perl_pp_leavetry(aTHX)
#define pp_leavewhen()		Perl_pp_leavewhen(aTHX)
#define pp_leavewrite()		Perl_pp_leavewrite(aTHX)
#define pp_left_shift()		Perl_pp_left_shift(aTHX)
#define pp_length()		Perl_pp_length(aTHX)
#define pp_lineseq()		Perl_pp_lineseq(aTHX)
#define pp_link()		Perl_pp_link(aTHX)
#define pp_list()		Perl_pp_list(aTHX)
#define pp_listen()		Perl_pp_listen(aTHX)
#define pp_localtime()		Perl_pp_localtime(aTHX)
#define pp_lock()		Perl_pp_lock(aTHX)
#define pp_log()		Perl_pp_log(aTHX)
#define pp_lslice()		Perl_pp_lslice(aTHX)
#define pp_lstat()		Perl_pp_lstat(aTHX)
#define pp_lt()			Perl_pp_lt(aTHX)
#define pp_mapstart()		Perl_pp_mapstart(aTHX)
#define pp_mapwhile()		Perl_pp_mapwhile(aTHX)
#define pp_match()		Perl_pp_match(aTHX)
#define pp_method()		Perl_pp_method(aTHX)
#define pp_method_named()	Perl_pp_method_named(aTHX)
#define pp_mkdir()		Perl_pp_mkdir(aTHX)
#define pp_modulo()		Perl_pp_modulo(aTHX)
#define pp_msgctl()		Perl_pp_msgctl(aTHX)
#define pp_msgget()		Perl_pp_msgget(aTHX)
#define pp_msgrcv()		Perl_pp_msgrcv(aTHX)
#define pp_msgsnd()		Perl_pp_msgsnd(aTHX)
#define pp_multiply()		Perl_pp_multiply(aTHX)
#define pp_ncmp()		Perl_pp_ncmp(aTHX)
#define pp_ne()			Perl_pp_ne(aTHX)
#define pp_negate()		Perl_pp_negate(aTHX)
#define pp_next()		Perl_pp_next(aTHX)
#define pp_nextstate()		Perl_pp_nextstate(aTHX)
#define pp_not()		Perl_pp_not(aTHX)
#define pp_null()		Perl_pp_null(aTHX)
#define pp_oct()		Perl_pp_oct(aTHX)
#define pp_once()		Perl_pp_once(aTHX)
#define pp_open()		Perl_pp_open(aTHX)
#define pp_open_dir()		Perl_pp_open_dir(aTHX)
#define pp_or()			Perl_pp_or(aTHX)
#define pp_orassign()		Perl_pp_orassign(aTHX)
#define pp_ord()		Perl_pp_ord(aTHX)
#define pp_pack()		Perl_pp_pack(aTHX)
#define pp_padany()		Perl_pp_padany(aTHX)
#define pp_padav()		Perl_pp_padav(aTHX)
#define pp_padhv()		Perl_pp_padhv(aTHX)
#define pp_padsv()		Perl_pp_padsv(aTHX)
#define pp_pipe_op()		Perl_pp_pipe_op(aTHX)
#define pp_pop()		Perl_pp_pop(aTHX)
#define pp_pos()		Perl_pp_pos(aTHX)
#define pp_postdec()		Perl_pp_postdec(aTHX)
#define pp_postinc()		Perl_pp_postinc(aTHX)
#define pp_pow()		Perl_pp_pow(aTHX)
#define pp_predec()		Perl_pp_predec(aTHX)
#define pp_preinc()		Perl_pp_preinc(aTHX)
#define pp_print()		Perl_pp_print(aTHX)
#define pp_prototype()		Perl_pp_prototype(aTHX)
#define pp_prtf()		Perl_pp_prtf(aTHX)
#define pp_push()		Perl_pp_push(aTHX)
#define pp_pushmark()		Perl_pp_pushmark(aTHX)
#define pp_pushre()		Perl_pp_pushre(aTHX)
#define pp_qr()			Perl_pp_qr(aTHX)
#define pp_quotemeta()		Perl_pp_quotemeta(aTHX)
#define pp_rand()		Perl_pp_rand(aTHX)
#define pp_range()		Perl_pp_range(aTHX)
#define pp_rcatline()		Perl_pp_rcatline(aTHX)
#define pp_read()		Perl_pp_read(aTHX)
#define pp_readdir()		Perl_pp_readdir(aTHX)
#define pp_readline()		Perl_pp_readline(aTHX)
#define pp_readlink()		Perl_pp_readlink(aTHX)
#define pp_recv()		Perl_pp_recv(aTHX)
#define pp_redo()		Perl_pp_redo(aTHX)
#define pp_ref()		Perl_pp_ref(aTHX)
#define pp_refgen()		Perl_pp_refgen(aTHX)
#define pp_regcmaybe()		Perl_pp_regcmaybe(aTHX)
#define pp_regcomp()		Perl_pp_regcomp(aTHX)
#define pp_regcreset()		Perl_pp_regcreset(aTHX)
#define pp_rename()		Perl_pp_rename(aTHX)
#define pp_repeat()		Perl_pp_repeat(aTHX)
#define pp_require()		Perl_pp_require(aTHX)
#define pp_reset()		Perl_pp_reset(aTHX)
#define pp_return()		Perl_pp_return(aTHX)
#define pp_reverse()		Perl_pp_reverse(aTHX)
#define pp_rewinddir()		Perl_pp_rewinddir(aTHX)
#define pp_right_shift()	Perl_pp_right_shift(aTHX)
#define pp_rindex()		Perl_pp_rindex(aTHX)
#define pp_rmdir()		Perl_pp_rmdir(aTHX)
#define pp_rv2av()		Perl_pp_rv2av(aTHX)
#define pp_rv2cv()		Perl_pp_rv2cv(aTHX)
#define pp_rv2gv()		Perl_pp_rv2gv(aTHX)
#define pp_rv2hv()		Perl_pp_rv2hv(aTHX)
#define pp_rv2sv()		Perl_pp_rv2sv(aTHX)
#define pp_sassign()		Perl_pp_sassign(aTHX)
#define pp_say()		Perl_pp_say(aTHX)
#define pp_scalar()		Perl_pp_scalar(aTHX)
#define pp_schomp()		Perl_pp_schomp(aTHX)
#define pp_schop()		Perl_pp_schop(aTHX)
#define pp_scmp()		Perl_pp_scmp(aTHX)
#define pp_scope()		Perl_pp_scope(aTHX)
#define pp_seek()		Perl_pp_seek(aTHX)
#define pp_seekdir()		Perl_pp_seekdir(aTHX)
#define pp_select()		Perl_pp_select(aTHX)
#define pp_semctl()		Perl_pp_semctl(aTHX)
#define pp_semget()		Perl_pp_semget(aTHX)
#define pp_semop()		Perl_pp_semop(aTHX)
#define pp_send()		Perl_pp_send(aTHX)
#define pp_seq()		Perl_pp_seq(aTHX)
#define pp_setpgrp()		Perl_pp_setpgrp(aTHX)
#define pp_setpriority()	Perl_pp_setpriority(aTHX)
#define pp_setstate()		Perl_pp_setstate(aTHX)
#define pp_sge()		Perl_pp_sge(aTHX)
#define pp_sgrent()		Perl_pp_sgrent(aTHX)
#define pp_sgt()		Perl_pp_sgt(aTHX)
#define pp_shift()		Perl_pp_shift(aTHX)
#define pp_shmctl()		Perl_pp_shmctl(aTHX)
#define pp_shmget()		Perl_pp_shmget(aTHX)
#define pp_shmread()		Perl_pp_shmread(aTHX)
#define pp_shmwrite()		Perl_pp_shmwrite(aTHX)
#define pp_shostent()		Perl_pp_shostent(aTHX)
#define pp_shutdown()		Perl_pp_shutdown(aTHX)
#define pp_sin()		Perl_pp_sin(aTHX)
#define pp_sle()		Perl_pp_sle(aTHX)
#define pp_sleep()		Perl_pp_sleep(aTHX)
#define pp_slt()		Perl_pp_slt(aTHX)
#define pp_smartmatch()		Perl_pp_smartmatch(aTHX)
#define pp_sne()		Perl_pp_sne(aTHX)
#define pp_snetent()		Perl_pp_snetent(aTHX)
#define pp_socket()		Perl_pp_socket(aTHX)
#define pp_sockpair()		Perl_pp_sockpair(aTHX)
#define pp_sort()		Perl_pp_sort(aTHX)
#define pp_splice()		Perl_pp_splice(aTHX)
#define pp_split()		Perl_pp_split(aTHX)
#define pp_sprintf()		Perl_pp_sprintf(aTHX)
#define pp_sprotoent()		Perl_pp_sprotoent(aTHX)
#define pp_spwent()		Perl_pp_spwent(aTHX)
#define pp_sqrt()		Perl_pp_sqrt(aTHX)
#define pp_srand()		Perl_pp_srand(aTHX)
#define pp_srefgen()		Perl_pp_srefgen(aTHX)
#define pp_sselect()		Perl_pp_sselect(aTHX)
#define pp_sservent()		Perl_pp_sservent(aTHX)
#define pp_ssockopt()		Perl_pp_ssockopt(aTHX)
#define pp_stat()		Perl_pp_stat(aTHX)
#define pp_stringify()		Perl_pp_stringify(aTHX)
#define pp_stub()		Perl_pp_stub(aTHX)
#define pp_study()		Perl_pp_study(aTHX)
#define pp_subst()		Perl_pp_subst(aTHX)
#define pp_substcont()		Perl_pp_substcont(aTHX)
#define pp_substr()		Perl_pp_substr(aTHX)
#define pp_subtract()		Perl_pp_subtract(aTHX)
#define pp_symlink()		Perl_pp_symlink(aTHX)
#define pp_syscall()		Perl_pp_syscall(aTHX)
#define pp_sysopen()		Perl_pp_sysopen(aTHX)
#define pp_sysread()		Perl_pp_sysread(aTHX)
#define pp_sysseek()		Perl_pp_sysseek(aTHX)
#define pp_system()		Perl_pp_system(aTHX)
#define pp_syswrite()		Perl_pp_syswrite(aTHX)
#define pp_tell()		Perl_pp_tell(aTHX)
#define pp_telldir()		Perl_pp_telldir(aTHX)
#define pp_tie()		Perl_pp_tie(aTHX)
#define pp_tied()		Perl_pp_tied(aTHX)
#define pp_time()		Perl_pp_time(aTHX)
#define pp_tms()		Perl_pp_tms(aTHX)
#define pp_trans()		Perl_pp_trans(aTHX)
#define pp_truncate()		Perl_pp_truncate(aTHX)
#define pp_uc()			Perl_pp_uc(aTHX)
#define pp_ucfirst()		Perl_pp_ucfirst(aTHX)
#define pp_umask()		Perl_pp_umask(aTHX)
#define pp_undef()		Perl_pp_undef(aTHX)
#define pp_unlink()		Perl_pp_unlink(aTHX)
#define pp_unpack()		Perl_pp_unpack(aTHX)
#define pp_unshift()		Perl_pp_unshift(aTHX)
#define pp_unstack()		Perl_pp_unstack(aTHX)
#define pp_untie()		Perl_pp_untie(aTHX)
#define pp_utime()		Perl_pp_utime(aTHX)
#define pp_values()		Perl_pp_values(aTHX)
#define pp_vec()		Perl_pp_vec(aTHX)
#define pp_wait()		Perl_pp_wait(aTHX)
#define pp_waitpid()		Perl_pp_waitpid(aTHX)
#define pp_wantarray()		Perl_pp_wantarray(aTHX)
#define pp_warn()		Perl_pp_warn(aTHX)
#define pp_xor()		Perl_pp_xor(aTHX)

#endif	/* PERL_IMPLICIT_CONTEXT */

#endif	/* #ifndef PERL_NO_SHORT_NAMES */


/* Compatibility stubs.  Compile extensions with -DPERL_NOCOMPAT to
   disable them.
 */

#if !defined(PERL_CORE)
#  define sv_setptrobj(rv,ptr,name)	sv_setref_iv(rv,name,PTR2IV(ptr))
#  define sv_setptrref(rv,ptr)		sv_setref_iv(rv,NULL,PTR2IV(ptr))
#endif

#if !defined(PERL_CORE) && !defined(PERL_NOCOMPAT)

/* Compatibility for various misnamed functions.  All functions
   in the API that begin with "perl_" (not "Perl_") take an explicit
   interpreter context pointer.
   The following are not like that, but since they had a "perl_"
   prefix in previous versions, we provide compatibility macros.
 */
#  define perl_atexit(a,b)		call_atexit(a,b)
#  define perl_call_argv(a,b,c)		call_argv(a,b,c)
#  define perl_call_pv(a,b)		call_pv(a,b)
#  define perl_call_method(a,b)		call_method(a,b)
#  define perl_call_sv(a,b)		call_sv(a,b)
#  define perl_eval_sv(a,b)		eval_sv(a,b)
#  define perl_eval_pv(a,b)		eval_pv(a,b)
#  define perl_require_pv(a)		require_pv(a)
#  define perl_get_sv(a,b)		get_sv(a,b)
#  define perl_get_av(a,b)		get_av(a,b)
#  define perl_get_hv(a,b)		get_hv(a,b)
#  define perl_get_cv(a,b)		get_cv(a,b)
#  define perl_init_i18nl10n(a)		init_i18nl10n(a)
#  define perl_init_i18nl14n(a)		init_i18nl14n(a)
#  define perl_new_ctype(a)		new_ctype(a)
#  define perl_new_collate(a)		new_collate(a)
#  define perl_new_numeric(a)		new_numeric(a)

/* varargs functions can't be handled with CPP macros. :-(
   This provides a set of compatibility functions that don't take
   an extra argument but grab the context pointer using the macro
   dTHX.
 */
#if defined(PERL_IMPLICIT_CONTEXT) && !defined(PERL_NO_SHORT_NAMES)
#  define croak				Perl_croak_nocontext
#  define deb				Perl_deb_nocontext
#  define die				Perl_die_nocontext
#  define form				Perl_form_nocontext
#  define load_module			Perl_load_module_nocontext
#  define mess				Perl_mess_nocontext
#  define newSVpvf			Perl_newSVpvf_nocontext
#  define sv_catpvf			Perl_sv_catpvf_nocontext
#  define sv_setpvf			Perl_sv_setpvf_nocontext
#  define warn				Perl_warn_nocontext
#  define warner			Perl_warner_nocontext
#  define sv_catpvf_mg			Perl_sv_catpvf_mg_nocontext
#  define sv_setpvf_mg			Perl_sv_setpvf_mg_nocontext
#endif

#endif /* !defined(PERL_CORE) && !defined(PERL_NOCOMPAT) */

#if !defined(PERL_IMPLICIT_CONTEXT)
/* undefined symbols, point them back at the usual ones */
#  define Perl_croak_nocontext		Perl_croak
#  define Perl_die_nocontext		Perl_die
#  define Perl_deb_nocontext		Perl_deb
#  define Perl_form_nocontext		Perl_form
#  define Perl_load_module_nocontext	Perl_load_module
#  define Perl_mess_nocontext		Perl_mess
#  define Perl_newSVpvf_nocontext	Perl_newSVpvf
#  define Perl_sv_catpvf_nocontext	Perl_sv_catpvf
#  define Perl_sv_setpvf_nocontext	Perl_sv_setpvf
#  define Perl_warn_nocontext		Perl_warn
#  define Perl_warner_nocontext		Perl_warner
#  define Perl_sv_catpvf_mg_nocontext	Perl_sv_catpvf_mg
#  define Perl_sv_setpvf_mg_nocontext	Perl_sv_setpvf_mg
#endif

/* ex: set ro: */
