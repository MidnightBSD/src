# $Id: Makefile.in,v 1.1.1.1 2006-02-25 02:26:12 laffer1 Exp $
# Makefile for tack
#
# The variable 'srcdir' refers to the source-distribution, and can be set with
# the configure script by "--srcdir=DIR".
#
# The rules are organized to produce the libraries for the configured models,
# and the programs with the configured default model.

# turn off _all_ suffix rules; we'll generate our own
.SUFFIXES:

SHELL		= /bin/sh
THIS		= Makefile

CF_MFLAGS 	= @cf_cv_makeflags@
@SET_MAKE@
x		= @PROG_EXT@

MODEL		= ../@DFT_OBJ_SUBDIR@
DESTDIR		= @DESTDIR@
srcdir		= @srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@
mandir		= @mandir@/man1
includedir	= @includedir@
datadir		= @datadir@

LIBTOOL		= @LIBTOOL@

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@

AWK		= @AWK@
LN_S		= @LN_S@

CC		= @CC@
CPP		= @CPP@
CFLAGS		= @CFLAGS@

INCDIR		= $(srcdir)/../include
CPPFLAGS	= -DHAVE_CONFIG_H -I../tack -I$(srcdir) @CPPFLAGS@

CCFLAGS		= $(CPPFLAGS) $(CFLAGS)

CFLAGS_LIBTOOL	= $(CCFLAGS)
CFLAGS_NORMAL	= $(CCFLAGS)
CFLAGS_DEBUG	= $(CCFLAGS) @CC_G_OPT@ -DTRACE
CFLAGS_PROFILE	= $(CCFLAGS) -pg
CFLAGS_SHARED	= $(CCFLAGS) @CC_SHARED_OPTS@

CFLAGS_DEFAULT	= $(CFLAGS_@DFT_UPR_MODEL@)

LD		= @LD@
LINK		= @LINK_PROGS@ $(LIBTOOL) $(CC)
LDFLAGS		= @EXTRA_LDFLAGS@ \
		@PROG_ARGS@ @LDFLAGS@ @LD_MODEL@ @LIBS@ @EXTRA_LIBS@

LDFLAGS_LIBTOOL	= $(LDFLAGS)
LDFLAGS_NORMAL	= $(LDFLAGS)
LDFLAGS_DEBUG	= $(LDFLAGS) @CC_G_OPT@
LDFLAGS_PROFILE	= $(LDFLAGS) -pg
LDFLAGS_SHARED	= $(LDFLAGS) @LD_SHARED_OPTS@

LDFLAGS_DEFAULT	= $(LDFLAGS_@DFT_UPR_MODEL@)

LINT		= @LINT@
LINT_OPTS	= @LINT_OPTS@
LINT_LIBS	= -lncurses@LIB_SUFFIX@ @LIBS@

PROGS = tack$x

# Default library, for linking applications
DEPS_CURSES = ../lib/@LIB_PREFIX@ncurses@DFT_DEP_SUFFIX@

################################################################################
all:	$(PROGS)

sources:

install: install.tack
uninstall: uninstall.tack

# this line simplifies the configure-script
libs \
install.libs \
uninstall.libs:

install.tack: $(PROGS) \
	$(DESTDIR)$(bindir) \
	$(DESTDIR)$(mandir)
	$(LIBTOOL) $(INSTALL_PROGRAM) tack$x $(DESTDIR)$(bindir)/tack$x
	$(INSTALL_DATA) $(srcdir)/tack.1 $(DESTDIR)$(mandir)/tack.1

uninstall.tack:
	-@$(LIBTOOL) rm -f $(DESTDIR)$(bindir)/tack$x
	-@rm -f $(DESTDIR)$(mandir)/tack.1

$(DESTDIR)$(bindir) \
$(DESTDIR)$(mandir) :
	sh $(srcdir)/../mkinstalldirs $@

#
# Rules for building tack
#

DEPS_TACK = \
	$(MODEL)/ansi.o \
	$(MODEL)/charset.o \
	$(MODEL)/color.o \
	$(MODEL)/control.o \
	$(MODEL)/crum.o \
	$(MODEL)/edit.o \
	$(MODEL)/fun.o \
	$(MODEL)/init.o \
	$(MODEL)/menu.o \
	$(MODEL)/modes.o \
	$(MODEL)/output.o \
	$(MODEL)/pad.o \
	$(MODEL)/scan.o \
	$(MODEL)/sync.o \
	$(MODEL)/sysdep.o \
	$(MODEL)/tack.o

tack$x: $(DEPS_TACK) $(DEPS_CURSES)
	@ECHO_LINK@ $(LINK) $(DEPS_TACK) $(LDFLAGS_DEFAULT) -o $@

#
# Utility productions start here
#

tags:
	ctags *.[ch]

@MAKE_UPPER_TAGS@TAGS:
@MAKE_UPPER_TAGS@	etags *.[ch]

mostlyclean ::
	-rm -f core tags TAGS *~ *.bak *.i *.atac trace

clean :: mostlyclean
	-rm -f $(PROGS)
	-rm -rf .libs

distclean :: clean
	-rm -f Makefile

realclean :: distclean

tack.tar: Makefile.in modules *.[ch] tack.1 HISTORY COPYING
	tar -cvf tack.tar Makefile.in modules *.[ch] tack.1 HISTORY COPYING

# These rules are used to allow "make -n" to work on a clean directory-tree
../include/hashsize.h \
../include/parametrized.h \
../include/term.h :
	cd ../include; $(MAKE) $(CF_MFLAGS)

$(DEPS_CURSES) :
	cd ../ncurses; $(MAKE) $(CF_MFLAGS)

lint:
	$(LINT) $(LINT_OPTS) $(CPPFLAGS) $(srcdir)/*.c $(LINT_LIBS)

###############################################################################
# The remainder of this file is automatically generated during configuration
###############################################################################
