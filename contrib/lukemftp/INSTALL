INSTALLATION INTRODUCTION
-------------------------

This file describes how to compile and install lukemftp on your
system.

	============================================
	=					   =
	=  NOTE: You will need an ANSI C compiler. =
	=					   =
	============================================


For most systems, execute the following to compile and install
lukemftp:
	./configure
	make
	make install

A preformatted manual page (src/ftp.cat1) is also installed. If
you wish to install the source (src/ftp.1), ensure that your system
has up-to-date mandoc macros. groff ships with this macro suite,
but it has bugs. Try:
    ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-current/src/share/tmac/
for a more recent version.


CONFIGURATION OPTIONS
---------------------

lukemftp is configured using an `autoconf' generated `configure'
script.  `configure' supports the following options:

* The standard `autoconf configure' options, including:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [same as prefix]
  --srcdir=DIR            find the sources in DIR [configure dir or ..]
                          BSD or GNU make may be required for this to work.

* Specific options:
  --enable-editcomplete   Turn on command line editing and completion.
  --disable-editcomplete  Turn off command line editing and completion
                          [default: enabled].
  --enable-ipv6           Enable IPv6 support (if your OS supports it)
  --disable-ipv6          Disable IPv6 support (even if your OS supports it.) 
                          [default: enabled].
  --with-socks            Compile with SOCKS firewall traversal support.
  --with-socks5[=PATH]    Compile with SOCKS5 firewall traversal support.
  --with-socks4[=PATH]    Compile with SOCKS4 firewall traversal support.

The following environment variables can be set to override various
compiler related settings.
  CC=compiler		specify name of the C compiler (default: gcc or cc)
  CFLAGS=flags		specify flags to C compiler (default: -O -g or just -O)
  LDFLAGS=flags		specify flags to linker (default: none)

This can be achieved with:
	env CC="compiler" CFLAGS="flags" LDFLAGS="flags" ./configure


	============================================
	=					   =
	=  NOTE: You will need an ANSI C compiler. =
	=					   =
	============================================


PLATFORM SPECIFIC NOTES
-----------------------

The following platforms & compilers have been tested:

- AIX 4.1.5:
- AIX 4.2.1:
- AIX 4.3.3:
	- Compiler: xlc -qlanglvl=ansi
	   version: xlC 3.1.4.10 -- C for AIX Compiler
	   version: ibmcxx.cmp 3.6.6.6 -- IBM C and C++ Compilers

	  Configure with:
		env CC="xlc" CFLAGS="-qlanglvl=ansi" ./configure

- BSD/OS 4.0.1 (x86)
- BSD/OS 4.1 (x86)
- BSD/OS 4.1 (sparc)
- BSD/OS 4.2 (x86)
	- Compiler: /bin/cc
	   version: gcc 2.7.2.1
	   version: gcc version 2.95.2 19991024

- Digital UNIX 4.0b
- Digital UNIX 4.0d
- Digital UNIX 4.0f
	- Compiler: cc -std
	   version: DEC C V5.2-036 on Digital UNIX V4.0 (Rev. 564)
	   version: DEC C V5.9-005 on Digital UNIX V4.0 (Rev. 1229)

	  Configure with
		env CC="cc -std" ./configure

	- Compiler: gcc
	   version: 2.95.1

- Digital UNIX 5.0
	- Compiler: cc
	   version: Compaq C V6.1-011 on Digital UNIX V5.0 (Rev. 910)

- FreeBSD 3.4 (i386):
- FreeBSD 3.5 (i386):
- FreeBSD 4.1 (i386):
	- Compiler: cc
	   version: gcc version 2.7.2.3
	   version: gcc version 2.95.2 19991024

- HP/UX 10.20:
- HP/UX 11.00:
	- Compiler: /opt/ansic/bin/cc -Ae
	   version: A.10.32.03

	  Configure with
		env CC="cc -Ae" ./configure

	  To generate code that will run on old architectures you
	  may need to add "+DAportable" to CC.


- IRIX 6.5.4
- IRIX 6.5.8
	Compiler: /bin/cc
	 version: MIPSpro Compilers: Version 7.2.1
	Compiler:
	 version: gcc version 2.95.2

- HP/UX 11.00:
- HP/UX 11.00 64 bit:
	- Compiler: /opt/ansic/bin/cc -Ae
	   version: A.11.01.00

	  Configure with
		env CC="cc -Ae" ./configure

- NetBSD 1.3.3 (i386)
	Compiler: /usr/bin/cc
	Compiler: /usr/bin/cc

	Ignore warnings about ``passing arg 3 of `tputs' from
	incompatible pointer type''.

- RedHat Linux 5.1 (?? i386)
- RedHat Linux 5.2 (?? i386)
- RedHat Linux 6.0 (Linux 2.2.10 i686)
- RedHat Linux 6.1 (Linux 2.2.5-15 i686)
- RedHat Linux 6.2 (Linux 2.2.16-3smp i686)
	- Compiler: cc
	   version: egcs-1.1.2

- Slackware (Linux 2.0.35 i686)
	- Compiler: cc
	   version: 2.7.2.3

- Solaris 2.6 (sparc)
- Solaris 7 (sparc)
	- Compiler: /opt/SUNWspro/bin/cc
	   version: WorkShop Compilers 5.0

	- Compiler: gcc
	   version: egcs-1.1.2

=============
= OLD NOTES =
=============

XXX: clean up to match reality
------------------------------

- RedHat Linux 5.0 (i386)
	Compiler: cc

- Solaris 2.5 (sparc)
- Solaris 7 (x86)
	Compiler: /opt/SUNWspro/bin/cc
	 version: SC3.0 15 Dec 1993
	 version: WorkShop Compilers 5.0
	Compiler: gcc
	 version: egcs-1.1.2
	 version: gcc 2.8.1
	 version: gcc 2.95.1

- Solaris 7 (sparc) 64 bit
	Compiler: /opt/SUNWspro/bin/cc -xarch=v9
	 version: WorkShop Compilers 5.0

- SunOS 4
	Compiler: gcc -lresolv
	 version:

- SuSE Linux
	Compiler: gcc
	 version:

	/usr/bin/ftp on SuSE Linux 6.4 is this ftp client.

	May need `gcc -L/usr/lib/termcap' if tgetent() et al aren't found.

- Ultrix 4.5
	Compiler: cc
	 version: MIPS C Compiler 3.0
	Compiler: gcc
	 version: 2.7.2.2
