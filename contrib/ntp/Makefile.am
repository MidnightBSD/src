#AUTOMAKE_OPTIONS = util/ansi2knr foreign dist-tarZ no-dependencies
AUTOMAKE_OPTIONS = util/ansi2knr foreign 1.8
ACLOCAL_AMFLAGS= -I m4 -I libopts/m4

NULL=

SUBDIRS=
if NEED_LIBOPTS
SUBDIRS+= libopts
endif
SUBDIRS+= 		\
	scripts 	\
	include 	\
	ElectricFence	\
	@ARLIB_DIR@ 	\
	libntp		\
	libparse	\
	ntpd		\
	ntpdate		\
	ntpdc		\
	ntpq		\
	parseutil	\
	adjtimed	\
	clockstuff	\
	kernel		\
	sntp		\
	util		\
	$(NULL)

DIST_SUBDIRS=		\
	scripts		\
	include		\
	ElectricFence	\
	arlib		\
	libntp		\
	libopts		\
	libparse	\
	ntpd		\
	ntpdate		\
	ntpdc		\
	ntpq		\
	parseutil	\
	adjtimed	\
	clockstuff	\
	kernel		\
	sntp		\
	util		\
	$(NULL)

DISTCHECK_CONFIGURE_FLAGS=	--with-arlib --enable-local-libopts

EXTRA_DIST =		\
	COPYRIGHT	\
	ChangeLog	\
	CommitLog	\
	CommitLog-4.1.0 \
	NEWS		\
	NOTES.y2kfixes	\
	README.bk	\
	README.hackers	\
	README.patches	\
	README.refclocks \
	README.versions	\
	TODO		\
	WHERE-TO-START	\
	bootstrap	\
	build		\
	config.guess	\
	config.h.in	\
	config.sub	\
	dot.emacs	\
	excludes	\
	flock-build	\
	install-sh	\
	packageinfo.sh	\
	readme.y2kfixes	\
	results.y2kfixes	\
	\
	conf		\
	html		\
	libisc		\
	ports		\
	\
	bincheck.mf	\
	version		\
	version.m4	\
	\
	$(NULL)

DISTCLEANFILES = .gcc-warning

#ETAGS_ARGS = $(srcdir)/Makefile.am $(srcdir)/configure.ac
ETAGS_ARGS = Makefile.am configure.ac

# HMS: make ports be the last directory...
# DIST_HOOK_DIRS = conf html scripts ports

# HMS: Keep .gcc-warning first, as that way it gets printed first.
BUILT_SOURCES = .gcc-warning $(srcdir)/COPYRIGHT $(srcdir)/version $(srcdir)/version.m4 $(srcdir)/include/version.def

$(srcdir)/COPYRIGHT: $(srcdir)/html/copyright.html
	( echo "This file is automatically generated from html/copyright.html" ; lynx -dump $(srcdir)/html/copyright.html ) > $(srcdir)/COPYRIGHT.new && mv $(srcdir)/COPYRIGHT.new $(srcdir)/COPYRIGHT

# HMS: The next bit is still suboptimal.  If bk is present but this NTP
# repo is not a bk repo, we'll get an error message from the prs command.
# Unfortunately, I haven't found the necessary magic to redirect this error
# output to /dev/null under ancient/unique shells like the one Ultrix uses.
# We'll also get an error if srcdir or version is unwritable.
$(srcdir)/version: FRC.version
	-(bk version) >/dev/null 2>&1 && \
	    cd $(srcdir) && \
            x=`bk -R prs -hr+ -nd:I: ChangeSet` && \
	    y=`cat version 2>/dev/null` || true && \
	    case "$$x" in ''|$$y) ;; *) echo $$x > version ;; esac

$(srcdir)/version.m4: $(srcdir)/packageinfo.sh
	cd $(srcdir) && \
	./scripts/genver version.m4

$(srcdir)/include/version.def: $(srcdir)/packageinfo.sh
	cd $(srcdir) && \
	./scripts/genver include/version.def

dist-hook:
	@find $(distdir) -type d -name CVS -print | xargs rm -rf
	@find $(distdir) -type d -name SCCS -print | xargs rm -rf
	@chmod u+w $(distdir)/ports/winnt
	@for i in `find $(distdir)/ports/winnt -type f -name '*.ds*' -print`; \
	   do chmod u+w $$i ; unix2dos $$i $$i; done

.gcc-warning:
	@echo "Compiling with GCC now generates lots of new warnings."
	@echo " "
	@echo "Don't be concerned. They're just warnings."
	@echo " "
	@echo "Don't send bug reports about the warnings, either."
	@echo " "
	@echo "Feel free to send patches that fix these warnings, though."
	@echo " "
	@sleep 1
	@touch $@

CommitLog: FRC.CommitLog
	cd $(srcdir)					\
	&& /bin/test -e CommitLog			\
		-a SCCS/s.ChangeSet -ot CommitLog	\
	|| scripts/genCommitLog

# HMS: The following seems to be a work-in-progress...

CVO=`$(srcdir)/config.guess`

.buildcvo:
	echo "$(CVO)" > .buildcvo

.checkcvo: .buildcvo FRC.checkcvo
	@if [ "`cat .buildcvo`" != "$(CVO)" ];then	\
		echo "This directory was configured for `cat .buildcvo`"; \
		echo "but this machine is a $(CVO)";	\
		exit 1;	\
	fi

BHOST=`(hostname || uname -n)`

.buildhost:
	echo "$(BHOST)" > .buildhost

.checkhost: .buildhost FRC.checkhost
	@if [ "`cat .buildhost`" != "$(BHOST)" ];then	\
		echo "Built on `cat .buildhost` but this is $(BHOST)"; \
		echo " "; \
	fi

FRC.CommitLog FRC.distwarn FRC.checkcvo FRC.checkhost FRC.version:

# HMS: what was I trying to do with this?
#dot.emacs: FRC.distwarn
