Pull in r205331 from upstream clang trunk (by Adrian Prantl):

  Debug info: fix a crash when emitting IndirectFieldDecls, which were
  previously not handled at all.
  rdar://problem/16348575

Introduced here: http://svnweb.freebsd.org/changeset/base/271432

Index: tools/clang/lib/CodeGen/CGDebugInfo.cpp
===================================================================
--- tools/clang/lib/CodeGen/CGDebugInfo.cpp	(revision 205330)
+++ tools/clang/lib/CodeGen/CGDebugInfo.cpp	(revision 205331)
@@ -1252,7 +1252,7 @@ CollectTemplateParams(const TemplateParameterList
         V = CGM.GetAddrOfFunction(FD);
       // Member data pointers have special handling too to compute the fixed
       // offset within the object.
-      if (isa<FieldDecl>(D)) {
+      if (isa<FieldDecl>(D) || isa<IndirectFieldDecl>(D)) {
         // These five lines (& possibly the above member function pointer
         // handling) might be able to be refactored to use similar code in
         // CodeGenModule::getMemberPointerConstant
Index: tools/clang/test/CodeGenCXX/debug-info-indirect-field-decl.cpp
===================================================================
--- tools/clang/test/CodeGenCXX/debug-info-indirect-field-decl.cpp	(revision 0)
+++ tools/clang/test/CodeGenCXX/debug-info-indirect-field-decl.cpp	(revision 205331)
@@ -0,0 +1,17 @@
+// RUN: %clang_cc1 -emit-llvm -g -triple x86_64-apple-darwin %s -o - | FileCheck %s
+//
+// Test that indirect field decls are handled gracefully.
+// rdar://problem/16348575
+//
+template <class T, int T::*ptr> class Foo {  };
+
+struct Bar {
+  int i1;
+  // CHECK: [ DW_TAG_member ] [line [[@LINE+1]], size 32, align 32, offset 32] [from _ZTSN3BarUt_E]
+  union {
+    // CHECK: [ DW_TAG_member ] [i2] [line [[@LINE+1]], size 32, align 32, offset 0] [from int]
+    int i2;
+  };
+};
+
+Foo<Bar, &Bar::i2> the_foo;
