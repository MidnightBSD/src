[define COPYRIGHT]
#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#
[end]# DO NOT EDIT -- AUTOMATICALLY GENERATED BY build/generator/gen_make.py
# FROM build/generator/templates/build-outputs.mk.ezt

########################################
# Section 1: Global make variables
########################################
[for modules]
[modules.name]_DEPS =[for modules.deps] [modules.deps][end]
[modules.name]_LINK =[for modules.link] [modules.link][end]
[end]
BUILD_DIRS =[for build_dirs] [build_dirs][end]

BDB_TEST_DEPS =[for bdb_test_deps] [bdb_test_deps][end]

BDB_TEST_PROGRAMS =[for bdb_test_progs] [bdb_test_progs][end]

TEST_DEPS =[for test_deps] [test_deps][end]

TEST_PROGRAMS =[for test_progs] [test_progs][end]

check-deps test-deps: [for test_helpers] [test_helpers][end]

MANPAGES =[for manpages] [manpages][end]

CLEAN_FILES =[for cfiles] [cfiles][end]
EXTRACLEAN_FILES =[for sql] [sql.header][end] \
  $(abs_builddir)/subversion/libsvn_subr/errorcode.inc \
  $(abs_builddir)/subversion/libsvn_subr/config_keys.inc \
  $(abs_srcdir)/compile_commands.json

SWIG_INCLUDES = -I$(abs_builddir)/subversion \
  -I$(abs_srcdir)/subversion/include \
  -I$(abs_srcdir)/subversion/bindings/swig \
  -I$(abs_srcdir)/subversion/bindings/swig/include \
  -I$(abs_srcdir)/subversion/bindings/swig/proxy \
  -I$(abs_builddir)/subversion/bindings/swig/proxy \
  $(SVN_APR_INCLUDES) $(SVN_APRUTIL_INCLUDES)
[if-any release_mode]
RELEASE_MODE = 1
[end]

########################################
# Section 2: SWIG headers (wrappers and external runtimes)
########################################
[if-any release_mode]
[else]
[swig_rules][end]
########################################
# Section 3: SWIG autogen rules
########################################
[for swig_langs]
.swig_[swig_langs.short]_checked:
	@if [ -n "$(SWIG_[swig_langs.short_upper]_ERRMSG)" ]; then \
	  echo "SWIG [swig_langs.name] disabled at configure time: $(SWIG_[swig_langs.short_upper]_ERRMSG)" >&2; \
	  exit 1; \
	fi
	@touch $@

autogen-swig-[swig_langs.short]: .swig_[swig_langs.short]_checked [for swig_langs.deps] [swig_langs.deps][end]
autogen-swig: autogen-swig-[swig_langs.short]

# Ensure the swig build targets depend on the configuration check
swig-[swig_langs.short]: .swig_[swig_langs.short]_checked
[end]


########################################
# Section 4: Rules to build SWIG .c files from .i files
########################################
[for swig_c]
[swig_c.c_file]: .swig_checked [for swig_c.deps] [swig_c.deps][end]
	$(SWIG) $(SWIG_INCLUDES) [swig_c.opts] -o $@ $(top_srcdir)/[swig_c.source][end]

# This needs to be here, rather than in Makefile.in, else
# './autogen.sh --release' doesn't find it.
.swig_checked:
	@if [ "$(SWIG)" = "none" ]; then \
	  echo "SWIG disabled at configure time" >&2; \
	  exit 1; \
	fi
	@touch .swig_checked


########################################
# Section 5: Individual target build rules
########################################
[for target]
[target.varname]_PATH = [target.path][if-any target.install]
install-[target.install]: [target.install_deps][end]
[is target.type "java"][target.varname]_HEADERS = [for target.headers][if-index target.headers first][else] [end][target.headers][end]
[target.varname]_OBJECTS = [for target.objects][if-index target.objects first][else] [end][target.objects][end]
[target.varname]_DEPS = $([target.varname]_HEADERS) $([target.varname]_OBJECTS)[for target.add_deps] [target.add_deps][end][for target.deps][if-index target.deps first][else] [end][target.deps][end]
[target.name]: $([target.varname]_DEPS)
[if-any target.sources][target.varname]_SRC =[for target.sources] [target.sources][end]
$([target.varname]_HEADERS) $([target.varname]_OBJECTS): $([target.varname]_SRC)
	[target.link_cmd][if-any target.headers] -h [target.headers_dir][end] -d [target.output_dir] -classpath [target.classes]:$([target.varname]_CLASSPATH) $([target.varname]_SRC)
[if-any target.jar]
	$(JAR) cf [target.jar_path] -C [target.classes][for target.packages] [target.packages][end][end][end]
[else][is target.type "i18n"][target.varname]_DEPS =[for target.add_deps] [target.add_deps][end][for target.objects] [target.objects][end][for target.deps] [target.deps][end]
[target.name]: $([target.varname]_DEPS)
[else][target.varname]_DEPS =[for target.add_deps] [target.add_deps][end][for target.objdeps] [target.objdeps][end][for target.deps] [target.deps][end]
[target.varname]_OBJECTS =[for target.objnames] [target.objnames][end]
[target.filename]: $([target.varname]_DEPS)
	[if-any target.when]if $([target.when]) ; then [else][end]cd [target.path] && [target.link_cmd] $([target.varname]_LDFLAGS) -o [target.basename] [target.undefined_flag] $([target.varname]_OBJECTS)[for target.libs] [target.libs][end] $(LIBS)[if-any target.when] ; else echo "fake" > [target.filename] ; fi[else][end]
[end][end][end]

########################################
# Section 6: Install-Group build targets
########################################
[for itargets]
[itargets.type]: [for itargets.outputs][if-index itargets.outputs first][else] [end][itargets.outputs][end]
[end]

########################################
# Section 7: Install-Group install targets
########################################
[for areas]
install-[areas.type]: [for areas.files][if-index areas.files first][else] [end][areas.files.fullname][end]
[if-any areas.files][for areas.files]	[is areas.files.mode "apache-mod"][if-any areas.files.when]if $([areas.files.when]) ; then [else][end]cd [areas.files.dirname] ; $(MKDIR) "$(APACHE_LIBEXECDIR)" ; $(INSTALL_MOD_SHARED) -n [areas.files.name] [areas.files.filename][if-any areas.files.when] ; fi[else][end][else][if-index areas.files first]$(MKDIR) $(DESTDIR)$([areas.varname]dir)[if-any areas.files.pc_installdir] $(DESTDIR)[areas.files.pc_installdir][end]
	[else][end][is areas.type "locale"]$(MKDIR) [areas.files.installdir]
	[if-any areas.files.when]if $([areas.files.when]) ; then [else][end]cd [areas.files.dirname] ; $(INSTALL_[areas.uppervar]) [areas.files.filename] [areas.files.installdir]/$(PACKAGE_NAME)[areas.files.objext][if-any areas.files.when] ; fi[else][end][else][if-any areas.files.when]if $([areas.files.when]) ; then [else][end]cd [areas.files.dirname] ; $(INSTALL_[areas.uppervar]) [areas.files.filename] $(DESTDIR)[areas.files.install_fname][if-any areas.files.when] ; fi[else][end]
	[if-any areas.files.pc_fullname]$(INSTALL_DATA) [areas.files.pc_fullname] $(DESTDIR)[areas.files.pc_install_fname][end][end][end]
[end][else]	$(MKDIR) $(DESTDIR)$([areas.varname]dir)
[end][if-any areas.extra_install]	$(INSTALL_EXTRA_[areas.uppervar])
[end][end]

########################################
# Section 8: The install-include rule
########################################

install-include:[for includes] [includes.file][end]
	$(MKDIR) $(DESTDIR)[includedir][for includes]
	$(INSTALL_INCLUDE) [includes.src] $(DESTDIR)[includes.dst][end]

########################################
# Section 9: Shortcut targets for manual builds of specific items
########################################
[for isources]
[isources.name]: [isources.filename][end]

########################################
# Section 10: Rules to build all other kinds of object-like files
########################################
[for deps]
[deps.name]:[for deps.deps] [deps.deps][end][if-any deps.cmd]
	[if-any deps.when]if $([deps.when]) ; then [else][end][deps.cmd] [if-any deps.generated][else]$(canonicalized_srcdir)[end][deps.source][end][if-any deps.when] ; else echo "fake" > [deps.name] ; fi[else][end]
[end]
