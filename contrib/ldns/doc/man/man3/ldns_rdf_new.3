.ad l
.TH ldns 3 "30 May 2006"
.SH NAME
ldns_rdf_new, ldns_rdf_clone, ldns_rdf_new_frm_data, ldns_rdf_new_frm_str, ldns_rdf_new_frm_fp, ldns_rdf_free, ldns_rdf_deep_free, ldns_rdf_print \- ldns_rdf creation, destruction and printing

.SH SYNOPSIS
#include <stdint.h>
.br
#include <stdbool.h>
.br
.PP
#include <ldns/ldns.h>
.PP
ldns_rdf* ldns_rdf_new(ldns_rdf_type type, size_t size, void *data);
.PP
ldns_rdf* ldns_rdf_clone(const ldns_rdf *rd);
.PP
ldns_rdf* ldns_rdf_new_frm_data(ldns_rdf_type type, size_t size, const void *data);
.PP
ldns_rdf* ldns_rdf_new_frm_str(ldns_rdf_type type, const char *str);
.PP
ldns_status ldns_rdf_new_frm_fp(ldns_rdf **r, ldns_rdf_type type, FILE *fp);
.PP
void ldns_rdf_free(ldns_rdf *rd);
.PP
void ldns_rdf_deep_free(ldns_rdf *rd);
.PP
void ldns_rdf_print(FILE *output, const ldns_rdf *rdf);
.PP

.SH DESCRIPTION
.HP
\fIldns_rdf_new\fR()
allocates a new rdf structure and fills it.
This function \%DOES \%NOT copy the contents from
the buffer, unlike ldns_rdf_new_frm_data()
\.br
\fBtype\fR: type of the rdf
\.br
\fBsize\fR: size of the buffer
\.br
\fBdata\fR: pointer to the buffer to be copied
\.br
Returns the new rdf structure or \%NULL on failure
.PP
.HP
\fIldns_rdf_clone\fR()
clones a rdf structure. The data is copied.
\.br
\fBrd\fR: rdf to be copied
\.br
Returns a new rdf structure
.PP
.HP
\fIldns_rdf_new_frm_data\fR()
allocates a new rdf structure and fills it.
This function _does_ copy the contents from
the buffer, unlike ldns_rdf_new()
\.br
\fBtype\fR: type of the rdf
\.br
\fBsize\fR: size of the buffer
\.br
\fBdata\fR: pointer to the buffer to be copied
\.br
Returns the new rdf structure or \%NULL on failure
.PP
.HP
\fIldns_rdf_new_frm_str\fR()
creates a new rdf from a string.
\.br
\fBtype\fR: type to use
\.br
\fBstr\fR: string to use
\.br
Returns ldns_rdf* or \%NULL in case of an error
.PP
.HP
\fIldns_rdf_new_frm_fp\fR()
creates a new rdf from a file containing a string.
\.br
\fBr\fR: the new rdf
\.br
\fBtype\fR: type to use
\.br
\fBfp\fR: the file pointer  to use
\.br
Returns \%LDNS_STATUS_OK or the error
.PP
.HP
\fIldns_rdf_free\fR()
frees a rdf structure, leaving the
data pointer intact.
\.br
\fBrd\fR: the pointer to be freed
\.br
Returns void
.PP
.HP
\fIldns_rdf_deep_free\fR()
frees a rdf structure _and_ frees the
data. rdf should be created with _new_frm_data
\.br
\fBrd\fR: the rdf structure to be freed
\.br
Returns void
.PP
.HP
\fIldns_rdf_print\fR()
Prints the data in the rdata field to the given file stream
(in presentation format)

\.br
\fBoutput\fR: the file stream to print to
\.br
\fBrdf\fR: the rdata field to print
\.br
Returns void
.PP
.SH AUTHOR
The ldns team at NLnet Labs.

.SH REPORTING BUGS
Please report bugs to ldns-team@nlnetlabs.nl or in 
our bugzilla at
http://www.nlnetlabs.nl/bugs/index.html

.SH COPYRIGHT
Copyright (c) 2004 - 2006 NLnet Labs.
.PP
Licensed under the BSD License. There is NO warranty; not even for
MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.

.SH SEE ALSO
\fIldns_rdf\fR.
And \fBperldoc Net::DNS\fR, \fBRFC1034\fR,
\fBRFC1035\fR, \fBRFC4033\fR, \fBRFC4034\fR  and \fBRFC4035\fR.
.SH REMARKS
This manpage was automatically generated from the ldns source code.
