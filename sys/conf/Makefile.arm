# Makefile.arm -- with config changes.
# Copyright 1990 W. Jolitz
#	from: @(#)Makefile.i386	7.1 5/10/91
# $FreeBSD: release/7.0.0/sys/conf/Makefile.arm 174854 2007-12-22 06:32:46Z cvs2svn $
#
# Makefile for FreeBSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arm/conf/``machineid''
# after which you should do
#	 config machineid
# Generic makefile changes should be made in
#	/sys/conf/Makefile.arm
# after which config should be rerun for all machines.
#

# Which version of config(8) is required.
%VERSREQ=	600004

# Temporary stuff while we're still embryonic
NO_MODULES=

STD8X16FONT?=	iso

.if !defined(S)
.if exists(./@/.)
S=	./@
.else
S=	../../..
.endif
.endif
.include "$S/conf/kern.pre.mk"

SYSTEM_LD:= ${SYSTEM_LD:$S/conf/ldscript.$M=ldscript.$M}
SYSTEM_DEP:= ${SYSTEM_DEP:$S/conf/ldscript.$M=ldscript.$M}

.if defined(ARM_BIG_ENDIAN)
CC += -mbig-endian
SYSTEM_LD += -EB
LD += -EB
.endif


.if !defined(DEBUG) && !defined(PROFLEVEL)
STRIP_FLAGS = -S
.endif

DDB_ENABLED!=	grep DDB opt_ddb.h || true

.if empty(DDB_ENABLED)
CFLAGS += -mno-apcs-frame
.endif

SYSTEM_LD_ = ${LD} -Bdynamic -T ldscript.$M.noheader \
	  -warn-common -export-dynamic -dynamic-linker /red/herring -o \
	   ${FULLKERNEL}.noheader -X ${SYSTEM_OBJS} vers.o
SYSTEM_LD_TAIL +=;sed s/" + SIZEOF_HEADERS"// ldscript.$M\
		>ldscript.$M.noheader; \
		${SYSTEM_LD_}; \
		${OBJCOPY} -S -O binary ${FULLKERNEL}.noheader \
		${KERNEL_KO}.bin; \
		rm ${FULLKERNEL}.noheader

FILES_CPU_FUNC =	$S/$M/$M/cpufunc_asm_arm7tdmi.S \
	$S/$M/$M/cpufunc_asm_arm8.S $S/$M/$M/cpufunc_asm_arm9.S \
	$S/$M/$M/cpufunc_asm_sa1.S $S/$M/$M/cpufunc_asm_arm10.S \
	$S/$M/$M/cpufunc_asm_xscale.S $S/$M/$M/cpufunc_asm.S \
	$S/$M/$M/cpufunc_asm_xscale_c3.S
trampoline: ${KERNEL_KO}.tramp
${KERNEL_KO}.tramp: ${KERNEL_KO} $S/$M/$M/inckern.S $S/$M/$M/elf_trampoline.c
	echo "#define KERNNAME \"${KERNEL_KO}.tmp\"" >opt_kernname.h 
	sed s/${KERNVIRTADDR}/${KERNPHYSADDR}/ ldscript.$M > ldscript.$M.tramp
	sed s/" + SIZEOF_HEADERS"// ldscript.$M.tramp > \
	ldscript.$M.tramp.noheader
	echo "#include <machine/asm.h>" >tmphack.S
	echo "ENTRY(_start)" >>tmphack.S
	echo "bl _startC" >>tmphack.S
	${OBJCOPY} --strip-symbol '$$d' --strip-symbol '$$a' \
	-g --strip-symbol '$$t' ${FULLKERNEL} ${KERNEL_KO}.tmp
	eval $$(stat -s ${KERNEL_KO}.tmp) && \
	echo "#define KERNSIZE $$st_size" >>opt_kernname.h
	${CC} -O -nostdlib -I. -Xlinker -T -Xlinker ldscript.$M.tramp \
	tmphack.S $S/$M/$M/elf_trampoline.c $S/$M/$M/inckern.S \
	${FILES_CPU_FUNC} -o ${KERNEL_KO}.tramp
	${CC} -O -nostdlib -I. -Xlinker -T -Xlinker ldscript.$M.tramp.noheader \
	tmphack.S $S/$M/$M/elf_trampoline.c $S/$M/$M/inckern.S \
	${FILES_CPU_FUNC} -o ${KERNEL_KO}.tramp.noheader 
	${OBJCOPY} -S -O binary ${KERNEL_KO}.tramp.noheader \
	${KERNEL_KO}.tramp.bin 
	${OBJCOPY} ${STRIP_FLAGS} ${KERNEL_KO}.tmp 
	echo "#define KERNNAME \"${KERNEL_KO}.tmp.gz\"" \
	>opt_kernname.h 
	eval $$(stat -s ${KERNEL_KO}.tmp) && \
	echo "#define KERNSIZE $$st_size" >>opt_kernname.h
	gzip -9 ${KERNEL_KO}.tmp
	eval $$(stat -s ${KERNEL_KO}.tmp.gz) && \
	echo "#define KERNCOMPSIZE $$st_size" >>opt_kernname.h
	${CC} -O2 -DKZIP -I. -c $S/kern/inflate.c -o inflate-tramp.o
	${CC} -O -nostdlib -I. -Xlinker -T -Xlinker ldscript.$M.tramp \
	-DKZIP tmphack.S $S/$M/$M/elf_trampoline.c inflate-tramp.o \
	$S/$M/$M/inckern.S ${FILES_CPU_FUNC} -o ${KERNEL_KO}.gz.tramp
	${CC} -O -nostdlib -I. -Xlinker -T -Xlinker ldscript.$M.tramp.noheader \
	-DKZIP tmphack.S $S/$M/$M/elf_trampoline.c inflate-tramp.o \
	$S/$M/$M/inckern.S ${FILES_CPU_FUNC} -o ${KERNEL_KO}.tramp.noheader
	${OBJCOPY} -S -O binary ${KERNEL_KO}.tramp.noheader \
	${KERNEL_KO}.gz.tramp.bin
	rm ${KERNEL_KO}.tmp.gz ${KERNEL_KO}.tramp.noheader opt_kernname.h \
	inflate-tramp.o tmphack.S

%BEFORE_DEPEND

%OBJS

%FILES.c

%FILES.s

%FILES.m

%CLEAN

CLEAN+=	ldscript.$M ${KERNEL_KO}.bin ldscript.$M.noheader

.if ${DDB_ENABLED} != ""
CLEAN+= ${KERNEL_KO}.tramp ${KERNEL_KO}.tramp.bin ldscript.$M.tramp \
	ldscript.$M.tramp.noheader ${KERNEL_KO}.gz.tramp \
	${KERNEL_KO}.gz.tramp.bin

.endif
ldscript.$M: $S/conf/ldscript.$M
	cat $S/conf/ldscript.$M|sed s/KERNPHYSADDR/${KERNPHYSADDR}/g| \
	  sed s/KERNVIRTADDR/${KERNVIRTADDR}/g > ldscript.$M
%RULES
	
.include "$S/conf/kern.post.mk"
