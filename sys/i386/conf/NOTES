#
# NOTES -- Lines that can be cut/pasted into kernel and hints configs.
#
# This file contains machine dependent kernel configuration notes.  For
# machine independent notes, look in /sys/conf/NOTES.
#
# $FreeBSD: release/7.0.0/sys/i386/conf/NOTES 176023 2008-02-06 03:24:29Z scottl $
#

#
# We want LINT to cover profiling as well.
profile         2


#####################################################################
# SMP OPTIONS:
#
# The apic device enables the use of the I/O APIC for interrupt delivery.
# The apic device can be used in both UP and SMP kernels, but is required
# for SMP kernels.  Thus, the apic device is not strictly an SMP option,
# but it is a prerequisite for SMP.
#
# Notes:
#
# HTT CPUs should only be used if they are enabled in the BIOS.  For
# the ACPI case, ACPI only correctly tells us about any HTT CPUs if
# they are enabled.  However, most HTT systems do not list HTT CPUs
# in the MP Table if they are enabled, thus we guess at the HTT CPUs
# for the MP Table case.  However, we shouldn't try to guess and use
# these CPUs if HTT is disabled.  Thus, HTT guessing is only enabled
# for the MP Table if the user explicitly asks for it via the
# MPTABLE_FORCE_HTT option.  Do NOT use this option if you have HTT
# disabled in your BIOS.
#
# IPI_PREEMPTION instructs the kernel to preempt threads running on other
# CPUS if needed.  Relies on the PREEMPTION option

# Mandatory:
device		apic			# I/O apic

# Optional:
options 	MPTABLE_FORCE_HTT	# Enable HTT CPUs with the MP Table
options 	IPI_PREEMPTION

#
# Watchdog routines.
#
options 	MP_WATCHDOG

# Debugging options.
#
options		STOP_NMI		# Stop CPUS using NMI instead of IPI
options 	COUNT_XINVLTLB_HITS	# Counters for TLB events
options 	COUNT_IPIS		# Per-CPU IPI interrupt counters



#####################################################################
# CPU OPTIONS

#
# You must specify at least one CPU (the one you intend to run on);
# deleting the specification for CPUs you don't need to use may make
# parts of the system run faster.
#
cpu		I486_CPU
cpu		I586_CPU		# aka Pentium(tm)
cpu		I686_CPU		# aka Pentium Pro(tm)

#
# Options for CPU features.
#
# CPU_ATHLON_SSE_HACK tries to enable SSE instructions when the BIOS has
# forgotten to enable them.
#
# CPU_BLUELIGHTNING_3X enables triple-clock mode on IBM Blue Lightning
# CPU if CPU supports it.  The default is double-clock mode on
# BlueLightning CPU box.
#
# CPU_BLUELIGHTNING_FPU_OP_CACHE enables FPU operand cache on IBM
# BlueLightning CPU.  It works only with Cyrix FPU, and this option
# should not be used with Intel FPU.
#
# CPU_BTB_EN enables branch target buffer on Cyrix 5x86 (NOTE 1).
#
# CPU_CYRIX_NO_LOCK enables weak locking for the entire address space
# of Cyrix 6x86 and 6x86MX CPUs by setting the NO_LOCK bit of CCR1.
# Otherwise, the NO_LOCK bit of CCR1 is cleared.  (NOTE 3)
#
# CPU_DIRECT_MAPPED_CACHE sets L1 cache of Cyrix 486DLC CPU in direct
# mapped mode.  Default is 2-way set associative mode.
#
# CPU_DISABLE_5X86_LSSER disables load store serialize (i.e., enables
# reorder).  This option should not be used if you use memory mapped
# I/O device(s).
#
# CPU_DISABLE_CMPXCHG disables the CMPXCHG instruction on > i386 IA32
# machines.  VmWare 3.x seems to emulate this instruction poorly, causing
# the guest OS to run very slowly.  This problem appears to be fixed in
# VmWare 4.x, at least in version 4.5.2, so that enabling this option with
# VmWare 4.x will result in locking operations to be 20-30 times slower.
# Enabling this with an SMP kernel will cause the kernel to be unusable.
#
# CPU_DISABLE_SSE explicitly prevents I686_CPU from turning on SSE.
#
# CPU_ELAN enables support for AMDs ElanSC520 CPU.
#    CPU_ELAN_PPS enables precision timestamp code.
#    CPU_ELAN_XTAL sets the clock crystal frequency in Hz.
#
# CPU_ENABLE_LONGRUN enables support for Transmeta Crusoe LongRun
# technology which allows to restrict power consumption of the CPU by
# using group of hw.crusoe.* sysctls.
#
# CPU_FASTER_5X86_FPU enables faster FPU exception handler.
#
# CPU_GEODE is for the SC1100 Geode embedded processor.  This option
# is necessary because the i8254 timecounter is toast.
#
# CPU_I486_ON_386 enables CPU cache on i486 based CPU upgrade products
# for i386 machines.
#
# CPU_IORT defines I/O clock delay time (NOTE 1).  Default values of
# I/O clock delay time on Cyrix 5x86 and 6x86 are 0 and 7,respectively
# (no clock delay).
#
# CPU_L2_LATENCY specifies the L2 cache latency value.  This option is used
# only when CPU_PPRO2CELERON is defined and Mendocino Celeron is detected.
# The default value is 5.
#
# CPU_LOOP_EN prevents flushing the prefetch buffer if the destination
# of a jump is already present in the prefetch buffer on Cyrix 5x86(NOTE
# 1).
#
# CPU_PPRO2CELERON enables L2 cache of Mendocino Celeron CPUs.  This option
# is useful when you use Socket 8 to Socket 370 converter, because most Pentium
# Pro BIOSs do not enable L2 cache of Mendocino Celeron CPUs.
#
# CPU_RSTK_EN enables return stack on Cyrix 5x86 (NOTE 1).
#
# CPU_SOEKRIS enables support www.soekris.com hardware.
#
# CPU_SUSP_HLT enables suspend on HALT.  If this option is set, CPU
# enters suspend mode following execution of HALT instruction.
#
# CPU_UPGRADE_HW_CACHE eliminates unneeded cache flush instruction(s).
#
# CPU_WT_ALLOC enables write allocation on Cyrix 6x86/6x86MX and AMD
# K5/K6/K6-2 CPUs.
#
# CYRIX_CACHE_WORKS enables CPU cache on Cyrix 486 CPUs with cache
# flush at hold state.
#
# CYRIX_CACHE_REALLY_WORKS enables (1) CPU cache on Cyrix 486 CPUs
# without cache flush at hold state, and (2) write-back CPU cache on
# Cyrix 6x86 whose revision < 2.7 (NOTE 2).
#
# NO_F00F_HACK disables the hack that prevents Pentiums (and ONLY
# Pentiums) from locking up when a LOCK CMPXCHG8B instruction is
# executed.  This option is only needed if I586_CPU is also defined,
# and should be included for any non-Pentium CPU that defines it.
#
# NO_MEMORY_HOLE is an optimisation for systems with AMD K6 processors
# which indicates that the 15-16MB range is *definitely* not being
# occupied by an ISA memory hole.
#
# NOTE 1: The options, CPU_BTB_EN, CPU_LOOP_EN, CPU_IORT,
# CPU_LOOP_EN and CPU_RSTK_EN should not be used because of CPU bugs.
# These options may crash your system.
#
# NOTE 2: If CYRIX_CACHE_REALLY_WORKS is not set, CPU cache is enabled
# in write-through mode when revision < 2.7.  If revision of Cyrix
# 6x86 >= 2.7, CPU cache is always enabled in write-back mode.
#
# NOTE 3: This option may cause failures for software that requires
# locked cycles in order to operate correctly.
#
options 	CPU_ATHLON_SSE_HACK
options 	CPU_BLUELIGHTNING_3X
options 	CPU_BLUELIGHTNING_FPU_OP_CACHE
options 	CPU_BTB_EN
options 	CPU_DIRECT_MAPPED_CACHE
options 	CPU_DISABLE_5X86_LSSER
options 	CPU_DISABLE_CMPXCHG
#options 	CPU_DISABLE_SSE
options 	CPU_ELAN
options 	CPU_ELAN_PPS
options 	CPU_ELAN_XTAL=32768000
options 	CPU_ENABLE_LONGRUN
options 	CPU_FASTER_5X86_FPU
options 	CPU_GEODE
options 	CPU_I486_ON_386
options 	CPU_IORT
options 	CPU_L2_LATENCY=5
options 	CPU_LOOP_EN
options 	CPU_PPRO2CELERON
options 	CPU_RSTK_EN
options 	CPU_SOEKRIS
options 	CPU_SUSP_HLT
options 	CPU_UPGRADE_HW_CACHE
options 	CPU_WT_ALLOC
options 	CYRIX_CACHE_WORKS
options 	CYRIX_CACHE_REALLY_WORKS
#options 	NO_F00F_HACK

# Debug options
options 	NPX_DEBUG	# enable npx debugging

#
# PERFMON causes the driver for Pentium/Pentium Pro performance counters
# to be compiled.  See perfmon(4) for more information.
#
options 	PERFMON

#
# XBOX causes the kernel to be bootable on the Microsoft XBox console system.
# The resulting kernel will auto-detect whether it is being booted on a XBox,
# so kernels compiled with this option will also work on an ordinary PC.
# This option require I686_CPU.
#
# xboxfb includes support for the XBox frame buffer device. It is fully USB-
# keyboard aware, and will only be used if an xbox is detected. This option
# (obviously) requires XBOX support in your kernel.
#
# NOTE: xboxfb currently conflicts with syscons(4); if you have an XBOX and
# include both in your kernel; you will not get any video output. Ordinary
# PC's do not suffer from this.
#
options		XBOX
device		xboxfb


#####################################################################
# NETWORKING OPTIONS

#
# DEVICE_POLLING adds support for mixed interrupt-polling handling
# of network device drivers, which has significant benefits in terms
# of robustness to overloads and responsivity, as well as permitting
# accurate scheduling of the CPU time between kernel network processing
# and other activities.  The drawback is a moderate (up to 1/HZ seconds)
# potential increase in response times.
# It is strongly recommended to use HZ=1000 or 2000 with DEVICE_POLLING
# to achieve smoother behaviour.
# Additionally, you can enable/disable polling at runtime with help of
# the ifconfig(8) utility, and select the CPU fraction reserved to
# userland with the sysctl variable kern.polling.user_frac
# (default 50, range 0..100).
#
# Not all device drivers support this mode of operation at the time of
# this writing.  See polling(4) for more details.

options 	DEVICE_POLLING


#####################################################################
# CLOCK OPTIONS

# The following options are used for debugging clock behavior only, and
# should not be used for production systems.

# CLK_CALIBRATION_LOOP causes clock calibration to be run in a loop at
# startup until the user presses a key.  (The i8254 clock is always
# calibrated relative to the RTC (mc146818a) and this option causes the
# calibration to be repeated.)
options 	CLK_CALIBRATION_LOOP

# CLK_USE_I8254_CALIBRATION causes the calibrated frequency of the i8254
# clock to actually be used.
options 	CLK_USE_I8254_CALIBRATION

# Provide read/write access to the memory in the clock chip.
device		nvram		# Access to rtc cmos via /dev/nvram


#####################################################################
# MISCELLANEOUS DEVICES AND OPTIONS

# 
# sio: serial ports (see sio(4)), including support for various
#      PC Card devices, such as Modem and NICs
#
device		sio
hint.sio.0.at="isa"
hint.sio.0.port="0x3F8"
hint.sio.0.flags="0x10"
hint.sio.0.irq="4"

# `flags' specific to sio(4).
#	0x10	enable console support for this unit.  Other console flags
#		(if applicable) are ignored unless this is set.  Enabling
#		console support does not make the unit the preferred console.
#		Boot with -h or set boot_serial=YES in the loader.  For sio(4)
#		specifically, the 0x20 flag can also be set (see above).
#		Currently, at most one unit can have console support; the
#		first one (in config file order) with this flag set is
#		preferred.  Setting this flag for sio0 gives the old behaviour.
#	0x20	force this unit to be the console (unless there is another
#		higher priority console).  This replaces the COMCONSOLE option.
#	0x40	reserve this unit for low level console operations.  Do not
#		access the device in any normal way.
#	0x80	use this port for serial line gdb support in ddb.  Also known
#		as debug port.
# PnP `flags'
#	0x1	disable probing of this device.  Used to prevent your modem
#		from being attached as a PnP modem.
# Other flags for sio that aren't documented in the man page.
#	0x20000	enable hardware RTS/CTS and larger FIFOs.  Only works for
#		ST16650A-compatible UARTs.

# Options for sio:
options 	COM_ESP			# Code for Hayes ESP.
options 	COM_MULTIPORT		# Code for some cards with shared IRQs.
options 	CONSPEED=115200		# Speed for serial console
					# (default 9600).

device		speaker		#Play IBM BASIC-style noises out your speaker
hint.speaker.0.at="isa"
hint.speaker.0.port="0x61"
device		gzip		#Exec gzipped a.out's.  REQUIRES COMPAT_AOUT!
device		apm_saver	# Requires APM


#####################################################################
# HARDWARE BUS CONFIGURATION

#
# ISA bus
#
device		isa		# Required by npx(4)

#
# Options for `isa':
#
# AUTO_EOI_1 enables the `automatic EOI' feature for the master 8259A
# interrupt controller.  This saves about 0.7-1.25 usec for each interrupt.
# This option breaks suspend/resume on some portables.
#
# AUTO_EOI_2 enables the `automatic EOI' feature for the slave 8259A
# interrupt controller.  This saves about 0.7-1.25 usec for each interrupt.
# Automatic EOI is documented not to work for for the slave with the
# original i8259A, but it works for some clones and some integrated
# versions.
#
# MAXMEM specifies the amount of RAM on the machine; if this is not
# specified, FreeBSD will first read the amount of memory from the CMOS
# RAM, so the amount of memory will initially be limited to 64MB or 16MB
# depending on the BIOS.  If the BIOS reports 64MB, a memory probe will
# then attempt to detect the installed amount of RAM.  If this probe
# fails to detect >64MB RAM you will have to use the MAXMEM option.
# The amount is in kilobytes, so for a machine with 128MB of RAM, it would
# be 131072 (128 * 1024).
#
# BROKEN_KEYBOARD_RESET disables the use of the keyboard controller to
# reset the CPU for reboot.  This is needed on some systems with broken
# keyboard controllers.

options 	AUTO_EOI_1
#options 	AUTO_EOI_2

options 	MAXMEM=(128*1024)
#options 	BROKEN_KEYBOARD_RESET

#
# EISA bus
#
# The EISA bus device is `eisa'.  It provides auto-detection and
# configuration support for all devices on the EISA bus.

device		eisa

# By default, only 10 EISA slots are probed, since the slot numbers
# above clash with the configuration address space of the PCI subsystem,
# and the EISA probe is not very smart about this.  This is sufficient
# for most machines, but in particular the HP NetServer LC series comes
# with an onboard AIC7770 dual-channel SCSI controller on EISA slot #11,
# thus you need to bump this figure to 12 for them.
options 	EISA_SLOTS=12

#
# MCA bus:
#
# The MCA bus device is `mca'.  It provides auto-detection and
# configuration support for all devices on the MCA bus.
# No hints are required for MCA.

device		mca

#
# PCI bus & PCI options:
#
device		pci

#
# AGP GART support
device		agp


#####################################################################
# HARDWARE DEVICE CONFIGURATION

# To include support for VGA VESA video modes
options 	VESA

# Turn on extra debugging checks and output for VESA support.
options 	VESA_DEBUG

#
# The Numeric Processing eXtension driver.  This is non-optional.
device		npx
hint.npx.0.flags="0x0"
hint.npx.0.irq="13"

#
# `flags' for npx0:
#	0x01	don't use the npx registers to optimize bcopy.
#	0x02	don't use the npx registers to optimize bzero.
#	0x04	don't use the npx registers to optimize copyin or copyout.
# The npx registers are normally used to optimize copying and zeroing when
# all of the following conditions are satisfied:
#	I586_CPU is an option
#	the cpu is an i586 (perhaps not a Pentium)
#	the probe for npx0 succeeds
#	INT 16 exception handling works.
# Then copying and zeroing using the npx registers is normally 30-100% faster.
# The flags can be used to control cases where it doesn't work or is slower.
# Setting them at boot time using hints works right (the optimizations
# are not used until later in the bootstrap when npx0 is attached).
# Flag 0x08 automatically disables the i586 optimized routines.
#

#
# Optional devices:
#

# PS/2 mouse
device		psm
hint.psm.0.at="atkbdc"
hint.psm.0.irq="12"

# Options for psm:
options 	PSM_HOOKRESUME		#hook the system resume event, useful
					#for some laptops
options 	PSM_RESETAFTERSUSPEND	#reset the device at the resume event

# The keyboard controller; it controls the keyboard and the PS/2 mouse.
device		atkbdc
hint.atkbdc.0.at="isa"
hint.atkbdc.0.port="0x060"

# The AT keyboard
device		atkbd
hint.atkbd.0.at="atkbdc"
hint.atkbd.0.irq="1"

# Options for atkbd:
options 	ATKBD_DFLT_KEYMAP	# specify the built-in keymap
makeoptions	ATKBD_DFLT_KEYMAP=jp.106

# `flags' for atkbd:
#       0x01    Force detection of keyboard, else we always assume a keyboard
#       0x02    Don't reset keyboard, useful for some newer ThinkPads
#	0x03	Force detection and avoid reset, might help with certain
#		dockingstations
#       0x04    Old-style (XT) keyboard support, useful for older ThinkPads

# Video card driver for VGA adapters.
device		vga
hint.vga.0.at="isa"

# Options for vga:
# Try the following option if the mouse pointer is not drawn correctly
# or font does not seem to be loaded properly.  May cause flicker on
# some systems.
options 	VGA_ALT_SEQACCESS

# If you can dispense with some vga driver features, you may want to
# use the following options to save some memory.
#options 	VGA_NO_FONT_LOADING	# don't save/load font
#options 	VGA_NO_MODE_CHANGE	# don't change video modes

# Older video cards may require this option for proper operation.
options 	VGA_SLOW_IOACCESS	# do byte-wide i/o's to TS and GDC regs

# The following option probably won't work with the LCD displays.
options 	VGA_WIDTH90		# support 90 column modes

# Debugging.
options 	VGA_DEBUG

# 3Dfx Voodoo Graphics, Voodoo II /dev/3dfx CDEV support.  This will create
# the /dev/3dfx0 device to work with glide implementations.  This should get
# linked to /dev/3dfx and /dev/voodoo.  Note that this is not the same as
# the tdfx DRI module from XFree86 and is completely unrelated.
#
# To enable Linuxulator support, one must also include COMPAT_LINUX in the
# config as well.  The other option is to load both as modules.

device		tdfx			# Enable 3Dfx Voodoo support
device		tdfx_linux		# Enable Linuxulator support

#
# ACPI support using the Intel ACPI Component Architecture reference
# implementation.
#
# ACPI_DEBUG enables the use of the debug.acpi.level and debug.acpi.layer
# kernel environment variables to select initial debugging levels for the
# Intel ACPICA code.  (Note that the Intel code must also have USE_DEBUGGER
# defined when it is built).
#
# ACPI_NO_SEMAPHORES makes the AcpiOs*Semaphore routines a no-op.
#
# Note that building ACPI into the kernel is deprecated; the module is
# normally loaded automatically by the loader.

device		acpi
options 	ACPI_DEBUG
#!options 	ACPI_NO_SEMAPHORES

# ACPI Asus Desktop Extras. (voltage, temp, fan)
device		acpi_aiboost

# ACPI Asus Extras (LCD backlight/brightness, video output, etc.)
device		acpi_asus

# ACPI Fujitsu Extras (Buttons)
device		acpi_fujitsu

# ACPI extras driver for IBM laptops
device         acpi_ibm

# ACPI Panasonic Extras (LCD backlight/brightness, video output, etc.)
device		acpi_panasonic

# ACPI Sony extra (LCD brightness)
device		acpi_sony

# ACPI Toshiba Extras (LCD backlight/brightness, video output, etc.)
device		acpi_toshiba

# ACPI Video Extensions (LCD backlight/brightness, video output, etc.)
device		acpi_video

# ACPI Docking Station
device		acpi_dock

# The cpufreq(4) driver provides support for non-ACPI CPU frequency control
device		cpufreq

# Direct Rendering modules for 3D acceleration.
device		drm		# DRM core module required by DRM drivers
device		i915drm		# Intel i830 through i915
device		mach64drm	# ATI Rage Pro, Rage Mobility P/M, Rage XL
device		mgadrm		# AGP Matrox G200, G400, G450, G550
device		r128drm		# ATI Rage 128
device		radeondrm	# ATI Radeon
device		savagedrm	# S3 Savage3D, Savage4
device		sisdrm		# SiS 300/305, 540, 630
device		tdfxdrm		# 3dfx Voodoo 3/4/5 and Banshee
options 	DRM_DEBUG	# Include debug printfs (slow)

#
# mse: Logitech and ATI InPort bus mouse ports

device		mse
hint.mse.0.at="isa"
hint.mse.0.port="0x23c"
hint.mse.0.irq="5"

#
# Network interfaces:
#

# ar:   Arnet SYNC/570i hdlc sync 2/4 port V.35/X.21 serial driver
#       (requires sppp)
# arl:	Aironet Arlan 655 wireless adapters.
# ath:  Atheros a/b/g WiFi adapters (requires ath_hal and wlan)
# ce:   Cronyx Tau-PCI/32 sync single/dual port G.703/E1 serial adaptor
#       with 32 HDLC subchannels (requires sppp (default), or NETGRAPH if
#       NETGRAPH_CRONYX is configured)
# cp:   Cronyx Tau-PCI sync single/dual/four port
#       V.35/RS-232/RS-530/RS-449/X.21/G.703/E1/E3/T3/STS-1
#       serial adaptor (requires sppp (default), or NETGRAPH if
#       NETGRAPH_CRONYX is configured)
# cs:   IBM Etherjet and other Crystal Semi CS89x0-based adapters
# ctau: Cronyx Tau sync dual port V.35/RS-232/RS-530/RS-449/X.21/G.703/E1
#       serial adaptor (requires sppp (default), or NETGRAPH if
#       NETGRAPH_CRONYX is configured)
# cx:   Cronyx Sigma multiport sync/async adapter (requires sppp (default),
#       or NETGRAPH if NETGRAPH_CRONYX is configured)
# ed:   Western Digital and SMC 80xx; Novell NE1000 and NE2000; 3Com 3C503
#       HP PC Lan+, various PC Card devices
#       (requires miibus)
# ie:   AT&T StarLAN 10 and EN100; 3Com 3C507; unknown NI5210;
#       Intel EtherExpress
# ipw:	Intel PRO/Wireless 2100 IEEE 802.11 adapter
# iwi:	Intel PRO/Wireless 2200BG/2225BG/2915ABG IEEE 802.11 adapters
# nfe:	nVidia nForce MCP on-board Ethernet Networking (BSD open source)
# nve:	nVidia nForce MCP on-board Ethernet Networking
# oltr: Olicom ISA token-ring adapters OC-3115, OC-3117, OC-3118 and OC-3133.
#       Olicom PCI token-ring adapters OC-3136, OC-3137, OC-3139, OC-3140,
#       OC-3141, OC-3540 and OC-3250.
# ral:	Ralink Technology IEEE 802.11 wireless adapter
# sbni: Granch SBNI12-xx ISA and PCI adapters
# sr:   RISCom/N2 hdlc sync 1/2 port V.35/X.21 serial driver (requires sppp)
# ural:	Ralink Technology RT2500USB IEEE 802.11 wireless adapter
# wl:   Lucent Wavelan (ISA card only).
# wpi:	Intel 3945ABG Wireless LAN controller

# Order for ISA/EISA devices is important here

device		ar
hint.ar.0.at="isa"
hint.ar.0.port="0x300"
hint.ar.0.irq="10"
hint.ar.0.maddr="0xd0000"
device		arl
hint.arl.0.at="isa"
hint.arl.0.irq="9"
hint.arl.0.maddr="0xd0000"
device		ce
device		cp
device		cs
hint.cs.0.at="isa"
hint.cs.0.port="0x300"
device		ctau
hint.ctau.0.at="isa"
hint.ctau.0.port="0x240"
hint.ctau.0.irq="15"
hint.ctau.0.drq="7"
device		cx
hint.cx.0.at="isa"
hint.cx.0.port="0x240"
hint.cx.0.irq="15"
hint.cx.0.drq="7"
#options 	NETGRAPH_CRONYX		# Enable NETGRAPH support for Cronyx adapter(s)
device		ed
options 	ED_3C503
options 	ED_HPP
options 	ED_SIC
hint.ed.0.at="isa"
hint.ed.0.port="0x280"
hint.ed.0.irq="5"
hint.ed.0.maddr="0xd8000"
device		ie			# Hints only required for Starlan
hint.ie.2.at="isa"
hint.ie.2.port="0x300"
hint.ie.2.irq="5"
hint.ie.2.maddr="0xd0000"
device		iwi
device		ipw
# Hint for the i386-only ISA front-end of le(4).
hint.le.0.at="isa"
hint.le.0.port="0x280"
hint.le.0.irq="10"
hint.le.0.drq="0"
device		nfe		# nVidia nForce MCP on-board Ethernet Networking
device		nve		# nVidia nForce MCP on-board Ethernet Networking
device		oltr
hint.oltr.0.at="isa"
device		ral
device		sbni
hint.sbni.0.at="isa"
hint.sbni.0.port="0x210"
hint.sbni.0.irq="0xefdead"
hint.sbni.0.flags="0"
device		sr
hint.sr.0.at="isa"
hint.sr.0.port="0x300"
hint.sr.0.irq="5"
hint.sr.0.maddr="0xd0000"
device		ural
device		wl
hint.wl.0.at="isa"
hint.wl.0.port="0x300"
options 	WLCACHE		# enables the signal-strength cache
options 	WLDEBUG		# enables verbose debugging output
device		wpi

device		ath
device		ath_hal		# Atheros HAL (includes binary component)
#device		ath_rate_amrr	# AMRR rate control for ath driver
#device		ath_rate_onoe	# Onoe rate control for ath driver
device		ath_rate_sample	# SampleRate rate control for the ath driver
#device		wlan		# 802.11 layer

#
# ATA raid adapters
#
device		pst

#
# Areca 11xx and 12xx series of SATA II RAID controllers.
# CAM is required.
#
device		arcmsr		# Areca SATA II RAID

#
# 3ware 9000 series PATA/SATA RAID controller driver and options.
# The driver is implemented as a SIM, and so, needs the CAM infrastructure.
#
options 	TWA_DEBUG		# 0-10; 10 prints the most messages.
options 	TWA_FLASH_FIRMWARE	# firmware image bundled when defined.
device		twa			# 3ware 9000 series PATA/SATA RAID

#
# SCSI host adapters:
#
# ncv: NCR 53C500 based SCSI host adapters.
# nsp: Workbit Ninja SCSI-3 based PC Card SCSI host adapters.
# stg: TMC 18C30, 18C50 based SCSI host adapters.

device		ncv
device		nsp
device		stg
hint.stg.0.at="isa"
hint.stg.0.port="0x140"
hint.stg.0.port="11"

#
# Adaptec FSA RAID controllers, including integrated DELL controllers,
# the Dell PERC 2/QC and the HP NetRAID-4M
device		aac
device		aacp	# SCSI Passthrough interface (optional, CAM required)

# The 'asr' driver provides support for current DPT/Adaptec SCSI RAID
# controllers (SmartRAID V and VI and later).
# These controllers require the CAM infrastructure.
#
device		asr

#
# Highpoint RocketRAID 182x.
device		hptmv

#
# Highpoint RocketRAID.  Supports RR172x, RR222x, RR2240, RR232x, RR2340,
# RR2210, RR174x, RR2522, RR231x, RR230x.
device		hptrr

#
# Highpoint RocketRaid 3xxx series SATA RAID
device		hptiop

#
# IBM (now Adaptec) ServeRAID controllers
device		ips

#
# SafeNet crypto driver: can be moved to the MI NOTES as soon as
# it's tested on a big-endian machine
#
device		safe		# SafeNet 1141
options 	SAFE_DEBUG	# enable debugging support: hw.safe.debug
options 	SAFE_RNDTEST	# enable rndtest support

#####################################################################

#
# Miscellaneous hardware:
#
# apm: Laptop Advanced Power Management (experimental)
# ipmi: Intelligent Platform Management Interface
# pmtimer: Timer device driver for power management events (APM or ACPI)
# smapi: System Management Application Program Interface driver
# smbios: DMI/SMBIOS entry point
# vpd: Vital Product Data kernel interface
# cy: Cyclades serial driver
# digi: Digiboard driver
# spic: Sony Programmable I/O controller (VAIO notebooks)

# Notes on APM
#  The flags takes the following meaning for apm0:
#    0x0020  Statclock is broken.

# Notes on the Specialix SI/XIO driver:
#  The host card is memory, not IO mapped.
#  The Rev 1 host cards use a 64K chunk, on a 32K boundary.
#  The Rev 2 host cards use a 32K chunk, on a 32K boundary.
#  The cards can use an IRQ of 11, 12 or 15.

# Notes on the Sony Programmable I/O controller
#  This is a temporary driver that should someday be replaced by something
#  that hooks into the ACPI layer.  The device is hooked to the PIIX4's
#  General Device 10 decoder, which means you have to fiddle with PCI
#  registers to map it in, even though it is otherwise treated here as
#  an ISA device.  At the moment, the driver polls, although the device
#  is capable of generating interrupts.  It largely undocumented.
#  The port location in the hint is where you WANT the device to be
#  mapped.  0x10a0 seems to be traditional.  At the moment the jogdial
#  is the only thing truly supported, but apparently a fair percentage
#  of the Vaio extra features are controlled by this device.

device		apm
hint.apm.0.flags="0x20"
device		ipmi
device		smapi
device		smbios
device		vpd
device		pmtimer			# Adjust system timer at wakeup time
device		cy
options 	CY_PCI_FASTINTR		# Use with cy_pci unless irq is shared
hint.cy.0.at="isa"
hint.cy.0.irq="10"
hint.cy.0.maddr="0xd4000"
hint.cy.0.msize="0x2000"
device		digi
hint.digi.0.at="isa"
hint.digi.0.port="0x104"
hint.digi.0.maddr="0xd0000"
# BIOS & FEP/OS components of device digi.
device		digi_CX
device		digi_CX_PCI
device		digi_EPCX
device		digi_EPCX_PCI
device		digi_Xe
device		digi_Xem
device		digi_Xr
# Parallel (8255 PPI) basic I/O (mode 0) port (e.g. Advantech PCL-724)
device		pbio
hint.pbio.0.at="isa"
hint.pbio.0.port="0x360"
device		spic
hint.spic.0.at="isa"
hint.spic.0.port="0x10a0"
# HOT1 Xilinx 6200 card (http://www.vcc.com/)
device		xrpu

#
# Laptop/Notebook options:
#
# See also:
#  apm under `Miscellaneous hardware'
# above.

# For older notebooks that signal a powerfail condition (external
# power supply dropped, or battery state low) by issuing an NMI:

options 	POWERFAIL_NMI	# make it beep instead of panicing

#
# I2C Bus
#
# Philips i2c bus support is provided by the `iicbus' device.
#
# Supported interfaces:
# pcf	Philips PCF8584 ISA-bus controller
#
device		pcf
hint.pcf.0.at="isa"
hint.pcf.0.port="0x320"
hint.pcf.0.irq="5"

#
# Hardware watchdog timers:
#
# ichwd: Intel ICH watchdog timer
#
device		ichwd

#
# Temperature sensors:
#
# coretemp: on-die sensor on Intel Core and newer CPUs
#
device		coretemp

#---------------------------------------------------------------------------
# ISDN4BSD
#
# See /usr/share/examples/isdn/ROADMAP for an introduction to isdn4bsd.
#
# i4b passive ISDN cards support contains the following hardware drivers:
#
#	isic  - Siemens/Infineon ISDN ISAC/HSCX/IPAC chipset driver
#	iwic  - Winbond W6692 PCI bus ISDN S/T interface controller
#	ifpi  - AVM Fritz!Card PCI driver
#	ifpi2  - AVM Fritz!Card PCI version 2 driver
#	ihfc  - Cologne Chip HFC ISA/ISA-PnP chipset driver
#	ifpnp - AVM Fritz!Card PnP driver
#	itjc  - Siemens ISAC / TJNet Tiger300/320 chipset
#
# i4b active ISDN cards support contains the following hardware drivers:
#
#	iavc  - AVM B1 PCI, AVM B1 ISA, AVM T1
#
# Note that the ``options'' (if given) and ``device'' lines must BOTH
# be uncommented to enable support for a given card !
#
# In addition to a hardware driver (and probably an option) the mandatory
# ISDN protocol stack devices and the mandatory support device must be
# enabled as well as one or more devices from the optional devices section.
#
#---------------------------------------------------------------------------
#	isic driver (Siemens/Infineon chipsets)
#
device	isic
#
# ISA bus non-PnP Cards:
# ----------------------
#
# Teles S0/8 or Niccy 1008
options 	TEL_S0_8
hint.isic.0.at="isa"
hint.isic.0.maddr="0xd0000"
hint.isic.0.irq="5"
hint.isic.0.flags="1"
#
# Teles S0/16 or Creatix ISDN-S0 or Niccy 1016
options 	TEL_S0_16
hint.isic.0.at="isa"
hint.isic.0.port="0xd80"
hint.isic.0.maddr="0xd0000"
hint.isic.0.irq="5"
hint.isic.0.flags="2"
#
# Teles S0/16.3
options 	TEL_S0_16_3
hint.isic.0.at="isa"
hint.isic.0.port="0xd80"
hint.isic.0.irq="5"
hint.isic.0.flags="3"
#
# AVM A1 or AVM Fritz!Card
options 	AVM_A1
hint.isic.0.at="isa"
hint.isic.0.port="0x340"
hint.isic.0.irq="5"
hint.isic.0.flags="4"
#
# USRobotics Sportster ISDN TA intern
options 	USR_STI
hint.isic.0.at="isa"
hint.isic.0.port="0x268"
hint.isic.0.irq="5"
hint.isic.0.flags="7"
#
# ITK ix1 Micro ( < V.3, non-PnP version )
options 	ITKIX1
hint.isic.0.at="isa"
hint.isic.0.port="0x398"
hint.isic.0.irq="10"
hint.isic.0.flags="18"
#
# ELSA PCC-16
options 	ELSA_PCC16
hint.isic.0.at="isa"
hint.isic.0.port="0x360"
hint.isic.0.irq="10"
hint.isic.0.flags="20"
#
# ISA bus PnP Cards:
# ------------------
#
# Teles S0/16.3 PnP
options 	TEL_S0_16_3_P
#
# Creatix ISDN-S0 P&P
options 	CRTX_S0_P
#
# Dr. Neuhaus Niccy Go@
options 	DRN_NGO
#
# Sedlbauer Win Speed
options 	SEDLBAUER
#
# Dynalink IS64PH
options 	DYNALINK
#
# ELSA QuickStep 1000pro ISA
options 	ELSA_QS1ISA
#
# Siemens I-Surf 2.0
options 	SIEMENS_ISURF2
#
# Asuscom ISDNlink 128K ISA
options 	ASUSCOM_IPAC
#
# Eicon Diehl DIVA 2.0 and 2.02
options 	EICON_DIVA
#
# Compaq Microcom 610 ISDN card (Compaq series PSB2222I)
options 	COMPAQ_M610
#
# PCI bus Cards:
# --------------
#
# ELSA MicroLink ISDN/PCI (same as ELSA QuickStep 1000pro PCI)
options 	ELSA_QS1PCI
#
#---------------------------------------------------------------------------
#	ifpnp driver for AVM Fritz!Card PnP
#
# AVM Fritz!Card PnP
device		ifpnp
#
#---------------------------------------------------------------------------
#	ihfc driver for Cologne Chip ISA chipsets (experimental!)
#
# Teles 16.3c ISA PnP
# AcerISDN P10 ISA PnP
# TELEINT ISDN SPEED No.1
device		ihfc
#
#---------------------------------------------------------------------------
#	ifpi driver for AVM Fritz!Card PCI
#
# AVM Fritz!Card PCI
device		ifpi
#
#---------------------------------------------------------------------------
#	ifpi2 driver for AVM Fritz!Card PCI version 2
#
# AVM Fritz!Card PCI version 2
device		ifpi2
#
#---------------------------------------------------------------------------
#	iwic driver for Winbond W6692 chipset
#
# ASUSCOM P-IN100-ST-D (and other Winbond W6692 based cards)
device		iwic
#
#---------------------------------------------------------------------------
#	itjc driver for Siemens ISAC / TJNet Tiger300/320 chipset
#
# Traverse Technologies NETjet-S
# Teles PCI-TJ
device		itjc
#
#---------------------------------------------------------------------------
#	iavc driver (AVM active cards, needs i4bcapi driver!)
#
device		iavc
#
# AVM B1 ISA bus (PnP mode not supported!)
# ----------------------------------------
hint.iavc.0.at="isa"
hint.iavc.0.port="0x150"
hint.iavc.0.irq="5"
#
#---------------------------------------------------------------------------
#	ISDN Protocol Stack - mandatory for all hardware drivers
#
# Q.921 / layer 2 - i4b passive cards D channel handling
device		i4bq921
#
# Q.931 / layer 3 - i4b passive cards D channel handling
device		i4bq931
#
# layer 4 - i4b common passive and active card handling
device		i4b
#
#---------------------------------------------------------------------------
#	ISDN devices - mandatory for all hardware drivers
#
# userland driver to do ISDN tracing (for passive cards only)
device		i4btrc
options 	NI4BTRC=4
#
# userland driver to control the whole thing
device		i4bctl
#
#---------------------------------------------------------------------------
#	ISDN devices - optional
#
# userland driver for access to raw B channel
device		i4brbch
options 	NI4BRBCH=4
#
# userland driver for telephony
device		i4btel
options 	NI4BTEL=2
#
#XXXBZ# IPR and ISPPP are not usable until I4B is locked.
# network driver for IP over raw HDLC ISDN
#XXXBZ#device		i4bipr
#XXXBZ#options 	NI4BIPR=4
# enable VJ header compression detection for ipr i/f
#XXXBZ#options 	IPR_VJ
# enable logging of the first n IP packets to isdnd (n=32 here)
#XXXBZ#options 	IPR_LOG=32
#
# network driver for sync PPP over ISDN; requires an equivalent
# number of sppp device to be configured
#XXXBZ#device		i4bisppp
#XXXBZ#options 	NI4BISPPP=4
#
# B-channel interface to the netgraph subsystem
#XXXBZ#device		i4bing
#XXXBZ#options 	NI4BING=2
#
# CAPI driver needed for active ISDN cards (see iavc driver above)
device		i4bcapi
#
#---------------------------------------------------------------------------

#
# System Management Bus (SMB)
#
options 	ENABLE_ALART		# Control alarm on Intel intpm driver

#
# Set the number of PV entries per process.  Increasing this can
# stop panics related to heavy use of shared memory.  However, that can
# (combined with large amounts of physical memory) cause panics at
# boot time due the kernel running out of VM space.
#
# If you're tweaking this, you might also want to increase the sysctls
# "vm.v_free_min", "vm.v_free_reserved", and "vm.v_free_target".
#
# The value below is the one more than the default.
#
options 	PMAP_SHPGPERPROC=201

#
# Change the size of the kernel virtual address space.  Due to
# constraints in loader(8) on i386, this must be a multiple of 4.
# 256 = 1 GB of kernel address space.  Increasing this also causes
# a reduction of the address space in user processes.  512 splits
# the 4GB cpu address space in half (2GB user, 2GB kernel).  For PAE
# kernels, the value will need to be double non-PAE.  A value of 1024
# for PAE kernels is necessary to split the address space in half.
# This will likely need to be increased to handle memory sizes >4GB.
# PAE kernels default to a value of 512.
#
options 	KVA_PAGES=260


#####################################################################
# ABI Emulation

# Enable iBCS2 runtime support for SCO and ISC binaries
options 	IBCS2

# Emulate spx device for client side of SVR3 local X interface
options 	SPX_HACK

# Enable Linux ABI emulation
options 	COMPAT_LINUX

# Enable i386 a.out binary support
options 	COMPAT_AOUT

# Enable the linux-like proc filesystem support (requires COMPAT_LINUX
# and PSEUDOFS)
options 	LINPROCFS

#Enable the linux-like sys filesystem support (requires COMPAT_LINUX
# and PSEUDOFS)
options		LINSYSFS

#
# SysVR4 ABI emulation
#
# The svr4 ABI emulator can be statically compiled into the kernel or loaded as
# a KLD module.
# The STREAMS network emulation code can also be compiled statically or as a
# module.  If loaded as a module, it must be loaded before the svr4 module
# (the /usr/sbin/svr4 script does this for you).  If compiling statically,
# the `streams' device must be configured into any kernel which also
# specifies COMPAT_SVR4.  It is possible to have a statically-configured
# STREAMS device and a dynamically loadable svr4 emulator;  the /usr/sbin/svr4
# script understands that it doesn't need to load the `streams' module under
# those circumstances.
# Caveat:  At this time, `options KTRACE' is required for the svr4 emulator
# (whether static or dynamic).
#
options 	COMPAT_SVR4	# build emulator statically
options 	DEBUG_SVR4	# enable verbose debugging
device		streams		# STREAMS network driver (required for svr4).

# Enable NDIS binary driver support
options 	NDISAPI
device		ndis


#####################################################################
# VM OPTIONS

# Disable the 4 MByte page PSE CPU feature.  The PSE feature allows the
# kernel to use 4 MByte pages to map the kernel instead of 4k pages.
# This saves on the amount of memory needed for page tables needed to
# map the kernel.  You should only disable this feature as a temporary
# workaround if you are having problems with it enabled.
#
#options 	DISABLE_PSE

# Disable the global pages PGE CPU feature.  The PGE feature allows pages
# to be marked with the PG_G bit.  TLB entries for these pages are not
# flushed from the cache when %cr3 is reloaded.  This can make context
# switches less expensive.  You should only disable this feature as a
# temporary workaround if you are having problems with it enabled.
#
#options 	DISABLE_PG_G

# KSTACK_PAGES is the number of memory pages to assign to the kernel
# stack of each thread.

options 	KSTACK_PAGES=3

#####################################################################

# More undocumented options for linting.
# Note that documenting these are not considered an affront.

options 	FB_INSTALL_CDEV		# install a CDEV entry in /dev

# PECOFF module (Win32 Execution Format)
options 	PECOFF_SUPPORT
options 	PECOFF_DEBUG

options 	I4B_SMP_WORKAROUND
options 	I586_PMC_GUPROF=0x70000
options 	KBDIO_DEBUG=2
options 	KBD_MAXRETRY=4
options 	KBD_MAXWAIT=6
options 	KBD_RESETDELAY=201

options 	PSM_DEBUG=1

options 	TIMER_FREQ=((14318182+6)/12)

options 	VM_KMEM_SIZE
options 	VM_KMEM_SIZE_MAX
options 	VM_KMEM_SIZE_SCALE


# asr old ioctls support, needed by raidutils

options		ASR_COMPAT
