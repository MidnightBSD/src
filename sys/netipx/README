$FreeBSD$

This protocol implements IPX/SPX over Ethernet_II frame type 0x8137.
Please note: the SPX implementation may require further work and testing
to insure proper operation.

Mike Mitchell, Network Engineer
AMTECH Systems Corporation, Technology and Manufacturing
8600 Jefferson Street, Albuquerque, New Mexico 87113 (505) 856-8000
supervisor@alb.asctmd.com

John Hay
Some Company
Some Address
jhay@mikom.csir.co.za

Adapted for multi-processor, multi-threaded network stack by Robert N. M.
Watson, Computer Laboratory, University of Cambridge.

--- Copyright Information ---
/*-

Copyright (c) 1984, 1985, 1986, 1987, 1993
The Regents of the University of California.  All rights reserved.

Modifications Copyright (c) 1995, Mike Mitchell
Modifications Copyright (c) 1995, John Hay
Modifications Copyright (c) 2004-2009 Robert N. M. Watson

*/

--- TODO ---

(1) netipx default socket buffer sizes are very small by contemporary
    standards, and should be increased following testing and measurement.

(2) SPX will free the PCB and socket buffer memory on close(), which means
    close() in effects terminates the transfer of any outstanding buffered
    but unsent data.  As with TCP, it should instead grab its own
    reference to the socket so that it is not released, as hold onto it
    until the data transfer is complete.
