.\"
.\" Copyright (c) 2003 Bruce M Simpson <bms@spc.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: release/7.0.0/share/man/man9/vm_map_find.9 147647 2005-06-28 20:15:19Z hmp $
.\"
.Dd July 19, 2003
.Dt VM_MAP_FIND 9
.Os
.Sh NAME
.Nm vm_map_find
.Nd find a free region within a map, and optionally map a vm_object
.Sh SYNOPSIS
.In sys/param.h
.In vm/vm.h
.In vm/vm_map.h
.Ft int
.Fo vm_map_find
.Fa "vm_map_t map" "vm_object_t object" "vm_ooffset_t offset"
.Fa "vm_offset_t *addr" "vm_size_t length" "boolean_t find_space"
.Fa "vm_prot_t prot" "vm_prot_t max" "int cow"
.Fc
.Sh DESCRIPTION
The
.Fn vm_map_find
function attempts to find a free region in the target
.Fa map ,
with the given
.Fa length ,
and will also optionally create a mapping of
.Fa object .
.Pp
The arguments
.Fa offset ,
.Fa prot ,
.Fa max ,
and
.Fa cow
are passed unchanged to
.Xr vm_map_insert 9
when creating the mapping, if and only if a free region is found.
.Pp
If
.Fa object
is
.Pf non- Dv NULL ,
the reference count on the object must be incremented
by the caller before calling this function to account for the new entry.
.Pp
If
.Fa find_space
is
.Dv TRUE ,
the function will call
.Xr vm_map_findspace 9
to discover a free region.
.Sh IMPLEMENTATION NOTES
This function acquires a lock on
.Fa map
by calling
.Xr vm_map_lock 9 ,
and holds it until the function returns.
.Pp
The search for a free region is defined to be first-fit, from the address
.Fa addr
onwards.
.Sh RETURN VALUES
The
.Fn vm_map_find
function returns
.Dv KERN_SUCCESS
if space for the mapping could be found and
the mapping was successfully created.
If space could not be found in the map,
.Dv KERN_NO_SPACE
will be returned.
If the discovered range turned out to be bogus,
.Dv KERN_INVALID_ADDRESS
will be returned.
.Sh SEE ALSO
.Xr vm_map 9 ,
.Xr vm_map_findspace 9 ,
.Xr vm_map_insert 9 ,
.Xr vm_map_lock 9
.Sh AUTHORS
This manual page was written by
.An Bruce M Simpson Aq bms@spc.org .
