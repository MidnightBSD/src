'\" te
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\" Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.TH zpool 1M "14 Nov 2006" "SunOS 5.11" "System Administration Commands"
.SH NAME
zpool \- configures ZFS storage pools
.SH SYNOPSIS
.LP
.nf
\fBzpool\fR [\fB-?\fR]
.fi

.LP
.nf
\fBzpool create\fR [\fB-fn\fR] [\fB-R\fR \fIroot\fR] [\fB-m\fR \fImountpoint\fR] \fIpool\fR \fIvdev ...\fR
.fi

.LP
.nf
\fBzpool destroy\fR [\fB-f\fR] \fIpool\fR
.fi

.LP
.nf
\fBzpool add\fR [\fB-fn\fR] \fIpool\fR \fIvdev\fR
.fi

.LP
.nf
\fBzpool remove\fR \fIpool\fR \fIvdev\fR
.fi

.LP
.nf
\fBzpool \fR \fBlist\fR [\fB-H\fR] [\fB-o\fR \fIfield\fR[,\fIfield\fR]*] [\fIpool\fR] ...
.fi

.LP
.nf
\fBzpool iostat\fR [\fB-v\fR] [\fIpool\fR] ... [\fIinterval\fR [\fIcount\fR]]
.fi

.LP
.nf
\fBzpool status\fR [\fB-xv\fR] [\fIpool\fR] ...
.fi

.LP
.nf
\fBzpool offline\fR [\fB-t\fR] \fIpool\fR \fIdevice\fR ...
.fi

.LP
.nf
\fBzpool online\fR \fIpool\fR \fIdevice\fR ...
.fi

.LP
.nf
\fBzpool clear\fR \fIpool\fR [\fIdevice\fR] ...
.fi

.LP
.nf
\fBzpool attach\fR [\fB-f\fR] \fIpool\fR \fIdevice\fR \fInew_device\fR
.fi

.LP
.nf
\fBzpool detach\fR \fIpool\fR \fIdevice\fR
.fi

.LP
.nf
\fBzpool replace\fR [\fB-f\fR] \fIpool\fR \fIdevice\fR [\fInew_device\fR]
.fi

.LP
.nf
\fBzpool scrub\fR [\fB-s\fR] \fIpool\fR ...
.fi

.LP
.nf
\fBzpool export\fR [\fB-f\fR] \fIpool\fR
.fi

.LP
.nf
\fBzpool import\fR [\fB-d\fR \fIdir\fR] [\fB-D\fR]
.fi

.LP
.nf
\fBzpool import\fR [\fB-d\fR \fIdir\fR] [\fB-D\fR] [\fB-f\fR] [\fB-o \fIopts\fR\fR] [\fB-R \fR\fIroot\fR] \fIpool\fR | \fIid\fR 
    [\fInewpool\fR]
.fi

.LP
.nf
\fBzpool import\fR [\fB-d\fR \fIdir\fR] [\fB-D\fR] [\fB-f\fR] [\fB-a\fR]
.fi

.LP
.nf
\fBzpool upgrade\fR 
.fi

.LP
.nf
\fBzpool upgrade\fR \fB-v\fR
.fi

.LP
.nf
\fBzpool upgrade\fR [\fB-a\fR | \fIpool\fR]
.fi

.LP
.nf
\fBzpool history\fR [\fIpool\fR] ...
.fi

.SH DESCRIPTION
.LP
The \fBzpool\fR command configures \fBZFS\fR storage pools. A storage pool is a collection of devices that provides physical storage and data replication for \fBZFS\fR datasets.
.LP
All datasets within a storage pool share the same space. See \fBzfs\fR(1M) for information on managing datasets. 
.SS "Virtual Devices (vdevs)"
.LP
A "virtual device" describes a single device or a collection of devices organized according to certain performance and fault characteristics. The following virtual devices are supported:
.sp
.ne 2
.mk
.na
\fBdisk\fR
.ad
.RS 10n
.rt  
A block device, typically located under "/dev/dsk". \fBZFS\fR can use individual slices or partitions, though the recommended mode of operation is to use whole disks. A disk can be specified by a full path, or it can be a shorthand name (the relative portion
of the path under "/dev/dsk"). A whole disk can be specified by omitting the slice or partition designation. For example, "c0t0d0" is equivalent to "/dev/dsk/c0t0d0s2". When given a whole disk, \fBZFS\fR automatically labels the disk, if necessary.
.RE

.sp
.ne 2
.mk
.na
\fBfile\fR
.ad
.RS 10n
.rt  
A regular file. The use of files as a backing store is strongly discouraged. It is designed primarily for experimental purposes, as the fault tolerance of a file is only as good as the file system of which it is a part. A file must be specified by a full path.
.RE

.sp
.ne 2
.mk
.na
\fBmirror\fR
.ad
.RS 10n
.rt  
A mirror of two or more devices. Data is replicated in an identical fashion across all components of a mirror. A mirror with \fIN\fR disks of size \fIX\fR can hold \fIX\fR bytes and can withstand (\fIN-1\fR)
devices failing before data integrity is compromised.
.RE

.sp
.ne 2
.mk
.na
\fBraidz\fR
.ad
.br
.na
\fBraidz1\fR
.ad
.br
.na
\fBraidz2\fR
.ad
.RS 10n
.rt  
A variation on \fBRAID-5\fR that allows for better distribution of parity and eliminates the "\fBRAID-5\fR write hole" (in which data and parity become inconsistent after a power loss). Data and parity is striped across all disks within a \fBraidz\fR group.
.sp
A \fBraidz\fR group can have either single- or double-parity, meaning that the \fBraidz\fR group can sustain one or two failures respectively without losing any data. The \fBraidz1\fR \fBvdev\fR type specifies a single-parity \fBraidz\fR group
and the \fBraidz2\fR \fBvdev\fR type specifies a double-parity \fBraidz\fR group. The \fBraidz\fR \fBvdev\fR type is an alias for \fBraidz1\fR.
.sp
A \fBraidz\fR group with \fIN\fR disks of size \fIX\fR with \fIP\fR parity disks can hold approximately (\fIN-P\fR)*\fIX\fR bytes and can withstand one device failing before
data integrity is compromised. The minimum number of devices in a \fBraidz\fR group is one more than the number of parity disks. The recommended number is between 3 and 9.
.RE

.sp
.ne 2
.mk
.na
\fBspare\fR
.ad
.RS 10n
.rt  
A special pseudo-\fBvdev\fR which keeps track of available hot spares for a pool. For more information, see the "Hot Spares" section.
.RE

.LP
Virtual devices cannot be nested, so a mirror or \fBraidz\fR virtual device can only contain files or disks. Mirrors of mirrors (or other combinations) are not allowed.
.LP
A pool can have any number of virtual devices at the top of the configuration (known as "root vdevs"). Data is dynamically distributed across all top-level devices to balance data among devices. As new virtual devices are added, \fBZFS\fR automatically places data
on the newly available devices.
.LP
Virtual devices are specified one at a time on the command line, separated by whitespace. The keywords "mirror" and "raidz" are used to distinguish where a group ends and another begins. For example, the following creates two root vdevs, each a mirror of two disks:
.sp
.in +2
.nf
\fB# zpool create mypool mirror c0t0d0 c0t1d0 mirror c1t0d0 c1t1d0\fR
.fi
.in -2
.sp

.SS "Device Failure and Recovery"
.LP
\fBZFS\fR supports a rich set of mechanisms for handling device failure and data corruption. All metadata and data is checksummed, and \fBZFS\fR automatically repairs bad data from a good copy when corruption is detected.
.LP
In order to take advantage of these features, a pool must make use of some form of redundancy, using either mirrored or \fBraidz\fR groups. While \fBZFS\fR supports running in a non-redundant configuration, where each root vdev is simply a disk or file, this is
strongly discouraged. A single case of bit corruption can render some or all of your data unavailable.
.LP
A pool's health status is described by one of three states: online, degraded, or faulted. An online pool has all devices operating normally. A degraded pool is one in which one or more devices have failed, but the data is still available due to a redundant configuration. A faulted pool has
one or more failed devices, and there is insufficient redundancy to replicate the missing data.
.SS "Hot Spares"
.LP
\fBZFS\fR allows devices to be associated with pools as "hot spares". These devices are not actively used in the pool, but when an active device fails, it is automatically replaced by a hot spare. To create a pool with hot spares, specify a "spare" \fBvdev\fR with any number of devices. For example, 
.sp
.in +2
.nf
# zpool create pool mirror c0d0 c1d0 spare c2d0 c3d0
.fi
.in -2
.sp

.LP
Spares can be shared across multiple pools, and can be added with the "zpool add" command and removed with the "zpool remove" command. Once a spare replacement is initiated, a new "spare" \fBvdev\fR is created within the configuration that
will remain there until the original device is replaced. At this point, the hot spare becomes available again if another device fails.
.LP
An in-progress spare replacement can be cancelled by detaching the hot spare. If the original faulted device is detached, then the hot spare assumes its place in the configuration, and is removed from the spare list of all active pools.
.SS "Alternate Root Pools"
.LP
The "zpool create -R" and "zpool import -R" commands allow users to create and import a pool with a different root path. By default, whenever a pool is created or imported on a system, it is permanently added so that it is available whenever the system boots. For
removable media, or when in recovery situations, this may not always be desirable. An alternate root pool does not persist on the system. Instead, it exists only until exported or the system is rebooted, at which point it will have to be imported again.
.LP
In addition, all mount points in the pool are prefixed with the given root, so a pool can be constrained to a particular area of the file system. This is most useful when importing unknown pools from removable media, as the mount points of any file systems cannot be trusted.
.LP
When creating an alternate root pool, the default mount point is "/", rather than the normal default "/\fIpool\fR".
.SS "Subcommands"
.LP
All subcommands that modify state are logged persistently to the pool in their original form.
.LP
The \fBzpool\fR command provides subcommands to create and destroy storage pools, add capacity to storage pools, and provide information about the storage pools. The following subcommands are supported:
.sp
.ne 2
.mk
.na
\fB\fBzpool\fR \fB-?\fR\fR
.ad
.sp .6
.RS 4n
Displays a help message.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool create\fR [\fB-fn\fR] [\fB-R\fR \fIroot\fR] [\fB-m\fR \fImountpoint\fR] \fIpool\fR \fIvdev ...\fR\fR
.ad
.sp .6
.RS 4n
Creates a new storage pool containing the virtual devices specified on the command line. The pool name must begin with a letter, and can only contain alphanumeric characters as well as underscore ("_"), dash ("-"), and period ("."). The pool
names "mirror", "raidz", and "spare" are reserved, as are names beginning with the pattern "c[0-9]". The \fBvdev\fR specification is described in the "Virtual Devices" section.
.sp
The command verifies that each device specified is accessible and not currently in use by another subsystem. There are some uses, such as being currently mounted, or specified as the dedicated dump device, that prevents a device from ever being used by \fBZFS\fR. Other uses,
such as having a preexisting \fBUFS\fR file system, can be overridden with the \fB-f\fR option.
.sp
The command also checks that the replication strategy for the pool is consistent. An attempt to combine redundant and non-redundant storage in a single pool, or to mix disks and files, results in an error unless \fB-f\fR is specified. The use of differently sized devices within
a single \fBraidz\fR or mirror group is also flagged as an error unless \fB-f\fR is specified.
.sp
Unless the \fB-R\fR option is specified, the default mount point is "/\fIpool\fR". The mount point must not exist or must be empty, or else the root dataset cannot be mounted. This can be overridden with the \fB-m\fR option.
.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 17n
.rt  
Forces use of \fBvdev\fRs, even if they appear in use or specify a conflicting replication level. Not all devices can be overridden in this manner.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 17n
.rt  
Displays the configuration that would be used without actually creating the pool. The actual pool creation can still fail due to insufficient privileges or device sharing.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-R\fR \fIroot\fR\fR
.ad
.RS 17n
.rt  
Creates the pool with an alternate \fIroot\fR. See the "Alternate Root Pools" section. The root dataset has its mount point set to "/" as part of this operation.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-m\fR \fImountpoint\fR\fR
.ad
.RS 17n
.rt  
Sets the mount point for the root dataset. The default mount point is "/\fIpool\fR". The mount point must be an absolute path, "\fBlegacy\fR", or "\fBnone\fR". For more information on dataset mount
points, see \fBzfs\fR(1M).
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool destroy\fR [\fB-f\fR] \fIpool\fR\fR
.ad
.sp .6
.RS 4n
Destroys the given pool, freeing up any devices for other use. This command tries to unmount any active datasets before destroying the pool.
.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 6n
.rt  
Forces any active datasets contained within the pool to be unmounted.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool add\fR [\fB-fn\fR] \fIpool\fR \fIvdev ...\fR\fR
.ad
.sp .6
.RS 4n
Adds the specified virtual devices to the given pool. The \fIvdev\fR specification is described in the "Virtual Devices" section. The behavior of the \fB-f\fR option, and the device checks performed are described in the "zpool create"
subcommand.
.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 6n
.rt  
Forces use of \fBvdev\fRs, even if they appear in use or specify a conflicting replication level. Not all devices can be overridden in this manner.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-n\fR\fR
.ad
.RS 6n
.rt  
Displays the configuration that would be used without actually adding the \fBvdev\fRs. The actual pool creation can still fail due to insufficient privileges or device sharing.
.RE

Do not add a disk that is currently configured as a quorum device to a zpool. Once a disk is in a zpool, that disk can then be configured as a quorum device.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool remove\fR \fIpool\fR \fIvdev\fR\fR
.ad
.sp .6
.RS 4n
Removes the given \fBvdev\fR from the pool. This command currently only supports removing hot spares. Devices which are part of a mirror can be removed using the "zpool detach" command. \fBRaidz\fR and top-level \fBvdevs\fR cannot
be removed from a pool.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool list\fR [\fB-H\fR] [\fB-o\fR \fIfield\fR[,\fIfield*\fR]] [\fIpool\fR] ...\fR
.ad
.sp .6
.RS 4n
Lists the given pools along with a health status and space usage. When given no arguments, all pools in the system are listed.
.sp
.ne 2
.mk
.na
\fB\fB-H\fR\fR
.ad
.RS 12n
.rt  
Scripted mode. Do not display headers, and separate fields by a single tab instead of arbitrary space.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fIfield\fR\fR
.ad
.RS 12n
.rt  
Comma-separated list of fields to display. Each field must be one of:
.sp
.in +2
.nf
name            Pool name
size            Total size
used            Amount of space used
available       Amount of space available
capacity        Percentage of pool space used
health          Health status
.fi
.in -2
.sp

The default is all fields.
.RE

This command reports actual physical space available to the storage pool. The physical space can be different from the total amount of space that any contained datasets can actually use. The amount of space used in a \fBraidz\fR configuration depends on the characteristics of
the data being written. In addition, \fBZFS\fR reserves some space for internal accounting that the \fBzfs\fR(1M) command takes into account, but the \fBzpool\fR command does not. For non-full pools of a reasonable size, these effects should be invisible. For small pools, or pools that are close to being completely full, these discrepancies may become more noticeable.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool iostat\fR [\fB-v\fR] [\fIpool\fR] ... [\fIinterval\fR [\fIcount\fR]]\fR
.ad
.sp .6
.RS 4n
Displays \fBI/O\fR statistics for the given pools. When given an interval, the statistics are printed every \fIinterval\fR seconds until \fBCtrl-C\fR is pressed. If no \fIpools\fR are specified, statistics for
every pool in the system is shown. If \fIcount\fR is specified, the command exits after \fIcount\fR reports are printed.
.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 6n
.rt  
Verbose statistics. Reports usage statistics for individual \fIvdevs\fR within the pool, in addition to the pool-wide statistics.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool status\fR [\fB-xv\fR] [\fIpool\fR] ...\fR
.ad
.sp .6
.RS 4n
Displays the detailed health status for the given pools. If no \fIpool\fR is specified, then the status of each pool in the system is displayed.
.sp
If a scrub or resilver is in progress, this command reports the percentage done and the estimated time to completion. Both of these are only approximate, because the amount of data in the pool and the other workloads on the system can change.
.sp
.ne 2
.mk
.na
\fB\fB-x\fR\fR
.ad
.RS 6n
.rt  
Only display status for pools that are exhibiting errors or are otherwise unavailable.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 6n
.rt  
Displays verbose data error information, printing out a complete list of all data errors since the last complete pool scrub.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool offline\fR [\fB-t\fR] \fIpool\fR \fIdevice\fR ...\fR
.ad
.sp .6
.RS 4n
Takes the specified physical device offline. While the \fIdevice\fR is offline, no attempt is made to read or write to the device.
.sp
This command is not applicable to spares.
.sp
.ne 2
.mk
.na
\fB\fB-t\fR\fR
.ad
.RS 6n
.rt  
Temporary. Upon reboot, the specified physical device reverts to its previous state.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool online\fR \fIpool\fR \fIdevice\fR ...\fR
.ad
.sp .6
.RS 4n
Brings the specified physical device online.
.sp
This command is not applicable to spares.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool clear\fR \fIpool\fR [\fIdevice\fR] ...\fR
.ad
.sp .6
.RS 4n
Clears device errors in a pool. If no arguments are specified, all device errors within the pool are cleared. If one or more devices is specified, only those errors associated with the specified device or devices are cleared.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool attach\fR [\fB-f\fR] \fIpool\fR \fIdevice\fR \fInew_device\fR\fR
.ad
.sp .6
.RS 4n
Attaches \fInew_device\fR to an existing \fBzpool\fR device. The existing device cannot be part of a \fBraidz\fR configuration. If \fIdevice\fR is not currently part of a mirrored configuration, \fIdevice\fR automatically
transforms into a two-way mirror of \fIdevice\fR and \fInew_device\fR. If \fIdevice\fR is part of a two-way mirror, attaching \fInew_device\fR creates a three-way mirror, and so on. In either case, \fInew_device\fR begins to resilver immediately.
.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 6n
.rt  
Forces use of \fInew_device\fR, even if its appears to be in use. Not all devices can be overridden in this manner.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool detach\fR \fIpool\fR \fIdevice\fR\fR
.ad
.sp .6
.RS 4n
Detaches \fIdevice\fR from a mirror. The operation is refused if there are no other valid replicas of the data.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool replace\fR [\fB-f\fR] \fIpool\fR \fIold_device\fR [\fInew_device\fR]\fR
.ad
.sp .6
.RS 4n
Replaces \fIold_device\fR with \fInew_device\fR. This is equivalent to attaching \fInew_device\fR, waiting for it to resilver, and then detaching \fIold_device\fR.
.sp
The size of \fInew_device\fR must be greater than or equal to the minimum size of all the devices in a mirror or \fBraidz\fR configuration.
.sp
If \fInew_device\fR is not specified, it defaults to \fIold_device\fR. This form of replacement is useful after an existing disk has failed and has been physically replaced. In this case, the new disk may have the same \fB/dev/dsk\fR path
as the old device, even though it is actually a different disk. \fBZFS\fR recognizes this.
.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 6n
.rt  
Forces use of \fInew_device\fR, even if its appears to be in use. Not all devices can be overridden in this manner.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool scrub\fR [\fB-s\fR] \fIpool\fR ...\fR
.ad
.sp .6
.RS 4n
Begins a scrub. The scrub examines all data in the specified pools to verify that it checksums correctly. For replicated (mirror or \fBraidz\fR) devices, \fBZFS\fR automatically repairs any damage discovered during the scrub. The "\fBzpool
status\fR" command reports the progress of the scrub and summarizes the results of the scrub upon completion.
.sp
Scrubbing and resilvering are very similar operations. The difference is that resilvering only examines data that \fBZFS\fR knows to be out of date (for example, when attaching a new device to a mirror or replacing an existing device), whereas scrubbing examines all data to
discover silent errors due to hardware faults or disk failure.
.sp
Because scrubbing and resilvering are \fBI/O\fR-intensive operations, \fBZFS\fR only allows one at a time. If a scrub is already in progress, the "\fBzpool scrub\fR" command terminates it and starts a new scrub. If a resilver is in progress, \fBZFS\fR does not allow a scrub to be started until the resilver completes.
.sp
.ne 2
.mk
.na
\fB\fB-s\fR\fR
.ad
.RS 6n
.rt  
Stop scrubbing.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool export\fR [\fB-f\fR] \fIpool\fR ...\fR
.ad
.sp .6
.RS 4n
Exports the given pools from the system. All devices are marked as exported, but are still considered in use by other subsystems. The devices can be moved between systems (even those of different endianness) and imported as long as a sufficient number of devices are present.
.sp
Before exporting the pool, all datasets within the pool are unmounted.
.sp
For pools to be portable, you must give the \fBzpool\fR command whole disks, not just slices, so that \fBZFS\fR can label the disks with portable \fBEFI\fR labels. Otherwise, disk drivers on platforms of different endianness will not recognize the disks.
.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 6n
.rt  
Forcefully unmount all datasets, using the "\fBunmount -f\fR" command.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool import\fR [\fB-d\fR \fIdir\fR] [\fB-D\fR]\fR
.ad
.sp .6
.RS 4n
Lists pools available to import. If the \fB-d\fR option is not specified, this command searches for devices in "/dev/dsk". The \fB-d\fR option can be specified multiple times, and all directories are searched. If the device appears to be part of
an exported pool, this command displays a summary of the pool with the name of the pool, a numeric identifier, as well as the \fIvdev\fR layout and current health of the device for each device or file. Destroyed pools, pools that were previously destroyed with the "\fB-zpool destroy\fR" command, are not listed unless the \fB-D\fR option is specified. 
.sp
The numeric identifier is unique, and can be used instead of the pool name when multiple exported pools of the same name are available.
.sp
.ne 2
.mk
.na
\fB\fB-d\fR \fIdir\fR\fR
.ad
.RS 10n
.rt  
Searches for devices or files in \fIdir\fR. The \fB-d\fR option can be specified multiple times.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-D\fR\fR
.ad
.RS 10n
.rt  
Lists destroyed pools only.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool import\fR [\fB-d\fR \fIdir\fR] [\fB-D\fR] [\fB-f\fR] [\fB-o\fR \fIopts\fR] [\fB-R\fR \fIroot\fR] \fIpool\fR | \fIid\fR [\fInewpool\fR]\fR
.ad
.sp .6
.RS 4n
Imports a specific pool. A pool can be identified by its name or the numeric identifier. If \fInewpool\fR is specified, the pool is imported using the name \fInewpool\fR. Otherwise, it is imported with the same name as its exported name.
.sp
If a device is removed from a system without running "\fBzpool export\fR" first, the device appears as potentially active. It cannot be determined if this was a failed export, or whether the device is really in use from another host. To import a pool in this state,
the \fB-f\fR option is required.
.sp
.ne 2
.mk
.na
\fB\fB-d\fR \fIdir\fR\fR
.ad
.RS 11n
.rt  
Searches for devices or files in \fIdir\fR. The \fB-d\fR option can be specified multiple times.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-D\fR\fR
.ad
.RS 11n
.rt  
Imports destroyed pool. The \fB-f\fR option is also required.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 11n
.rt  
Forces import, even if the pool appears to be potentially active.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR \fIopts\fR\fR
.ad
.RS 11n
.rt  
Comma-separated list of mount options to use when mounting datasets within the pool. See \fBzfs\fR(1M) for a description of dataset properties and mount
options.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-R\fR \fIroot\fR\fR
.ad
.RS 11n
.rt  
Imports pool(s) with an alternate \fIroot\fR. See the "Alternate Root Pools" section.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool import\fR [\fB-d\fR \fIdir\fR] [\fB-D\fR] [\fB-f\fR] [\fB-a\fR]\fR
.ad
.sp .6
.RS 4n
Imports all pools found in the search directories. Identical to the previous command, except that all pools with a sufficient number of devices available are imported. Destroyed pools, pools that were previously destroyed with the "\fB-zpool destroy\fR" command,
will not be imported unless the \fB-D\fR option is specified.
.sp
.ne 2
.mk
.na
\fB\fB-d\fR \fIdir\fR\fR
.ad
.RS 10n
.rt  
Searches for devices or files in \fIdir\fR. The \fB-d\fR option can be specified multiple times.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-D\fR\fR
.ad
.RS 10n
.rt  
Imports destroyed pools only. The \fB-f\fR option is also required.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-f\fR\fR
.ad
.RS 10n
.rt  
Forces import, even if the pool appears to be potentially active.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool upgrade\fR\fR
.ad
.sp .6
.RS 4n
Displays all pools formatted using a different \fBZFS\fR on-disk version. Older versions can continue to be used, but some features may not be available. These pools can be upgraded using "\fBzpool upgrade -a\fR". Pools that are formatted with
a more recent version are also displayed, although these pools will be inaccessible on the system.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool upgrade\fR \fB-v\fR\fR
.ad
.sp .6
.RS 4n
Displays \fBZFS\fR versions supported by the current software. The current \fBZFS\fR versions and all previous supportedversions are displayed, along with an explanation of the features provided with each version.
.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool upgrade\fR [\fB-a\fR | \fIpool\fR]\fR
.ad
.sp .6
.RS 4n
Upgrades the given pool to the latest on-disk version. Once this is done, the pool will no longer be accessible on systems running older versions of the software.
.sp
.ne 2
.mk
.na
\fB\fB-a\fR\fR
.ad
.RS 6n
.rt  
Upgrades all pools.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBzpool history\fR [\fIpool\fR] ...\fR
.ad
.sp .6
.RS 4n
Displays the command history of the specified pools (or all pools if no pool is specified).
.RE

.SH EXAMPLES
.LP
\fBExample 1 \fRCreating a RAID-Z Storage Pool
.LP
The following command creates a pool with a single \fBraidz\fR root \fIvdev\fR that consists of six disks.

.sp
.in +2
.nf
\fB# zpool create tank raidz c0t0d0 c0t1d0 c0t2d0 c0t3d0 c0t4d0 c0t5d0\fR
.fi
.in -2
.sp

.LP
\fBExample 2 \fRCreating a Mirrored Storage Pool
.LP
The following command creates a pool with two mirrors, where each mirror contains two disks.

.sp
.in +2
.nf
\fB# zpool create tank mirror c0t0d0 c0t1d0 mirror c0t2d0 c0t3d0\fR
.fi
.in -2
.sp

.LP
\fBExample 3 \fRCreating a ZFS Storage Pool by Using Slices
.LP
The following command creates an unmirrored pool using two disk slices.

.sp
.in +2
.nf
\fB# zpool create tank /dev/dsk/c0t0d0s1 c0t1d0s4\fR
.fi
.in -2
.sp

.LP
\fBExample 4 \fRCreating a ZFS Storage Pool by Using Files
.LP
The following command creates an unmirrored pool using files. While not recommended, a pool based on files can be useful for experimental purposes.

.sp
.in +2
.nf
\fB# zpool create tank /path/to/file/a /path/to/file/b\fR
.fi
.in -2
.sp

.LP
\fBExample 5 \fRAdding a Mirror to a ZFS Storage Pool
.LP
The following command adds two mirrored disks to the pool "\fItank\fR", assuming the pool is already made up of two-way mirrors. The additional space is immediately available to any datasets within the pool.

.sp
.in +2
.nf
\fB# zpool add tank mirror c1t0d0 c1t1d0\fR
.fi
.in -2
.sp

.LP
\fBExample 6 \fRListing Available ZFS Storage Pools
.LP
The following command lists all available pools on the system. In this case, the pool \fIzion\fR is faulted due to a missing device.

.LP
The results from this command are similar to the following:

.sp
.in +2
.nf
\fB# zpool list\fR
    NAME              SIZE    USED   AVAIL    CAP  HEALTH     ALTROOT
    pool             67.5G   2.92M   67.5G     0%  ONLINE     -
    tank             67.5G   2.92M   67.5G     0%  ONLINE     -
    zion                 -       -       -     0%  FAULTED    -
.fi
.in -2
.sp

.LP
\fBExample 7 \fRDestroying a ZFS Storage Pool
.LP
The following command destroys the pool "\fItank\fR" and any datasets contained within.

.sp
.in +2
.nf
\fB# zpool destroy -f tank\fR
.fi
.in -2
.sp

.LP
\fBExample 8 \fRExporting a ZFS Storage Pool
.LP
The following command exports the devices in pool \fItank\fR so that they can be relocated or later imported.

.sp
.in +2
.nf
\fB# zpool export tank\fR
.fi
.in -2
.sp

.LP
\fBExample 9 \fRImporting a ZFS Storage Pool
.LP
The following command displays available pools, and then imports the pool "tank" for use on the system.

.LP
The results from this command are similar to the following:

.sp
.in +2
.nf
\fB# zpool import\fR
 pool: tank
   id: 15451357997522795478
state: ONLINE
action: The pool can be imported using its name or numeric identifier.
config:

       tank        ONLINE
         mirror    ONLINE
           c1t2d0  ONLINE
           c1t3d0  ONLINE

\fB# zpool import tank\fR
.fi
.in -2
.sp

.LP
\fBExample 10 \fRUpgrading All ZFS Storage Pools to the Current Version
.LP
The following command upgrades all ZFS Storage pools to the current version of the software.

.sp
.in +2
.nf
\fB# zpool upgrade -a\fR
This system is currently running ZFS version 2.
.fi
.in -2
.sp

.LP
\fBExample 11 \fRManaging Hot Spares
.LP
The following command creates a new pool with an available hot spare:

.sp
.in +2
.nf
\fB# zpool create tank mirror c0t0d0 c0t1d0 spare c0t2d0\fR
.fi
.in -2
.sp

.LP
If one of the disks were to fail, the pool would be reduced to the degraded state. The failed device can be replaced using the following command:

.sp
.in +2
.nf
\fB# zpool replace tank c0t0d0 c0t3d0\fR
.fi
.in -2
.sp

.LP
Once the data has been resilvered, the spare is automatically removed and is made available should another device fails.  The hot spare can be permanently removed from the pool using the following command:

.sp
.in +2
.nf
\fB# zpool remove tank c0t2d0\fR
.fi
.in -2
.sp

.SH EXIT STATUS
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 5n
.rt  
Successful completion. 
.RE

.sp
.ne 2
.mk
.na
\fB\fB1\fR\fR
.ad
.RS 5n
.rt  
An error occurred.
.RE

.sp
.ne 2
.mk
.na
\fB\fB2\fR\fR
.ad
.RS 5n
.rt  
Invalid command line options were specified.
.RE

.SH ATTRIBUTES
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWzfsu
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.LP
\fBzfs\fR(1M), \fBattributes\fR(5)
